{
	"id": "fb0be1890375fe990a250a304d617e5b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/MockToken_flattened.sol": {
				"content": "\n// File: lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: lib/openzeppelin-contracts/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: lib/openzeppelin-contracts/contracts/utils/Arrays.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n\n// File: lib/openzeppelin-contracts/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n\n// File: lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n\n// File: src/MockToken.sol\n\npragma solidity ^0.8.13;\n\n\n\ncontract mockERC1155Token is ERC1155(\"mockURI\") {\n    constructor() {\n        _mint(msg.sender, 1, 10 ether, \"0x\");\n        _mint(address(101), 1, 0.1 ether, \"0x\");\n    }\n\n    function mint(address _to, uint _id, uint _amount) external {\n        _mint(_to, _id, _amount, \"0x\");\n    }\n}\n\ncontract mockERC20Token is ERC20(\"CDBC\", \"CDBC\") {\n    event Log(address from);\n\n    constructor() {\n        emit Log(msg.sender);\n        _mint(msg.sender, 10 ether);\n        _mint(address(101), 2 ether);\n    }\n\n    function mint(address _to, uint _amount) external {\n        _mint(_to, _amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"src/MockToken_flattened.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MockToken_flattened.sol\":29453:33979  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MockToken_flattened.sol\":29453:33979  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071d7b3eef580c1e3a6915ed542d65099e9c745a0823b6757098e028dd03df50d64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071d7b3eef580c1e3a6915ed542d65099e9c745a0823b6757098e028dd03df50d64736f6c63430008170033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xD7B3EEF580C1E3A6915ED542D65099E9C745 LOG0 DUP3 EXTCODESIZE PUSH8 0x57098E028DD03DF5 0xD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "29453:4526:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;29453:4526:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071d7b3eef580c1e3a6915ed542d65099e9c745a0823b6757098e028dd03df50d64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xD7B3EEF580C1E3A6915ED542D65099E9C745 LOG0 DUP3 EXTCODESIZE PUSH8 0x57098E028DD03DF5 0xD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "29453:4526:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29453,
									"end": 33979,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071d7b3eef580c1e3a6915ed542d65099e9c745a0823b6757098e028dd03df50d64736f6c63430008170033",
									".code": [
										{
											"begin": 29453,
											"end": 33979,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29453,
											"end": 33979,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/MockToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"Arrays\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2341,
								"contract": "src/MockToken_flattened.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2347,
								"contract": "src/MockToken_flattened.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2349,
								"contract": "src/MockToken_flattened.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1619,
								"contract": "src/MockToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1625,
								"contract": "src/MockToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1627,
								"contract": "src/MockToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1629,
								"contract": "src/MockToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1631,
								"contract": "src/MockToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MockToken_flattened.sol\":10342:25256  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MockToken_flattened.sol\":10342:25256  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a63d55a425e06ce5962fa515a65c5e9976edb5a22bdc55cf42470d138793c27364736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a63d55a425e06ce5962fa515a65c5e9976edb5a22bdc55cf42470d138793c27364736f6c63430008170033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 RETURNDATASIZE SSTORE LOG4 0x25 0xE0 PUSH13 0xE5962FA515A65C5E9976EDB5A2 0x2B 0xDC SSTORE 0xCF TIMESTAMP SELFBALANCE 0xD SGT DUP8 SWAP4 0xC2 PUSH20 0x64736F6C63430008170033000000000000000000 ",
							"sourceMap": "10342:14914:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;10342:14914:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a63d55a425e06ce5962fa515a65c5e9976edb5a22bdc55cf42470d138793c27364736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 RETURNDATASIZE SSTORE LOG4 0x25 0xE0 PUSH13 0xE5962FA515A65C5E9976EDB5A2 0x2B 0xDC SSTORE 0xCF TIMESTAMP SELFBALANCE 0xD SGT DUP8 SWAP4 0xC2 PUSH20 0x64736F6C63430008170033000000000000000000 ",
							"sourceMap": "10342:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10342,
									"end": 25256,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a63d55a425e06ce5962fa515a65c5e9976edb5a22bdc55cf42470d138793c27364736f6c63430008170033",
									".code": [
										{
											"begin": 10342,
											"end": 25256,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10342,
											"end": 25256,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/MockToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MockToken_flattened.sol\":26541:29226  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MockToken_flattened.sol\":26541:29226  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f0eaacd4fcdce4e7743ec39fd2d32150e3739a1212f95aaf02f0cdf1aaf199864736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f0eaacd4fcdce4e7743ec39fd2d32150e3739a1212f95aaf02f0cdf1aaf199864736f6c63430008170033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xE 0xAA 0xCD 0x4F 0xCD 0xCE 0x4E PUSH24 0x43EC39FD2D32150E3739A1212F95AAF02F0CDF1AAF199864 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "26541:2685:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;26541:2685:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f0eaacd4fcdce4e7743ec39fd2d32150e3739a1212f95aaf02f0cdf1aaf199864736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xE 0xAA 0xCD 0x4F 0xCD 0xCE 0x4E PUSH24 0x43EC39FD2D32150E3739A1212F95AAF02F0CDF1AAF199864 PUSH20 0x6F6C634300081700330000000000000000000000 ",
							"sourceMap": "26541:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26541,
									"end": 29226,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f0eaacd4fcdce4e7743ec39fd2d32150e3739a1212f95aaf02f0cdf1aaf199864736f6c63430008170033",
									".code": [
										{
											"begin": 26541,
											"end": 29226,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26541,
											"end": 29226,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/MockToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"mockERC1155Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MockToken_flattened.sol\":72476:72761  contract mockERC1155Token is ERC1155(\"mockURI\") {... */\n  mstore(0x40, 0x80)\n    /* \"src/MockToken_flattened.sol\":72530:72646  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/MockToken_flattened.sol\":56738:56800  constructor(string memory uri_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup2\n  mstore\n  shl(0xc8, 0x6d6f636b555249)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"src/MockToken_flattened.sol\":56780:56793  _setURI(uri_) */\n  tag_5\n    /* \"src/MockToken_flattened.sol\":56738:56800  constructor(string memory uri_) {... */\n  dup2\n    /* \"src/MockToken_flattened.sol\":56780:56787  _setURI */\n  tag_6\n    /* \"src/MockToken_flattened.sol\":56780:56793  _setURI(uri_) */\n  jump\t// in\ntag_5:\n    /* \"src/MockToken_flattened.sol\":56738:56800  constructor(string memory uri_) {... */\n  pop\n    /* \"src/MockToken_flattened.sol\":72554:72590  _mint(msg.sender, 1, 10 ether, \"0x\") */\n  tag_8\n    /* \"src/MockToken_flattened.sol\":72560:72570  msg.sender */\n  caller\n    /* \"src/MockToken_flattened.sol\":72572:72573  1 */\n  0x01\n    /* \"src/MockToken_flattened.sol\":72575:72583  10 ether */\n  0x8ac7230489e80000\n    /* \"src/MockToken_flattened.sol\":72554:72590  _mint(msg.sender, 1, 10 ether, \"0x\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf3, 0x060f)\n  dup2\n  mstore\n  pop\n    /* \"src/MockToken_flattened.sol\":72554:72559  _mint */\n  shl(0x20, tag_9)\n    /* \"src/MockToken_flattened.sol\":72554:72590  _mint(msg.sender, 1, 10 ether, \"0x\") */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"src/MockToken_flattened.sol\":72600:72639  _mint(address(101), 1, 0.1 ether, \"0x\") */\n  tag_10\n    /* \"src/MockToken_flattened.sol\":72614:72617  101 */\n  0x65\n    /* \"src/MockToken_flattened.sol\":72620:72621  1 */\n  0x01\n    /* \"src/MockToken_flattened.sol\":72623:72632  0.1 ether */\n  0x016345785d8a0000\n    /* \"src/MockToken_flattened.sol\":72600:72639  _mint(address(101), 1, 0.1 ether, \"0x\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf3, 0x060f)\n  dup2\n  mstore\n  pop\n    /* \"src/MockToken_flattened.sol\":72600:72605  _mint */\n  shl(0x20, tag_9)\n    /* \"src/MockToken_flattened.sol\":72600:72639  _mint(address(101), 1, 0.1 ether, \"0x\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"src/MockToken_flattened.sol\":72476:72761  contract mockERC1155Token is ERC1155(\"mockURI\") {... */\n  jump(tag_109)\n    /* \"src/MockToken_flattened.sol\":65769:65855  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"src/MockToken_flattened.sol\":65835:65839  _uri */\n  0x02\n    /* \"src/MockToken_flattened.sol\":65835:65848  _uri = newuri */\n  tag_13\n    /* \"src/MockToken_flattened.sol\":65842:65848  newuri */\n  dup3\n    /* \"src/MockToken_flattened.sol\":65835:65839  _uri */\n  dup3\n    /* \"src/MockToken_flattened.sol\":65835:65848  _uri = newuri */\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"src/MockToken_flattened.sol\":65769:65855  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"src/MockToken_flattened.sol\":66233:66579  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":66329:66345  to == address(0) */\n  dup5\n  and\n    /* \"src/MockToken_flattened.sol\":66325:66413  if (to == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"src/MockToken_flattened.sol\":66368:66402  ERC1155InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x2bfa23e7)\n  dup2\n  mstore\n    /* \"src/MockToken_flattened.sol\":66399:66400  0 */\n  0x00\n    /* \"src/MockToken_flattened.sol\":66368:66402  ERC1155InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2872:2923   */\n  mstore\n    /* \"#utility.yul\":2845:2863   */\n  0x24\n  add\n    /* \"src/MockToken_flattened.sol\":66368:66402  ERC1155InvalidReceiver(address(0)) */\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/MockToken_flattened.sol\":66325:66413  if (to == address(0)) {... */\ntag_16:\n    /* \"src/MockToken_flattened.sol\":71861:71865  0x40 */\n  0x40\n    /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n  dup1\n  mload\n    /* \"src/MockToken_flattened.sol\":71931:71932  1 */\n  0x01\n    /* \"src/MockToken_flattened.sol\":71916:71933  mstore(array1, 1) */\n  dup1\n  dup3\n  mstore\n    /* \"src/MockToken_flattened.sol\":72062:72066  0x20 */\n  0x20\n    /* \"src/MockToken_flattened.sol\":72050:72067  add(array1, 0x20) */\n  dup3\n  add\n    /* \"src/MockToken_flattened.sol\":72043:72078  mstore(add(array1, 0x20), element1) */\n  dup7\n  swap1\n  mstore\n    /* \"src/MockToken_flattened.sol\":72179:72196  add(array1, 0x40) */\n  dup2\n  dup4\n  add\n    /* \"src/MockToken_flattened.sol\":72209:72226  mstore(array2, 1) */\n  swap1\n  dup2\n  mstore\n    /* \"src/MockToken_flattened.sol\":71675:71698  uint256[] memory array1 */\n  0x60\n    /* \"src/MockToken_flattened.sol\":72246:72263  add(array2, 0x20) */\n  dup3\n  add\n    /* \"src/MockToken_flattened.sol\":72239:72274  mstore(add(array2, 0x20), element2) */\n  dup6\n  swap1\n  mstore\n    /* \"src/MockToken_flattened.sol\":72382:72399  add(array2, 0x40) */\n  0x80\n  dup3\n  add\n    /* \"src/MockToken_flattened.sol\":72369:72400  mstore(0x40, add(array2, 0x40)) */\n  swap1\n  swap3\n  mstore\n    /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n  swap1\n    /* \"src/MockToken_flattened.sol\":66511:66572  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  tag_21\n  0x00\n    /* \"src/MockToken_flattened.sol\":66550:66552  to */\n  dup8\n    /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n  dup5\n    /* \"src/MockToken_flattened.sol\":72179:72196  add(array1, 0x40) */\n  dup5\n    /* \"src/MockToken_flattened.sol\":66567:66571  data */\n  dup8\n    /* \"src/MockToken_flattened.sol\":66511:66537  _updateWithAcceptanceCheck */\n  tag_22\n    /* \"src/MockToken_flattened.sol\":66511:66572  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  jump\t// in\ntag_21:\n    /* \"src/MockToken_flattened.sol\":66315:66579  {... */\n  pop\n  pop\n    /* \"src/MockToken_flattened.sol\":66233:66579  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"src/MockToken_flattened.sol\":62491:63181  function _updateWithAcceptanceCheck(... */\ntag_22:\n    /* \"src/MockToken_flattened.sol\":62692:62722  _update(from, to, ids, values) */\n  tag_25\n    /* \"src/MockToken_flattened.sol\":62700:62704  from */\n  dup6\n    /* \"src/MockToken_flattened.sol\":62706:62708  to */\n  dup6\n    /* \"src/MockToken_flattened.sol\":62710:62713  ids */\n  dup6\n    /* \"src/MockToken_flattened.sol\":62715:62721  values */\n  dup6\n    /* \"src/MockToken_flattened.sol\":62692:62699  _update */\n  tag_26\n    /* \"src/MockToken_flattened.sol\":62692:62722  _update(from, to, ids, values) */\n  jump\t// in\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":62736:62752  to != address(0) */\n  dup5\n  and\n  iszero\n    /* \"src/MockToken_flattened.sol\":62732:63175  if (to != address(0)) {... */\n  tag_27\n  jumpi\n    /* \"src/MockToken_flattened.sol\":62817:62827  ids.length */\n  dup3\n  mload\n    /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n  caller\n  swap1\n    /* \"src/MockToken_flattened.sol\":62831:62832  1 */\n  0x01\n    /* \"src/MockToken_flattened.sol\":62817:62832  ids.length == 1 */\n  sub\n    /* \"src/MockToken_flattened.sol\":62813:63165  if (ids.length == 1) {... */\n  tag_30\n  jumpi\n    /* \"src/MockToken_flattened.sol\":33555:33559  0x20 */\n  0x20\n    /* \"src/MockToken_flattened.sol\":33526:33561  add(add(arr, 0x20), mul(pos, 0x20)) */\n  dup5\n  dup2\n  add\n    /* \"src/MockToken_flattened.sol\":33520:33562  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"src/MockToken_flattened.sol\":33526:33561  add(add(arr, 0x20), mul(pos, 0x20)) */\n  swap1\n  dup5\n  add\n    /* \"src/MockToken_flattened.sol\":33520:33562  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"src/MockToken_flattened.sol\":62970:63037  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  tag_34\n    /* \"src/MockToken_flattened.sol\":63001:63009  operator */\n  dup4\n    /* \"src/MockToken_flattened.sol\":63011:63015  from */\n  dup10\n    /* \"src/MockToken_flattened.sol\":63017:63019  to */\n  dup10\n    /* \"src/MockToken_flattened.sol\":33520:33562  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  dup6\n  dup6\n    /* \"src/MockToken_flattened.sol\":63032:63036  data */\n  dup10\n    /* \"src/MockToken_flattened.sol\":62970:63000  _doSafeTransferAcceptanceCheck */\n  tag_35\n    /* \"src/MockToken_flattened.sol\":62970:63037  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  jump\t// in\ntag_34:\n    /* \"src/MockToken_flattened.sol\":62834:63052  {... */\n  pop\n  pop\n    /* \"src/MockToken_flattened.sol\":62813:63165  if (ids.length == 1) {... */\n  jump(tag_21)\ntag_30:\n    /* \"src/MockToken_flattened.sol\":63076:63150  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  tag_21\n    /* \"src/MockToken_flattened.sol\":63112:63120  operator */\n  dup2\n    /* \"src/MockToken_flattened.sol\":63122:63126  from */\n  dup8\n    /* \"src/MockToken_flattened.sol\":63128:63130  to */\n  dup8\n    /* \"src/MockToken_flattened.sol\":63132:63135  ids */\n  dup8\n    /* \"src/MockToken_flattened.sol\":63137:63143  values */\n  dup8\n    /* \"src/MockToken_flattened.sol\":63145:63149  data */\n  dup8\n    /* \"src/MockToken_flattened.sol\":63076:63111  _doSafeBatchTransferAcceptanceCheck */\n  tag_38\n    /* \"src/MockToken_flattened.sol\":63076:63150  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  jump\t// in\n    /* \"src/MockToken_flattened.sol\":62732:63175  if (to != address(0)) {... */\ntag_27:\n    /* \"src/MockToken_flattened.sol\":62491:63181  function _updateWithAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"src/MockToken_flattened.sol\":60631:61912  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\ntag_26:\n    /* \"src/MockToken_flattened.sol\":60766:60772  values */\n  dup1\n    /* \"src/MockToken_flattened.sol\":60766:60779  values.length */\n  mload\n    /* \"src/MockToken_flattened.sol\":60752:60755  ids */\n  dup3\n    /* \"src/MockToken_flattened.sol\":60752:60762  ids.length */\n  mload\n    /* \"src/MockToken_flattened.sol\":60752:60779  ids.length != values.length */\n  eq\n    /* \"src/MockToken_flattened.sol\":60748:60865  if (ids.length != values.length) {... */\n  tag_40\n  jumpi\n    /* \"src/MockToken_flattened.sol\":60828:60838  ids.length */\n  dup2\n  mload\n    /* \"src/MockToken_flattened.sol\":60840:60853  values.length */\n  dup2\n  mload\n    /* \"src/MockToken_flattened.sol\":60802:60854  ERC1155InvalidArrayLength(ids.length, values.length) */\n  mload(0x40)\n  shl(0xe0, 0x5b059991)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"#utility.yul\":3108:3133   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":3149:3167   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3142:3176   */\n  mstore\n    /* \"#utility.yul\":3081:3099   */\n  0x44\n  add\n    /* \"src/MockToken_flattened.sol\":60802:60854  ERC1155InvalidArrayLength(ids.length, values.length) */\n  tag_17\n    /* \"#utility.yul\":2934:3182   */\n  jump\n    /* \"src/MockToken_flattened.sol\":60748:60865  if (ids.length != values.length) {... */\ntag_40:\n    /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n  caller\n    /* \"src/MockToken_flattened.sol\":60875:60891  address operator */\n  0x00\n    /* \"src/MockToken_flattened.sol\":60917:61608  for (uint256 i = 0; i < ids.length; ++i) {... */\ntag_44:\n    /* \"src/MockToken_flattened.sol\":60941:60944  ids */\n  dup4\n    /* \"src/MockToken_flattened.sol\":60941:60951  ids.length */\n  mload\n    /* \"src/MockToken_flattened.sol\":60937:60938  i */\n  dup2\n    /* \"src/MockToken_flattened.sol\":60937:60951  i < ids.length */\n  lt\n    /* \"src/MockToken_flattened.sol\":60917:61608  for (uint256 i = 0; i < ids.length; ++i) {... */\n  iszero\n  tag_45\n  jumpi\n    /* \"src/MockToken_flattened.sol\":33555:33559  0x20 */\n  0x20\n    /* \"src/MockToken_flattened.sol\":33546:33560  mul(pos, 0x20) */\n  dup2\n  dup2\n  mul\n    /* \"src/MockToken_flattened.sol\":33526:33561  add(add(arr, 0x20), mul(pos, 0x20)) */\n  dup6\n  dup2\n  add\n  dup3\n  add\n    /* \"src/MockToken_flattened.sol\":33520:33562  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"src/MockToken_flattened.sol\":33526:33561  add(add(arr, 0x20), mul(pos, 0x20)) */\n  swap1\n  dup6\n  add\n  swap1\n  swap2\n  add\n    /* \"src/MockToken_flattened.sol\":33520:33562  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61087:61105  from != address(0) */\n  dup9\n  and\n  iszero\n    /* \"src/MockToken_flattened.sol\":61083:61503  if (from != address(0)) {... */\n  tag_49\n  jumpi\n    /* \"src/MockToken_flattened.sol\":61125:61144  uint256 fromBalance */\n  0x00\n    /* \"src/MockToken_flattened.sol\":61147:61160  _balances[id] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61147:61166  _balances[id][from] */\n  dup13\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n    /* \"src/MockToken_flattened.sol\":61188:61207  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"src/MockToken_flattened.sol\":61184:61313  if (fromBalance < value) {... */\n  iszero\n  tag_50\n  jumpi\n    /* \"src/MockToken_flattened.sol\":61238:61294  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n  mload(0x40)\n  shl(0xe0, 0x03dee4c5)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3436:3468   */\n  dup11\n  and\n    /* \"src/MockToken_flattened.sol\":61238:61294  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3418:3469   */\n  mstore\n    /* \"#utility.yul\":3485:3503   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3478:3512   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3528:3546   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3521:3555   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3571:3589   */\n  0x64\n  dup2\n  add\n    /* \"#utility.yul\":3564:3598   */\n  dup5\n  swap1\n  mstore\n    /* \"#utility.yul\":3390:3409   */\n  0x84\n  add\n    /* \"src/MockToken_flattened.sol\":61238:61294  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n  tag_17\n    /* \"#utility.yul\":3187:3604   */\n  jump\n    /* \"src/MockToken_flattened.sol\":61184:61313  if (fromBalance < value) {... */\ntag_50:\n    /* \"src/MockToken_flattened.sol\":61429:61438  _balances */\n  0x00\n    /* \"src/MockToken_flattened.sol\":61429:61442  _balances[id] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61429:61448  _balances[id][from] */\n  dup14\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"src/MockToken_flattened.sol\":61451:61470  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"src/MockToken_flattened.sol\":61429:61470  _balances[id][from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"src/MockToken_flattened.sol\":61083:61503  if (from != address(0)) {... */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61521:61537  to != address(0) */\n  dup8\n  and\n  iszero\n    /* \"src/MockToken_flattened.sol\":61517:61598  if (to != address(0)) {... */\n  tag_53\n  jumpi\n    /* \"src/MockToken_flattened.sol\":61557:61566  _balances */\n  0x00\n    /* \"src/MockToken_flattened.sol\":61557:61570  _balances[id] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61557:61574  _balances[id][to] */\n  dup12\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n    /* \"src/MockToken_flattened.sol\":61557:61583  _balances[id][to] += value */\n  dup1\n  sload\n    /* \"src/MockToken_flattened.sol\":61578:61583  value */\n  dup4\n  swap3\n    /* \"src/MockToken_flattened.sol\":61557:61566  _balances */\n  swap1\n    /* \"src/MockToken_flattened.sol\":61557:61583  _balances[id][to] += value */\n  tag_54\n  swap1\n    /* \"src/MockToken_flattened.sol\":61578:61583  value */\n  dup5\n  swap1\n    /* \"src/MockToken_flattened.sol\":61557:61583  _balances[id][to] += value */\n  tag_55\n  jump\t// in\ntag_54:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"src/MockToken_flattened.sol\":61517:61598  if (to != address(0)) {... */\ntag_53:\n  pop\n  pop\n    /* \"src/MockToken_flattened.sol\":60953:60956  ++i */\n  0x01\n  add\n    /* \"src/MockToken_flattened.sol\":60917:61608  for (uint256 i = 0; i < ids.length; ++i) {... */\n  jump(tag_44)\ntag_45:\n  pop\n    /* \"src/MockToken_flattened.sol\":61622:61625  ids */\n  dup3\n    /* \"src/MockToken_flattened.sol\":61622:61632  ids.length */\n  mload\n    /* \"src/MockToken_flattened.sol\":61636:61637  1 */\n  0x01\n    /* \"src/MockToken_flattened.sol\":61622:61637  ids.length == 1 */\n  sub\n    /* \"src/MockToken_flattened.sol\":61618:61906  if (ids.length == 1) {... */\n  tag_56\n  jumpi\n    /* \"src/MockToken_flattened.sol\":33555:33559  0x20 */\n  0x20\n    /* \"src/MockToken_flattened.sol\":33526:33561  add(add(arr, 0x20), mul(pos, 0x20)) */\n  dup4\n  add\n    /* \"src/MockToken_flattened.sol\":33520:33562  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"src/MockToken_flattened.sol\":61653:61663  uint256 id */\n  0x00\n  swap1\n    /* \"src/MockToken_flattened.sol\":33555:33559  0x20 */\n  0x20\n    /* \"src/MockToken_flattened.sol\":33526:33561  add(add(arr, 0x20), mul(pos, 0x20)) */\n  dup5\n  add\n    /* \"src/MockToken_flattened.sol\":33520:33562  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"src/MockToken_flattened.sol\":61653:61691  uint256 id = ids.unsafeMemoryAccess(0) */\n  swap1\n  swap2\n  pop\n    /* \"src/MockToken_flattened.sol\":61799:61801  to */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n  and\n    /* \"src/MockToken_flattened.sol\":61793:61797  from */\n  dup8\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n  and\n    /* \"src/MockToken_flattened.sol\":61783:61791  operator */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n  and\n  0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n    /* \"src/MockToken_flattened.sol\":61803:61805  id */\n  dup6\n    /* \"src/MockToken_flattened.sol\":61807:61812  value */\n  dup6\n    /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n  mload(0x40)\n  tag_59\n  swap3\n  swap2\n  swap1\n    /* \"#utility.yul\":3108:3133   */\n  swap2\n  dup3\n  mstore\n    /* \"#utility.yul\":3164:3166   */\n  0x20\n    /* \"#utility.yul\":3149:3167   */\n  dup3\n  add\n    /* \"#utility.yul\":3142:3176   */\n  mstore\n    /* \"#utility.yul\":3096:3098   */\n  0x40\n    /* \"#utility.yul\":3081:3099   */\n  add\n  swap1\n    /* \"#utility.yul\":2934:3182   */\n  jump\n    /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\ntag_59:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"src/MockToken_flattened.sol\":61639:61824  {... */\n  pop\n  pop\n    /* \"src/MockToken_flattened.sol\":61618:61906  if (ids.length == 1) {... */\n  jump(tag_27)\ntag_56:\n    /* \"src/MockToken_flattened.sol\":61879:61881  to */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n  and\n    /* \"src/MockToken_flattened.sol\":61873:61877  from */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n  and\n    /* \"src/MockToken_flattened.sol\":61863:61871  operator */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n  and\n  0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n    /* \"src/MockToken_flattened.sol\":61883:61886  ids */\n  dup7\n    /* \"src/MockToken_flattened.sol\":61888:61894  values */\n  dup7\n    /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n  mload(0x40)\n  tag_61\n  swap3\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_61:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"src/MockToken_flattened.sol\":60738:61912  {... */\n  pop\n    /* \"src/MockToken_flattened.sol\":60631:61912  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"src/MockToken_flattened.sol\":69248:70222  function _doSafeTransferAcceptanceCheck(... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":69454:69468  to.code.length */\n  dup5\n  and\n  extcodesize\n    /* \"src/MockToken_flattened.sol\":69454:69472  to.code.length > 0 */\n  iszero\n    /* \"src/MockToken_flattened.sol\":69450:70216  if (to.code.length > 0) {... */\n  tag_21\n  jumpi\n    /* \"src/MockToken_flattened.sol\":69492:69563  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n  mload(0x40)\n  shl(0xe0, 0xf23a6e61)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":69492:69530  IERC1155Receiver(to).onERC1155Received */\n  dup6\n  and\n  swap1\n  0xf23a6e61\n  swap1\n    /* \"src/MockToken_flattened.sol\":69492:69563  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n  tag_67\n  swap1\n    /* \"src/MockToken_flattened.sol\":69531:69539  operator */\n  dup10\n  swap1\n    /* \"src/MockToken_flattened.sol\":69541:69545  from */\n  dup10\n  swap1\n    /* \"src/MockToken_flattened.sol\":69547:69549  id */\n  dup9\n  swap1\n    /* \"src/MockToken_flattened.sol\":69551:69556  value */\n  dup9\n  swap1\n    /* \"src/MockToken_flattened.sol\":69558:69562  data */\n  dup9\n  swap1\n    /* \"src/MockToken_flattened.sol\":69492:69563  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n  0x04\n  add\n  tag_68\n  jump\t// in\ntag_67:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_69\n  jumpi\n  pop\n  0x40\n  dup1\n  mload\n  0x1f\n  returndatasize\n  swap1\n  dup2\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n  tag_70\n  swap2\n  dup2\n  add\n  swap1\n  tag_71\n  jump\t// in\ntag_70:\n  0x01\ntag_69:\n    /* \"src/MockToken_flattened.sol\":69488:70206  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n  tag_72\n  jumpi\n  returndatasize\n  dup1\n  dup1\n  iszero\n  tag_77\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_76)\ntag_77:\n  0x60\n  swap2\n  pop\ntag_76:\n  pop\n    /* \"src/MockToken_flattened.sol\":69847:69853  reason */\n  dup1\n    /* \"src/MockToken_flattened.sol\":69847:69860  reason.length */\n  mload\n    /* \"src/MockToken_flattened.sol\":69864:69865  0 */\n  0x00\n    /* \"src/MockToken_flattened.sol\":69847:69865  reason.length == 0 */\n  sub\n    /* \"src/MockToken_flattened.sol\":69843:70192  if (reason.length == 0) {... */\n  tag_78\n  jumpi\n    /* \"src/MockToken_flattened.sol\":69951:69977  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  shl(0xe1, 0x2bfa23e7)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2890:2922   */\n  dup7\n  and\n    /* \"src/MockToken_flattened.sol\":69951:69977  ERC1155InvalidReceiver(to) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2872:2923   */\n  mstore\n    /* \"#utility.yul\":2845:2863   */\n  0x24\n  add\n    /* \"src/MockToken_flattened.sol\":69951:69977  ERC1155InvalidReceiver(to) */\n  tag_17\n    /* \"#utility.yul\":2726:2929   */\n  jump\n    /* \"src/MockToken_flattened.sol\":69843:70192  if (reason.length == 0) {... */\ntag_78:\n    /* \"src/MockToken_flattened.sol\":70144:70150  reason */\n  dup1\n    /* \"src/MockToken_flattened.sol\":70138:70151  mload(reason) */\n  mload\n    /* \"src/MockToken_flattened.sol\":70129:70135  reason */\n  dup2\n    /* \"src/MockToken_flattened.sol\":70125:70127  32 */\n  0x20\n    /* \"src/MockToken_flattened.sol\":70121:70136  add(32, reason) */\n  add\n    /* \"src/MockToken_flattened.sol\":70114:70152  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"src/MockToken_flattened.sol\":69488:70206  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\ntag_72:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"src/MockToken_flattened.sol\":69612:69667  response != IERC1155Receiver.onERC1155Received.selector */\n  dup2\n  and\n  shl(0xe0, 0xf23a6e61)\n  eq\n    /* \"src/MockToken_flattened.sol\":69608:69782  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n  tag_82\n  jumpi\n    /* \"src/MockToken_flattened.sol\":69737:69763  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  shl(0xe1, 0x2bfa23e7)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2890:2922   */\n  dup7\n  and\n    /* \"src/MockToken_flattened.sol\":69737:69763  ERC1155InvalidReceiver(to) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2872:2923   */\n  mstore\n    /* \"#utility.yul\":2845:2863   */\n  0x24\n  add\n    /* \"src/MockToken_flattened.sol\":69737:69763  ERC1155InvalidReceiver(to) */\n  tag_17\n    /* \"#utility.yul\":2726:2929   */\n  jump\n    /* \"src/MockToken_flattened.sol\":69608:69782  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\ntag_82:\n    /* \"src/MockToken_flattened.sol\":69564:69796  returns (bytes4 response) {... */\n  pop\n    /* \"src/MockToken_flattened.sol\":69248:70222  function _doSafeTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"src/MockToken_flattened.sol\":70410:71451  function _doSafeBatchTransferAcceptanceCheck(... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":70641:70655  to.code.length */\n  dup5\n  and\n  extcodesize\n    /* \"src/MockToken_flattened.sol\":70641:70659  to.code.length > 0 */\n  iszero\n    /* \"src/MockToken_flattened.sol\":70637:71445  if (to.code.length > 0) {... */\n  tag_21\n  jumpi\n    /* \"src/MockToken_flattened.sol\":70679:70757  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n  mload(0x40)\n  shl(0xe0, 0xbc197c81)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":70679:70722  IERC1155Receiver(to).onERC1155BatchReceived */\n  dup6\n  and\n  swap1\n  0xbc197c81\n  swap1\n    /* \"src/MockToken_flattened.sol\":70679:70757  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n  tag_86\n  swap1\n    /* \"src/MockToken_flattened.sol\":70723:70731  operator */\n  dup10\n  swap1\n    /* \"src/MockToken_flattened.sol\":70733:70737  from */\n  dup10\n  swap1\n    /* \"src/MockToken_flattened.sol\":70739:70742  ids */\n  dup9\n  swap1\n    /* \"src/MockToken_flattened.sol\":70744:70750  values */\n  dup9\n  swap1\n    /* \"src/MockToken_flattened.sol\":70752:70756  data */\n  dup9\n  swap1\n    /* \"src/MockToken_flattened.sol\":70679:70757  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n  0x04\n  add\n  tag_87\n  jump\t// in\ntag_86:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_88\n  jumpi\n  pop\n  0x40\n  dup1\n  mload\n  0x1f\n  returndatasize\n  swap1\n  dup2\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n  tag_89\n  swap2\n  dup2\n  add\n  swap1\n  tag_71\n  jump\t// in\ntag_89:\n  0x01\ntag_88:\n    /* \"src/MockToken_flattened.sol\":70675:71435  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n  tag_90\n  jumpi\n  returndatasize\n  dup1\n  dup1\n  iszero\n  tag_77\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_76)\ntag_90:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"src/MockToken_flattened.sol\":70836:70896  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n  dup2\n  and\n  shl(0xe0, 0xbc197c81)\n  eq\n    /* \"src/MockToken_flattened.sol\":70832:71011  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n  tag_82\n  jumpi\n    /* \"src/MockToken_flattened.sol\":70966:70992  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  shl(0xe1, 0x2bfa23e7)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2890:2922   */\n  dup7\n  and\n    /* \"src/MockToken_flattened.sol\":70966:70992  ERC1155InvalidReceiver(to) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2872:2923   */\n  mstore\n    /* \"#utility.yul\":2845:2863   */\n  0x24\n  add\n    /* \"src/MockToken_flattened.sol\":70966:70992  ERC1155InvalidReceiver(to) */\n  tag_17\n    /* \"#utility.yul\":2726:2929   */\n  jump\n    /* \"#utility.yul\":14:141   */\ntag_102:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_103:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_112:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_113:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1200   */\ntag_105:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1194   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":819:824   */\n  dup2\n    /* \"#utility.yul\":816:817   */\n  0x00\n    /* \"#utility.yul\":809:825   */\n  mstore\n    /* \"#utility.yul\":863:867   */\n  0x20\n    /* \"#utility.yul\":860:861   */\n  0x00\n    /* \"#utility.yul\":850:868   */\n  keccak256\n    /* \"#utility.yul\":933:935   */\n  0x1f\n    /* \"#utility.yul\":921:931   */\n  dup6\n    /* \"#utility.yul\":917:936   */\n  add\n    /* \"#utility.yul\":914:915   */\n  0x05\n    /* \"#utility.yul\":910:937   */\n  shr\n    /* \"#utility.yul\":904:908   */\n  dup2\n    /* \"#utility.yul\":900:938   */\n  add\n    /* \"#utility.yul\":969:973   */\n  0x20\n    /* \"#utility.yul\":957:967   */\n  dup7\n    /* \"#utility.yul\":954:974   */\n  lt\n    /* \"#utility.yul\":951:998   */\n  iszero\n  tag_117\n  jumpi\n  pop\n    /* \"#utility.yul\":992:996   */\n  dup1\n    /* \"#utility.yul\":951:998   */\ntag_117:\n    /* \"#utility.yul\":1047:1049   */\n  0x1f\n    /* \"#utility.yul\":1042:1045   */\n  dup6\n    /* \"#utility.yul\":1038:1050   */\n  add\n    /* \"#utility.yul\":1035:1036   */\n  0x05\n    /* \"#utility.yul\":1031:1051   */\n  shr\n    /* \"#utility.yul\":1025:1029   */\n  dup3\n    /* \"#utility.yul\":1021:1052   */\n  add\n    /* \"#utility.yul\":1011:1052   */\n  swap2\n  pop\n    /* \"#utility.yul\":1102:1184   */\ntag_118:\n    /* \"#utility.yul\":1120:1122   */\n  dup2\n    /* \"#utility.yul\":1113:1118   */\n  dup2\n    /* \"#utility.yul\":1110:1123   */\n  lt\n    /* \"#utility.yul\":1102:1184   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":1165:1182   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1146:1147   */\n  0x01\n    /* \"#utility.yul\":1135:1148   */\n  add\n    /* \"#utility.yul\":1102:1184   */\n  jump(tag_118)\n    /* \"#utility.yul\":748:1194   */\ntag_116:\n    /* \"#utility.yul\":657:1200   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1376:2721   */\ntag_14:\n    /* \"#utility.yul\":1496:1506   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1518:1548   */\n  dup2\n  gt\n    /* \"#utility.yul\":1515:1571   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":1551:1569   */\n  tag_124\n  tag_102\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":1580:1677   */\n  tag_125\n    /* \"#utility.yul\":1670:1676   */\n  dup2\n    /* \"#utility.yul\":1630:1668   */\n  tag_126\n    /* \"#utility.yul\":1662:1666   */\n  dup5\n    /* \"#utility.yul\":1656:1667   */\n  sload\n    /* \"#utility.yul\":1630:1668   */\n  tag_103\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1624:1628   */\n  dup5\n    /* \"#utility.yul\":1580:1677   */\n  tag_105\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1732:1736   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1789:1791   */\n  0x1f\n    /* \"#utility.yul\":1778:1792   */\n  dup4\n  gt\n    /* \"#utility.yul\":1806:1807   */\n  0x01\n    /* \"#utility.yul\":1801:2464   */\n  dup2\n  eq\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2508:2509   */\n  0x00\n    /* \"#utility.yul\":2525:2531   */\n  dup5\n    /* \"#utility.yul\":2522:2611   */\n  iszero\n  tag_129\n  jumpi\n  pop\n    /* \"#utility.yul\":2577:2596   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2571:2597   */\n  mload\n    /* \"#utility.yul\":2522:2611   */\ntag_129:\n  not(0x00)\n    /* \"#utility.yul\":1333:1334   */\n  0x03\n    /* \"#utility.yul\":1329:1340   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1325:1349   */\n  shr\n    /* \"#utility.yul\":1321:1350   */\n  not\n    /* \"#utility.yul\":1311:1351   */\n  and\n    /* \"#utility.yul\":1357:1358   */\n  0x01\n    /* \"#utility.yul\":1353:1364   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1308:1365   */\n  or\n    /* \"#utility.yul\":2624:2705   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1771:2715   */\n  jump(tag_21)\n    /* \"#utility.yul\":1801:2464   */\ntag_128:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1837:1857   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1955:2191   */\ntag_132:\n    /* \"#utility.yul\":1969:1976   */\n  dup3\n    /* \"#utility.yul\":1966:1967   */\n  dup2\n    /* \"#utility.yul\":1963:1977   */\n  lt\n    /* \"#utility.yul\":1955:2191   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":2058:2077   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2052:2078   */\n  mload\n    /* \"#utility.yul\":2037:2079   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2150:2177   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2118:2119   */\n  0x01\n    /* \"#utility.yul\":2106:2120   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1985:2004   */\n  dup5\n  add\n    /* \"#utility.yul\":1955:2191   */\n  jump(tag_132)\ntag_134:\n    /* \"#utility.yul\":1959:1962   */\n  pop\n    /* \"#utility.yul\":2219:2225   */\n  dup6\n    /* \"#utility.yul\":2210:2217   */\n  dup3\n    /* \"#utility.yul\":2207:2226   */\n  lt\n    /* \"#utility.yul\":2204:2405   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":2280:2299   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2274:2300   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2363:2364   */\n  0x03\n    /* \"#utility.yul\":2359:2373   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2375:2378   */\n  0xf8\n    /* \"#utility.yul\":2355:2379   */\n  and\n    /* \"#utility.yul\":2351:2388   */\n  shr\n    /* \"#utility.yul\":2347:2389   */\n  not\n    /* \"#utility.yul\":2332:2390   */\n  and\n    /* \"#utility.yul\":2317:2391   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2204:2405   */\ntag_135:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2451:2452   */\n  0x01\n    /* \"#utility.yul\":2435:2449   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2431:2453   */\n  add\n    /* \"#utility.yul\":2418:2454   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1376:2721   */\n  jump\t// out\n    /* \"#utility.yul\":3609:3831   */\ntag_55:\n    /* \"#utility.yul\":3674:3683   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3695:3705   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3692:3825   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":3747:3757   */\n  0x4e487b71\n    /* \"#utility.yul\":3742:3745   */\n  0xe0\n    /* \"#utility.yul\":3738:3758   */\n  shl\n    /* \"#utility.yul\":3735:3736   */\n  0x00\n    /* \"#utility.yul\":3728:3759   */\n  mstore\n    /* \"#utility.yul\":3782:3786   */\n  0x11\n    /* \"#utility.yul\":3779:3780   */\n  0x04\n    /* \"#utility.yul\":3772:3787   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3692:3825   */\ntag_140:\n    /* \"#utility.yul\":3609:3831   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3836:4275   */\ntag_107:\n    /* \"#utility.yul\":3889:3892   */\n  0x00\n    /* \"#utility.yul\":3927:3932   */\n  dup2\n    /* \"#utility.yul\":3921:3933   */\n  mload\n    /* \"#utility.yul\":3954:3960   */\n  dup1\n    /* \"#utility.yul\":3949:3952   */\n  dup5\n    /* \"#utility.yul\":3942:3961   */\n  mstore\n    /* \"#utility.yul\":3980:3984   */\n  0x20\n    /* \"#utility.yul\":4009:4013   */\n  dup1\n    /* \"#utility.yul\":4004:4007   */\n  dup6\n    /* \"#utility.yul\":4000:4014   */\n  add\n    /* \"#utility.yul\":3993:4014   */\n  swap5\n  pop\n    /* \"#utility.yul\":4048:4052   */\n  0x20\n    /* \"#utility.yul\":4041:4046   */\n  dup5\n    /* \"#utility.yul\":4037:4053   */\n  add\n    /* \"#utility.yul\":4071:4072   */\n  0x00\n    /* \"#utility.yul\":4081:4250   */\ntag_142:\n    /* \"#utility.yul\":4095:4101   */\n  dup4\n    /* \"#utility.yul\":4092:4093   */\n  dup2\n    /* \"#utility.yul\":4089:4102   */\n  lt\n    /* \"#utility.yul\":4081:4250   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":4156:4169   */\n  dup2\n  mload\n    /* \"#utility.yul\":4144:4170   */\n  dup8\n  mstore\n    /* \"#utility.yul\":4190:4202   */\n  swap6\n  dup3\n  add\n  swap6\n    /* \"#utility.yul\":4225:4240   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":4117:4118   */\n  0x01\n    /* \"#utility.yul\":4110:4119   */\n  add\n    /* \"#utility.yul\":4081:4250   */\n  jump(tag_142)\ntag_144:\n  pop\n    /* \"#utility.yul\":4266:4269   */\n  swap5\n  swap6\n    /* \"#utility.yul\":3836:4275   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4280:4745   */\ntag_62:\n    /* \"#utility.yul\":4537:4539   */\n  0x40\n    /* \"#utility.yul\":4526:4535   */\n  dup2\n    /* \"#utility.yul\":4519:4540   */\n  mstore\n    /* \"#utility.yul\":4500:4504   */\n  0x00\n    /* \"#utility.yul\":4563:4619   */\n  tag_146\n    /* \"#utility.yul\":4615:4617   */\n  0x40\n    /* \"#utility.yul\":4604:4613   */\n  dup4\n    /* \"#utility.yul\":4600:4618   */\n  add\n    /* \"#utility.yul\":4592:4598   */\n  dup6\n    /* \"#utility.yul\":4563:4619   */\n  tag_107\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4667:4676   */\n  dup3\n    /* \"#utility.yul\":4659:4665   */\n  dup2\n    /* \"#utility.yul\":4655:4677   */\n  sub\n    /* \"#utility.yul\":4650:4652   */\n  0x20\n    /* \"#utility.yul\":4639:4648   */\n  dup5\n    /* \"#utility.yul\":4635:4653   */\n  add\n    /* \"#utility.yul\":4628:4678   */\n  mstore\n    /* \"#utility.yul\":4695:4739   */\n  tag_147\n    /* \"#utility.yul\":4732:4738   */\n  dup2\n    /* \"#utility.yul\":4724:4730   */\n  dup6\n    /* \"#utility.yul\":4695:4739   */\n  tag_107\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4687:4739   */\n  swap6\n    /* \"#utility.yul\":4280:4745   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4750:5172   */\ntag_108:\n    /* \"#utility.yul\":4791:4794   */\n  0x00\n    /* \"#utility.yul\":4829:4834   */\n  dup2\n    /* \"#utility.yul\":4823:4835   */\n  mload\n    /* \"#utility.yul\":4856:4862   */\n  dup1\n    /* \"#utility.yul\":4851:4854   */\n  dup5\n    /* \"#utility.yul\":4844:4863   */\n  mstore\n    /* \"#utility.yul\":4881:4882   */\n  0x00\n    /* \"#utility.yul\":4891:5053   */\ntag_149:\n    /* \"#utility.yul\":4905:4911   */\n  dup2\n    /* \"#utility.yul\":4902:4903   */\n  dup2\n    /* \"#utility.yul\":4899:4912   */\n  lt\n    /* \"#utility.yul\":4891:5053   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":4967:4971   */\n  0x20\n    /* \"#utility.yul\":5023:5036   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":5019:5041   */\n  dup2\n  add\n    /* \"#utility.yul\":5013:5042   */\n  mload\n    /* \"#utility.yul\":4995:5006   */\n  dup7\n  dup4\n  add\n    /* \"#utility.yul\":4991:5011   */\n  dup3\n  add\n    /* \"#utility.yul\":4984:5043   */\n  mstore\n    /* \"#utility.yul\":4920:4932   */\n  add\n    /* \"#utility.yul\":4891:5053   */\n  jump(tag_149)\ntag_151:\n    /* \"#utility.yul\":4895:4898   */\n  pop\n    /* \"#utility.yul\":5098:5099   */\n  0x00\n    /* \"#utility.yul\":5091:5095   */\n  0x20\n    /* \"#utility.yul\":5082:5088   */\n  dup3\n    /* \"#utility.yul\":5077:5080   */\n  dup7\n    /* \"#utility.yul\":5073:5089   */\n  add\n    /* \"#utility.yul\":5069:5096   */\n  add\n    /* \"#utility.yul\":5062:5100   */\n  mstore\n    /* \"#utility.yul\":5161:5165   */\n  0x20\n    /* \"#utility.yul\":5154:5156   */\n  0x1f\n    /* \"#utility.yul\":5150:5157   */\n  not\n    /* \"#utility.yul\":5145:5147   */\n  0x1f\n    /* \"#utility.yul\":5137:5143   */\n  dup4\n    /* \"#utility.yul\":5133:5148   */\n  add\n    /* \"#utility.yul\":5129:5158   */\n  and\n    /* \"#utility.yul\":5124:5127   */\n  dup6\n    /* \"#utility.yul\":5120:5159   */\n  add\n    /* \"#utility.yul\":5116:5166   */\n  add\n    /* \"#utility.yul\":5109:5166   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":4750:5172   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5177:5737   */\ntag_68:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5474:5489   */\n  dup7\n  dup2\n  and\n    /* \"#utility.yul\":5456:5490   */\n  dup3\n  mstore\n    /* \"#utility.yul\":5526:5541   */\n  dup6\n  and\n    /* \"#utility.yul\":5521:5523   */\n  0x20\n    /* \"#utility.yul\":5506:5524   */\n  dup3\n  add\n    /* \"#utility.yul\":5499:5542   */\n  mstore\n    /* \"#utility.yul\":5573:5575   */\n  0x40\n    /* \"#utility.yul\":5558:5576   */\n  dup2\n  add\n    /* \"#utility.yul\":5551:5585   */\n  dup5\n  swap1\n  mstore\n    /* \"#utility.yul\":5616:5618   */\n  0x60\n    /* \"#utility.yul\":5601:5619   */\n  dup2\n  add\n    /* \"#utility.yul\":5594:5628   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5436:5439   */\n  0xa0\n    /* \"#utility.yul\":5659:5662   */\n  0x80\n    /* \"#utility.yul\":5644:5663   */\n  dup3\n  add\n    /* \"#utility.yul\":5637:5669   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":5399:5403   */\n  0x00\n  swap1\n    /* \"#utility.yul\":5686:5731   */\n  tag_153\n  swap1\n    /* \"#utility.yul\":5711:5730   */\n  dup4\n  add\n    /* \"#utility.yul\":5703:5709   */\n  dup5\n    /* \"#utility.yul\":5686:5731   */\n  tag_108\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5678:5731   */\n  swap8\n    /* \"#utility.yul\":5177:5737   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5742:6032   */\ntag_71:\n    /* \"#utility.yul\":5811:5817   */\n  0x00\n    /* \"#utility.yul\":5864:5866   */\n  0x20\n    /* \"#utility.yul\":5852:5861   */\n  dup3\n    /* \"#utility.yul\":5843:5850   */\n  dup5\n    /* \"#utility.yul\":5839:5862   */\n  sub\n    /* \"#utility.yul\":5835:5867   */\n  slt\n    /* \"#utility.yul\":5832:5884   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":5880:5881   */\n  0x00\n    /* \"#utility.yul\":5877:5878   */\n  dup1\n    /* \"#utility.yul\":5870:5882   */\n  revert\n    /* \"#utility.yul\":5832:5884   */\ntag_155:\n    /* \"#utility.yul\":5906:5922   */\n  dup2\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":5951:5983   */\n  dup2\n  and\n    /* \"#utility.yul\":5941:5984   */\n  dup2\n  eq\n    /* \"#utility.yul\":5931:6002   */\n  tag_156\n  jumpi\n    /* \"#utility.yul\":5998:5999   */\n  0x00\n    /* \"#utility.yul\":5995:5996   */\n  dup1\n    /* \"#utility.yul\":5988:6000   */\n  revert\n    /* \"#utility.yul\":5931:6002   */\ntag_156:\n    /* \"#utility.yul\":6021:6026   */\n  swap4\n    /* \"#utility.yul\":5742:6032   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6037:6863   */\ntag_87:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6434:6449   */\n  dup7\n  dup2\n  and\n    /* \"#utility.yul\":6416:6450   */\n  dup3\n  mstore\n    /* \"#utility.yul\":6486:6501   */\n  dup6\n  and\n    /* \"#utility.yul\":6481:6483   */\n  0x20\n    /* \"#utility.yul\":6466:6484   */\n  dup3\n  add\n    /* \"#utility.yul\":6459:6502   */\n  mstore\n    /* \"#utility.yul\":6396:6399   */\n  0xa0\n    /* \"#utility.yul\":6533:6535   */\n  0x40\n    /* \"#utility.yul\":6518:6536   */\n  dup3\n  add\n    /* \"#utility.yul\":6511:6542   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":6359:6363   */\n  0x00\n  swap1\n    /* \"#utility.yul\":6565:6622   */\n  tag_158\n  swap1\n    /* \"#utility.yul\":6602:6621   */\n  dup4\n  add\n    /* \"#utility.yul\":6594:6600   */\n  dup7\n    /* \"#utility.yul\":6565:6622   */\n  tag_107\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6670:6679   */\n  dup3\n    /* \"#utility.yul\":6662:6668   */\n  dup2\n    /* \"#utility.yul\":6658:6680   */\n  sub\n    /* \"#utility.yul\":6653:6655   */\n  0x60\n    /* \"#utility.yul\":6642:6651   */\n  dup5\n    /* \"#utility.yul\":6638:6656   */\n  add\n    /* \"#utility.yul\":6631:6681   */\n  mstore\n    /* \"#utility.yul\":6704:6748   */\n  tag_159\n    /* \"#utility.yul\":6741:6747   */\n  dup2\n    /* \"#utility.yul\":6733:6739   */\n  dup7\n    /* \"#utility.yul\":6704:6748   */\n  tag_107\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6690:6748   */\n  swap1\n  pop\n    /* \"#utility.yul\":6797:6806   */\n  dup3\n    /* \"#utility.yul\":6789:6795   */\n  dup2\n    /* \"#utility.yul\":6785:6807   */\n  sub\n    /* \"#utility.yul\":6779:6782   */\n  0x80\n    /* \"#utility.yul\":6768:6777   */\n  dup5\n    /* \"#utility.yul\":6764:6783   */\n  add\n    /* \"#utility.yul\":6757:6808   */\n  mstore\n    /* \"#utility.yul\":6825:6857   */\n  tag_160\n    /* \"#utility.yul\":6850:6856   */\n  dup2\n    /* \"#utility.yul\":6842:6848   */\n  dup6\n    /* \"#utility.yul\":6825:6857   */\n  tag_108\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6817:6857   */\n  swap9\n    /* \"#utility.yul\":6037:6863   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\ntag_109:\n    /* \"src/MockToken_flattened.sol\":72476:72761  contract mockERC1155Token is ERC1155(\"mockURI\") {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MockToken_flattened.sol\":72476:72761  contract mockERC1155Token is ERC1155(\"mockURI\") {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x156e29f6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/MockToken_flattened.sol\":57734:57866  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"src/MockToken_flattened.sol\":57734:57866  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/MockToken_flattened.sol\":56867:57172  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"src/MockToken_flattened.sol\":56867:57172  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"src/MockToken_flattened.sol\":57571:57674  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":72652:72759  function mint(address _to, uint _id, uint _amount) external {... */\n    tag_6:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"src/MockToken_flattened.sol\":59501:59930  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_31\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":58023:58575  function balanceOfBatch(... */\n    tag_8:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":58643:58787  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_9:\n      tag_31\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":58854:59011  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_10:\n      tag_19\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":59078:59429  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_11:\n      tag_31\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":57734:57866  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_16:\n        /* \"src/MockToken_flattened.sol\":57811:57818  uint256 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":57837:57850  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":57837:57859  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/MockToken_flattened.sol\":57734:57866  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_58:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":56867:57172  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n        /* \"src/MockToken_flattened.sol\":56969:56973  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/MockToken_flattened.sol\":57004:57045  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"src/MockToken_flattened.sol\":57004:57113  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_60\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/MockToken_flattened.sol\":57061:57113  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"src/MockToken_flattened.sol\":57004:57113  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_60:\n        /* \"src/MockToken_flattened.sol\":57004:57165  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/MockToken_flattened.sol\":47735:47775  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"src/MockToken_flattened.sol\":57129:57165  super.supportsInterface(interfaceId) */\n      tag_58\n        /* \"src/MockToken_flattened.sol\":47636:47782  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"src/MockToken_flattened.sol\":57571:57674  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"src/MockToken_flattened.sol\":57631:57644  string memory */\n      0x60\n        /* \"src/MockToken_flattened.sol\":57663:57667  _uri */\n      0x02\n        /* \"src/MockToken_flattened.sol\":57656:57667  return _uri */\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_66\n      jump\t// in\n    tag_67:\n      dup1\n      iszero\n      tag_68\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_69\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_68)\n    tag_69:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_70:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_70\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/MockToken_flattened.sol\":57571:57674  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":72652:72759  function mint(address _to, uint _id, uint _amount) external {... */\n    tag_34:\n        /* \"src/MockToken_flattened.sol\":72722:72752  _mint(_to, _id, _amount, \"0x\") */\n      tag_72\n        /* \"src/MockToken_flattened.sol\":72728:72731  _to */\n      dup4\n        /* \"src/MockToken_flattened.sol\":72733:72736  _id */\n      dup4\n        /* \"src/MockToken_flattened.sol\":72738:72745  _amount */\n      dup4\n        /* \"src/MockToken_flattened.sol\":72722:72752  _mint(_to, _id, _amount, \"0x\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf3, 0x060f)\n      dup2\n      mstore\n      pop\n        /* \"src/MockToken_flattened.sol\":72722:72727  _mint */\n      tag_73\n        /* \"src/MockToken_flattened.sol\":72722:72752  _mint(_to, _id, _amount, \"0x\") */\n      jump\t// in\n    tag_72:\n        /* \"src/MockToken_flattened.sol\":72652:72759  function mint(address _to, uint _id, uint _amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":59501:59930  function safeBatchTransferFrom(... */\n    tag_38:\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":59738:59752  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/MockToken_flattened.sol\":59738:59787  from != sender && !isApprovedForAll(from, sender) */\n      tag_77\n      jumpi\n      pop\n        /* \"src/MockToken_flattened.sol\":59757:59787  isApprovedForAll(from, sender) */\n      tag_78\n        /* \"src/MockToken_flattened.sol\":59774:59778  from */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59780:59786  sender */\n      dup3\n        /* \"src/MockToken_flattened.sol\":59757:59773  isApprovedForAll */\n      tag_52\n        /* \"src/MockToken_flattened.sol\":59757:59787  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_78:\n        /* \"src/MockToken_flattened.sol\":59756:59787  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"src/MockToken_flattened.sol\":59738:59787  from != sender && !isApprovedForAll(from, sender) */\n    tag_77:\n        /* \"src/MockToken_flattened.sol\":59734:59863  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"src/MockToken_flattened.sol\":59810:59852  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8836:8851   */\n      dup1\n      dup4\n      and\n        /* \"src/MockToken_flattened.sol\":59810:59852  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8818:8852   */\n      mstore\n        /* \"#utility.yul\":8888:8903   */\n      dup8\n      and\n        /* \"#utility.yul\":8868:8886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8861:8904   */\n      mstore\n        /* \"#utility.yul\":8753:8771   */\n      0x44\n      add\n        /* \"src/MockToken_flattened.sol\":59810:59852  ERC1155MissingApprovalForAll(sender, from) */\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/MockToken_flattened.sol\":59734:59863  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_79:\n        /* \"src/MockToken_flattened.sol\":59872:59923  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_82\n        /* \"src/MockToken_flattened.sol\":59895:59899  from */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59901:59903  to */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59905:59908  ids */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59910:59916  values */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59918:59922  data */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59872:59894  _safeBatchTransferFrom */\n      tag_83\n        /* \"src/MockToken_flattened.sol\":59872:59923  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_82:\n        /* \"src/MockToken_flattened.sol\":59685:59930  {... */\n      pop\n        /* \"src/MockToken_flattened.sol\":59501:59930  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":58023:58575  function balanceOfBatch(... */\n    tag_42:\n        /* \"src/MockToken_flattened.sol\":58147:58163  uint256[] memory */\n      0x60\n        /* \"src/MockToken_flattened.sol\":58198:58201  ids */\n      dup2\n        /* \"src/MockToken_flattened.sol\":58198:58208  ids.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":58179:58187  accounts */\n      dup4\n        /* \"src/MockToken_flattened.sol\":58179:58194  accounts.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":58179:58208  accounts.length != ids.length */\n      eq\n        /* \"src/MockToken_flattened.sol\":58175:58296  if (accounts.length != ids.length) {... */\n      tag_85\n      jumpi\n        /* \"src/MockToken_flattened.sol\":58257:58267  ids.length */\n      dup2\n      mload\n        /* \"src/MockToken_flattened.sol\":58269:58284  accounts.length */\n      dup4\n      mload\n        /* \"src/MockToken_flattened.sol\":58231:58285  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9089:9114   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9130:9148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9123:9157   */\n      mstore\n        /* \"#utility.yul\":9062:9080   */\n      0x44\n      add\n        /* \"src/MockToken_flattened.sol\":58231:58285  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      tag_80\n        /* \"#utility.yul\":8915:9163   */\n      jump\n        /* \"src/MockToken_flattened.sol\":58175:58296  if (accounts.length != ids.length) {... */\n    tag_85:\n        /* \"src/MockToken_flattened.sol\":58306:58336  uint256[] memory batchBalances */\n      0x00\n        /* \"src/MockToken_flattened.sol\":58353:58361  accounts */\n      dup4\n        /* \"src/MockToken_flattened.sol\":58353:58368  accounts.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":58339:58369  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_91:\n      pop\n        /* \"src/MockToken_flattened.sol\":58306:58369  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"src/MockToken_flattened.sol\":58385:58394  uint256 i */\n      0x00\n        /* \"src/MockToken_flattened.sol\":58380:58538  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_92:\n        /* \"src/MockToken_flattened.sol\":58404:58412  accounts */\n      dup5\n        /* \"src/MockToken_flattened.sol\":58404:58419  accounts.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":58400:58401  i */\n      dup2\n        /* \"src/MockToken_flattened.sol\":58400:58419  i < accounts.length */\n      lt\n        /* \"src/MockToken_flattened.sol\":58380:58538  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"src/MockToken_flattened.sol\":33954:33958  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":33945:33959  mul(pos, 0x20) */\n      dup1\n      dup3\n      mul\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup7\n      add\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"src/MockToken_flattened.sol\":58459:58527  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_95\n      swap1\n        /* \"src/MockToken_flattened.sol\":33954:33958  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":33945:33959  mul(pos, 0x20) */\n      dup1\n      dup5\n      mul\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup8\n      add\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"src/MockToken_flattened.sol\":57734:57866  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      tag_16\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":58459:58527  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n    tag_95:\n        /* \"src/MockToken_flattened.sol\":58440:58453  batchBalances */\n      dup3\n        /* \"src/MockToken_flattened.sol\":58454:58455  i */\n      dup3\n        /* \"src/MockToken_flattened.sol\":58440:58456  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"src/MockToken_flattened.sol\":58440:58527  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      mstore\n        /* \"src/MockToken_flattened.sol\":58421:58424  ++i */\n      0x01\n      add\n        /* \"src/MockToken_flattened.sol\":58380:58538  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_92)\n    tag_93:\n      pop\n        /* \"src/MockToken_flattened.sol\":58555:58568  batchBalances */\n      swap4\n        /* \"src/MockToken_flattened.sol\":58023:58575  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":58643:58787  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_48:\n        /* \"src/MockToken_flattened.sol\":58728:58780  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_104\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n        /* \"src/MockToken_flattened.sol\":58761:58769  operator */\n      dup4\n        /* \"src/MockToken_flattened.sol\":58771:58779  approved */\n      dup4\n        /* \"src/MockToken_flattened.sol\":58728:58746  _setApprovalForAll */\n      tag_106\n        /* \"src/MockToken_flattened.sol\":58728:58780  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_104:\n        /* \"src/MockToken_flattened.sol\":58643:58787  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":58854:59011  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":58967:58994  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"src/MockToken_flattened.sol\":58944:58948  bool */\n      0x00\n        /* \"src/MockToken_flattened.sol\":58967:58994  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":58967:58985  _operatorApprovals */\n      0x01\n        /* \"src/MockToken_flattened.sol\":58967:58994  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/MockToken_flattened.sol\":58967:59004  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"src/MockToken_flattened.sol\":58854:59011  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":59078:59429  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_57:\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":59244:59258  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/MockToken_flattened.sol\":59244:59293  from != sender && !isApprovedForAll(from, sender) */\n      tag_110\n      jumpi\n      pop\n        /* \"src/MockToken_flattened.sol\":59263:59293  isApprovedForAll(from, sender) */\n      tag_111\n        /* \"src/MockToken_flattened.sol\":59280:59284  from */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59286:59292  sender */\n      dup3\n        /* \"src/MockToken_flattened.sol\":59263:59279  isApprovedForAll */\n      tag_52\n        /* \"src/MockToken_flattened.sol\":59263:59293  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_111:\n        /* \"src/MockToken_flattened.sol\":59262:59293  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"src/MockToken_flattened.sol\":59244:59293  from != sender && !isApprovedForAll(from, sender) */\n    tag_110:\n        /* \"src/MockToken_flattened.sol\":59240:59369  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"src/MockToken_flattened.sol\":59316:59358  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8836:8851   */\n      dup1\n      dup4\n      and\n        /* \"src/MockToken_flattened.sol\":59316:59358  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8818:8852   */\n      mstore\n        /* \"#utility.yul\":8888:8903   */\n      dup8\n      and\n        /* \"#utility.yul\":8868:8886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8861:8904   */\n      mstore\n        /* \"#utility.yul\":8753:8771   */\n      0x44\n      add\n        /* \"src/MockToken_flattened.sol\":59316:59358  ERC1155MissingApprovalForAll(sender, from) */\n      tag_80\n        /* \"#utility.yul\":8606:8910   */\n      jump\n        /* \"src/MockToken_flattened.sol\":59240:59369  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_112:\n        /* \"src/MockToken_flattened.sol\":59378:59422  _safeTransferFrom(from, to, id, value, data) */\n      tag_82\n        /* \"src/MockToken_flattened.sol\":59396:59400  from */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59402:59404  to */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59406:59408  id */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59410:59415  value */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59417:59421  data */\n      dup7\n        /* \"src/MockToken_flattened.sol\":59378:59395  _safeTransferFrom */\n      tag_115\n        /* \"src/MockToken_flattened.sol\":59378:59422  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":66233:66579  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":66329:66345  to == address(0) */\n      dup5\n      and\n        /* \"src/MockToken_flattened.sol\":66325:66413  if (to == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"src/MockToken_flattened.sol\":66368:66402  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":66399:66400  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":66368:66402  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":66368:66402  ERC1155InvalidReceiver(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":66325:66413  if (to == address(0)) {... */\n    tag_118:\n        /* \"src/MockToken_flattened.sol\":71861:71865  0x40 */\n      0x40\n        /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n      dup1\n      mload\n        /* \"src/MockToken_flattened.sol\":71931:71932  1 */\n      0x01\n        /* \"src/MockToken_flattened.sol\":71916:71933  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"src/MockToken_flattened.sol\":72062:72066  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":72050:72067  add(array1, 0x20) */\n      dup3\n      add\n        /* \"src/MockToken_flattened.sol\":72043:72078  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"src/MockToken_flattened.sol\":72179:72196  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"src/MockToken_flattened.sol\":72209:72226  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":71675:71698  uint256[] memory array1 */\n      0x60\n        /* \"src/MockToken_flattened.sol\":72246:72263  add(array2, 0x20) */\n      dup3\n      add\n        /* \"src/MockToken_flattened.sol\":72239:72274  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"src/MockToken_flattened.sol\":72382:72399  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"src/MockToken_flattened.sol\":72369:72400  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n      swap1\n        /* \"src/MockToken_flattened.sol\":66511:66572  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_82\n      0x00\n        /* \"src/MockToken_flattened.sol\":66550:66552  to */\n      dup8\n        /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n      dup5\n        /* \"src/MockToken_flattened.sol\":72179:72196  add(array1, 0x40) */\n      dup5\n        /* \"src/MockToken_flattened.sol\":66567:66571  data */\n      dup8\n        /* \"src/MockToken_flattened.sol\":66511:66537  _updateWithAcceptanceCheck */\n      tag_124\n        /* \"src/MockToken_flattened.sol\":66511:66572  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":64502:64947  function _safeBatchTransferFrom(... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":64695:64711  to == address(0) */\n      dup5\n      and\n        /* \"src/MockToken_flattened.sol\":64691:64779  if (to == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"src/MockToken_flattened.sol\":64734:64768  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":64765:64766  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":64734:64768  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":64734:64768  ERC1155InvalidReceiver(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":64691:64779  if (to == address(0)) {... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":64792:64810  from == address(0) */\n      dup6\n      and\n        /* \"src/MockToken_flattened.sol\":64788:64876  if (from == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"src/MockToken_flattened.sol\":64833:64865  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":64862:64863  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":64833:64865  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":64833:64865  ERC1155InvalidSender(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":64788:64876  if (from == address(0)) {... */\n    tag_129:\n        /* \"src/MockToken_flattened.sol\":64885:64940  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_131\n        /* \"src/MockToken_flattened.sol\":64912:64916  from */\n      dup6\n        /* \"src/MockToken_flattened.sol\":64918:64920  to */\n      dup6\n        /* \"src/MockToken_flattened.sol\":64922:64925  ids */\n      dup6\n        /* \"src/MockToken_flattened.sol\":64927:64933  values */\n      dup6\n        /* \"src/MockToken_flattened.sol\":64935:64939  data */\n      dup6\n        /* \"src/MockToken_flattened.sol\":64885:64911  _updateWithAcceptanceCheck */\n      tag_124\n        /* \"src/MockToken_flattened.sol\":64885:64940  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_131:\n        /* \"src/MockToken_flattened.sol\":64502:64947  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":68755:69070  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":68862:68884  operator == address(0) */\n      dup3\n      and\n        /* \"src/MockToken_flattened.sol\":68858:68952  if (operator == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"src/MockToken_flattened.sol\":68907:68941  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      shl(0xe8, 0xced3e1)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":68938:68939  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":68907:68941  ERC1155InvalidOperator(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":68907:68941  ERC1155InvalidOperator(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":68858:68952  if (operator == address(0)) {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":68961:68986  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":68961:68979  _operatorApprovals */\n      0x01\n        /* \"src/MockToken_flattened.sol\":68961:68986  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/MockToken_flattened.sol\":68961:68996  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/MockToken_flattened.sol\":68961:69007  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/MockToken_flattened.sol\":69022:69063  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"src/MockToken_flattened.sol\":69022:69063  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"src/MockToken_flattened.sol\":69022:69063  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/MockToken_flattened.sol\":68755:69070  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":63638:64101  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":63760:63776  to == address(0) */\n      dup5\n      and\n        /* \"src/MockToken_flattened.sol\":63756:63844  if (to == address(0)) {... */\n      tag_139\n      jumpi\n        /* \"src/MockToken_flattened.sol\":63799:63833  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":63830:63831  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":63799:63833  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":63799:63833  ERC1155InvalidReceiver(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":63756:63844  if (to == address(0)) {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":63857:63875  from == address(0) */\n      dup6\n      and\n        /* \"src/MockToken_flattened.sol\":63853:63941  if (from == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"src/MockToken_flattened.sol\":63898:63930  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":63927:63928  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":63898:63930  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":63898:63930  ERC1155InvalidSender(address(0)) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":63853:63941  if (from == address(0)) {... */\n    tag_141:\n        /* \"src/MockToken_flattened.sol\":71861:71865  0x40 */\n      0x40\n        /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n      dup1\n      mload\n        /* \"src/MockToken_flattened.sol\":71931:71932  1 */\n      0x01\n        /* \"src/MockToken_flattened.sol\":71916:71933  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"src/MockToken_flattened.sol\":72062:72066  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":72050:72067  add(array1, 0x20) */\n      dup3\n      add\n        /* \"src/MockToken_flattened.sol\":72043:72078  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"src/MockToken_flattened.sol\":72179:72196  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"src/MockToken_flattened.sol\":72209:72226  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":71675:71698  uint256[] memory array1 */\n      0x60\n        /* \"src/MockToken_flattened.sol\":72246:72263  add(array2, 0x20) */\n      dup3\n      add\n        /* \"src/MockToken_flattened.sol\":72239:72274  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"src/MockToken_flattened.sol\":72382:72399  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"src/MockToken_flattened.sol\":72369:72400  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n      swap1\n        /* \"src/MockToken_flattened.sol\":64039:64094  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_144\n        /* \"src/MockToken_flattened.sol\":64066:64070  from */\n      dup8\n        /* \"src/MockToken_flattened.sol\":64072:64074  to */\n      dup8\n        /* \"src/MockToken_flattened.sol\":71855:71866  mload(0x40) */\n      dup5\n        /* \"src/MockToken_flattened.sol\":72179:72196  add(array1, 0x40) */\n      dup5\n        /* \"src/MockToken_flattened.sol\":64089:64093  data */\n      dup8\n        /* \"src/MockToken_flattened.sol\":64039:64065  _updateWithAcceptanceCheck */\n      tag_124\n        /* \"src/MockToken_flattened.sol\":64039:64094  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_144:\n        /* \"src/MockToken_flattened.sol\":63746:64101  {... */\n      pop\n      pop\n        /* \"src/MockToken_flattened.sol\":63638:64101  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":62491:63181  function _updateWithAcceptanceCheck(... */\n    tag_124:\n        /* \"src/MockToken_flattened.sol\":62692:62722  _update(from, to, ids, values) */\n      tag_147\n        /* \"src/MockToken_flattened.sol\":62700:62704  from */\n      dup6\n        /* \"src/MockToken_flattened.sol\":62706:62708  to */\n      dup6\n        /* \"src/MockToken_flattened.sol\":62710:62713  ids */\n      dup6\n        /* \"src/MockToken_flattened.sol\":62715:62721  values */\n      dup6\n        /* \"src/MockToken_flattened.sol\":62692:62699  _update */\n      tag_148\n        /* \"src/MockToken_flattened.sol\":62692:62722  _update(from, to, ids, values) */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":62736:62752  to != address(0) */\n      dup5\n      and\n      iszero\n        /* \"src/MockToken_flattened.sol\":62732:63175  if (to != address(0)) {... */\n      tag_131\n      jumpi\n        /* \"src/MockToken_flattened.sol\":62817:62827  ids.length */\n      dup3\n      mload\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n      swap1\n        /* \"src/MockToken_flattened.sol\":62831:62832  1 */\n      0x01\n        /* \"src/MockToken_flattened.sol\":62817:62832  ids.length == 1 */\n      sub\n        /* \"src/MockToken_flattened.sol\":62813:63165  if (ids.length == 1) {... */\n      tag_151\n      jumpi\n        /* \"src/MockToken_flattened.sol\":33954:33958  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      dup2\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup5\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"src/MockToken_flattened.sol\":62970:63037  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_154\n        /* \"src/MockToken_flattened.sol\":63001:63009  operator */\n      dup4\n        /* \"src/MockToken_flattened.sol\":63011:63015  from */\n      dup10\n        /* \"src/MockToken_flattened.sol\":63017:63019  to */\n      dup10\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      dup6\n      dup6\n        /* \"src/MockToken_flattened.sol\":63032:63036  data */\n      dup10\n        /* \"src/MockToken_flattened.sol\":62970:63000  _doSafeTransferAcceptanceCheck */\n      tag_155\n        /* \"src/MockToken_flattened.sol\":62970:63037  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_154:\n        /* \"src/MockToken_flattened.sol\":62834:63052  {... */\n      pop\n      pop\n        /* \"src/MockToken_flattened.sol\":62813:63165  if (ids.length == 1) {... */\n      jump(tag_82)\n    tag_151:\n        /* \"src/MockToken_flattened.sol\":63076:63150  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_82\n        /* \"src/MockToken_flattened.sol\":63112:63120  operator */\n      dup2\n        /* \"src/MockToken_flattened.sol\":63122:63126  from */\n      dup8\n        /* \"src/MockToken_flattened.sol\":63128:63130  to */\n      dup8\n        /* \"src/MockToken_flattened.sol\":63132:63135  ids */\n      dup8\n        /* \"src/MockToken_flattened.sol\":63137:63143  values */\n      dup8\n        /* \"src/MockToken_flattened.sol\":63145:63149  data */\n      dup8\n        /* \"src/MockToken_flattened.sol\":63076:63111  _doSafeBatchTransferAcceptanceCheck */\n      tag_158\n        /* \"src/MockToken_flattened.sol\":63076:63150  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":60631:61912  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_148:\n        /* \"src/MockToken_flattened.sol\":60766:60772  values */\n      dup1\n        /* \"src/MockToken_flattened.sol\":60766:60779  values.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":60752:60755  ids */\n      dup3\n        /* \"src/MockToken_flattened.sol\":60752:60762  ids.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":60752:60779  ids.length != values.length */\n      eq\n        /* \"src/MockToken_flattened.sol\":60748:60865  if (ids.length != values.length) {... */\n      tag_160\n      jumpi\n        /* \"src/MockToken_flattened.sol\":60828:60838  ids.length */\n      dup2\n      mload\n        /* \"src/MockToken_flattened.sol\":60840:60853  values.length */\n      dup2\n      mload\n        /* \"src/MockToken_flattened.sol\":60802:60854  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9089:9114   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9130:9148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9123:9157   */\n      mstore\n        /* \"#utility.yul\":9062:9080   */\n      0x44\n      add\n        /* \"src/MockToken_flattened.sol\":60802:60854  ERC1155InvalidArrayLength(ids.length, values.length) */\n      tag_80\n        /* \"#utility.yul\":8915:9163   */\n      jump\n        /* \"src/MockToken_flattened.sol\":60748:60865  if (ids.length != values.length) {... */\n    tag_160:\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n        /* \"src/MockToken_flattened.sol\":60875:60891  address operator */\n      0x00\n        /* \"src/MockToken_flattened.sol\":60917:61608  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_163:\n        /* \"src/MockToken_flattened.sol\":60941:60944  ids */\n      dup4\n        /* \"src/MockToken_flattened.sol\":60941:60951  ids.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":60937:60938  i */\n      dup2\n        /* \"src/MockToken_flattened.sol\":60937:60951  i < ids.length */\n      lt\n        /* \"src/MockToken_flattened.sol\":60917:61608  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"src/MockToken_flattened.sol\":33954:33958  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":33945:33959  mul(pos, 0x20) */\n      dup2\n      dup2\n      mul\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup6\n      dup2\n      add\n      dup3\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup6\n      add\n      swap1\n      swap2\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61087:61105  from != address(0) */\n      dup9\n      and\n      iszero\n        /* \"src/MockToken_flattened.sol\":61083:61503  if (from != address(0)) {... */\n      tag_168\n      jumpi\n        /* \"src/MockToken_flattened.sol\":61125:61144  uint256 fromBalance */\n      0x00\n        /* \"src/MockToken_flattened.sol\":61147:61160  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61147:61166  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/MockToken_flattened.sol\":61188:61207  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"src/MockToken_flattened.sol\":61184:61313  if (fromBalance < value) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"src/MockToken_flattened.sol\":61238:61294  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      shl(0xe0, 0x03dee4c5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9757:9789   */\n      dup11\n      and\n        /* \"src/MockToken_flattened.sol\":61238:61294  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9739:9790   */\n      mstore\n        /* \"#utility.yul\":9806:9824   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9799:9833   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9849:9867   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9842:9876   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9892:9910   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":9885:9919   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9711:9730   */\n      0x84\n      add\n        /* \"src/MockToken_flattened.sol\":61238:61294  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      tag_80\n        /* \"#utility.yul\":9508:9925   */\n      jump\n        /* \"src/MockToken_flattened.sol\":61184:61313  if (fromBalance < value) {... */\n    tag_169:\n        /* \"src/MockToken_flattened.sol\":61429:61438  _balances */\n      0x00\n        /* \"src/MockToken_flattened.sol\":61429:61442  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61429:61448  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"src/MockToken_flattened.sol\":61451:61470  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"src/MockToken_flattened.sol\":61429:61470  _balances[id][from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"src/MockToken_flattened.sol\":61083:61503  if (from != address(0)) {... */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61521:61537  to != address(0) */\n      dup8\n      and\n      iszero\n        /* \"src/MockToken_flattened.sol\":61517:61598  if (to != address(0)) {... */\n      tag_172\n      jumpi\n        /* \"src/MockToken_flattened.sol\":61557:61566  _balances */\n      0x00\n        /* \"src/MockToken_flattened.sol\":61557:61570  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61557:61574  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"src/MockToken_flattened.sol\":61557:61583  _balances[id][to] += value */\n      dup1\n      sload\n        /* \"src/MockToken_flattened.sol\":61578:61583  value */\n      dup4\n      swap3\n        /* \"src/MockToken_flattened.sol\":61557:61566  _balances */\n      swap1\n        /* \"src/MockToken_flattened.sol\":61557:61583  _balances[id][to] += value */\n      tag_173\n      swap1\n        /* \"src/MockToken_flattened.sol\":61578:61583  value */\n      dup5\n      swap1\n        /* \"src/MockToken_flattened.sol\":61557:61583  _balances[id][to] += value */\n      tag_174\n      jump\t// in\n    tag_173:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/MockToken_flattened.sol\":61517:61598  if (to != address(0)) {... */\n    tag_172:\n      pop\n      pop\n        /* \"src/MockToken_flattened.sol\":60953:60956  ++i */\n      0x01\n      add\n        /* \"src/MockToken_flattened.sol\":60917:61608  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_163)\n    tag_164:\n      pop\n        /* \"src/MockToken_flattened.sol\":61622:61625  ids */\n      dup3\n        /* \"src/MockToken_flattened.sol\":61622:61632  ids.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":61636:61637  1 */\n      0x01\n        /* \"src/MockToken_flattened.sol\":61622:61637  ids.length == 1 */\n      sub\n        /* \"src/MockToken_flattened.sol\":61618:61906  if (ids.length == 1) {... */\n      tag_175\n      jumpi\n        /* \"src/MockToken_flattened.sol\":33954:33958  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup4\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"src/MockToken_flattened.sol\":61653:61663  uint256 id */\n      0x00\n      swap1\n        /* \"src/MockToken_flattened.sol\":33954:33958  0x20 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":33925:33960  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      add\n        /* \"src/MockToken_flattened.sol\":33919:33961  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"src/MockToken_flattened.sol\":61653:61691  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      swap2\n      pop\n        /* \"src/MockToken_flattened.sol\":61799:61801  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"src/MockToken_flattened.sol\":61793:61797  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"src/MockToken_flattened.sol\":61783:61791  operator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"src/MockToken_flattened.sol\":61803:61805  id */\n      dup6\n        /* \"src/MockToken_flattened.sol\":61807:61812  value */\n      dup6\n        /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_178\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":9089:9114   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":9145:9147   */\n      0x20\n        /* \"#utility.yul\":9130:9148   */\n      dup3\n      add\n        /* \"#utility.yul\":9123:9157   */\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x40\n        /* \"#utility.yul\":9062:9080   */\n      add\n      swap1\n        /* \"#utility.yul\":8915:9163   */\n      jump\n        /* \"src/MockToken_flattened.sol\":61768:61813  TransferSingle(operator, from, to, id, value) */\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/MockToken_flattened.sol\":61639:61824  {... */\n      pop\n      pop\n        /* \"src/MockToken_flattened.sol\":61618:61906  if (ids.length == 1) {... */\n      jump(tag_131)\n    tag_175:\n        /* \"src/MockToken_flattened.sol\":61879:61881  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"src/MockToken_flattened.sol\":61873:61877  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"src/MockToken_flattened.sol\":61863:61871  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"src/MockToken_flattened.sol\":61883:61886  ids */\n      dup7\n        /* \"src/MockToken_flattened.sol\":61888:61894  values */\n      dup7\n        /* \"src/MockToken_flattened.sol\":61849:61895  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/MockToken_flattened.sol\":60738:61912  {... */\n      pop\n        /* \"src/MockToken_flattened.sol\":60631:61912  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":69248:70222  function _doSafeTransferAcceptanceCheck(... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":69454:69468  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"src/MockToken_flattened.sol\":69454:69472  to.code.length > 0 */\n      iszero\n        /* \"src/MockToken_flattened.sol\":69450:70216  if (to.code.length > 0) {... */\n      tag_82\n      jumpi\n        /* \"src/MockToken_flattened.sol\":69492:69563  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":69492:69530  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"src/MockToken_flattened.sol\":69492:69563  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      tag_184\n      swap1\n        /* \"src/MockToken_flattened.sol\":69531:69539  operator */\n      dup10\n      swap1\n        /* \"src/MockToken_flattened.sol\":69541:69545  from */\n      dup10\n      swap1\n        /* \"src/MockToken_flattened.sol\":69547:69549  id */\n      dup9\n      swap1\n        /* \"src/MockToken_flattened.sol\":69551:69556  value */\n      dup9\n      swap1\n        /* \"src/MockToken_flattened.sol\":69558:69562  data */\n      dup9\n      swap1\n        /* \"src/MockToken_flattened.sol\":69492:69563  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      0x04\n      add\n      tag_185\n      jump\t// in\n    tag_184:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_186\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_187\n      swap2\n      dup2\n      add\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      0x01\n    tag_186:\n        /* \"src/MockToken_flattened.sol\":69488:70206  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_189\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_194\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_193)\n    tag_194:\n      0x60\n      swap2\n      pop\n    tag_193:\n      pop\n        /* \"src/MockToken_flattened.sol\":69847:69853  reason */\n      dup1\n        /* \"src/MockToken_flattened.sol\":69847:69860  reason.length */\n      mload\n        /* \"src/MockToken_flattened.sol\":69864:69865  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":69847:69865  reason.length == 0 */\n      sub\n        /* \"src/MockToken_flattened.sol\":69843:70192  if (reason.length == 0) {... */\n      tag_195\n      jumpi\n        /* \"src/MockToken_flattened.sol\":69951:69977  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9464:9496   */\n      dup7\n      and\n        /* \"src/MockToken_flattened.sol\":69951:69977  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":69951:69977  ERC1155InvalidReceiver(to) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":69843:70192  if (reason.length == 0) {... */\n    tag_195:\n        /* \"src/MockToken_flattened.sol\":70144:70150  reason */\n      dup1\n        /* \"src/MockToken_flattened.sol\":70138:70151  mload(reason) */\n      mload\n        /* \"src/MockToken_flattened.sol\":70129:70135  reason */\n      dup2\n        /* \"src/MockToken_flattened.sol\":70125:70127  32 */\n      0x20\n        /* \"src/MockToken_flattened.sol\":70121:70136  add(32, reason) */\n      add\n        /* \"src/MockToken_flattened.sol\":70114:70152  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"src/MockToken_flattened.sol\":69488:70206  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_189:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/MockToken_flattened.sol\":69612:69667  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"src/MockToken_flattened.sol\":69608:69782  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_144\n      jumpi\n        /* \"src/MockToken_flattened.sol\":69737:69763  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9464:9496   */\n      dup7\n      and\n        /* \"src/MockToken_flattened.sol\":69737:69763  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":69737:69763  ERC1155InvalidReceiver(to) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"src/MockToken_flattened.sol\":70410:71451  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":70641:70655  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"src/MockToken_flattened.sol\":70641:70659  to.code.length > 0 */\n      iszero\n        /* \"src/MockToken_flattened.sol\":70637:71445  if (to.code.length > 0) {... */\n      tag_82\n      jumpi\n        /* \"src/MockToken_flattened.sol\":70679:70757  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":70679:70722  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"src/MockToken_flattened.sol\":70679:70757  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      tag_203\n      swap1\n        /* \"src/MockToken_flattened.sol\":70723:70731  operator */\n      dup10\n      swap1\n        /* \"src/MockToken_flattened.sol\":70733:70737  from */\n      dup10\n      swap1\n        /* \"src/MockToken_flattened.sol\":70739:70742  ids */\n      dup9\n      swap1\n        /* \"src/MockToken_flattened.sol\":70744:70750  values */\n      dup9\n      swap1\n        /* \"src/MockToken_flattened.sol\":70752:70756  data */\n      dup9\n      swap1\n        /* \"src/MockToken_flattened.sol\":70679:70757  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_206\n      swap2\n      dup2\n      add\n      swap1\n      tag_188\n      jump\t// in\n    tag_206:\n      0x01\n    tag_205:\n        /* \"src/MockToken_flattened.sol\":70675:71435  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_207\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_194\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_193)\n    tag_207:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/MockToken_flattened.sol\":70836:70896  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"src/MockToken_flattened.sol\":70832:71011  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_144\n      jumpi\n        /* \"src/MockToken_flattened.sol\":70966:70992  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9464:9496   */\n      dup7\n      and\n        /* \"src/MockToken_flattened.sol\":70966:70992  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9446:9497   */\n      mstore\n        /* \"#utility.yul\":9419:9437   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":70966:70992  ERC1155InvalidReceiver(to) */\n      tag_80\n        /* \"#utility.yul\":9300:9503   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_219:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_229:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_15:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_231:\n        /* \"#utility.yul\":360:389   */\n      tag_232\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_219\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_220:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_235:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_21:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_237:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_238\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_220\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_27:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_241:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_221:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_243:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_243)\n    tag_245:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_30:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_238\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":2049:2371   */\n    tag_33:\n        /* \"#utility.yul\":2126:2132   */\n      0x00\n        /* \"#utility.yul\":2134:2140   */\n      dup1\n        /* \"#utility.yul\":2142:2148   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x60\n        /* \"#utility.yul\":2183:2192   */\n      dup5\n        /* \"#utility.yul\":2174:2181   */\n      dup7\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2215   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2208:2209   */\n      dup1\n        /* \"#utility.yul\":2201:2213   */\n      revert\n        /* \"#utility.yul\":2163:2215   */\n    tag_249:\n        /* \"#utility.yul\":2234:2263   */\n      tag_250\n        /* \"#utility.yul\":2253:2262   */\n      dup5\n        /* \"#utility.yul\":2234:2263   */\n      tag_219\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2224:2263   */\n      swap6\n        /* \"#utility.yul\":2310:2312   */\n      0x20\n        /* \"#utility.yul\":2295:2313   */\n      dup6\n      add\n        /* \"#utility.yul\":2282:2314   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2361:2363   */\n      0x40\n        /* \"#utility.yul\":2346:2364   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2333:2365   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2049:2371   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2376:2503   */\n    tag_90:\n        /* \"#utility.yul\":2437:2447   */\n      0x4e487b71\n        /* \"#utility.yul\":2432:2435   */\n      0xe0\n        /* \"#utility.yul\":2428:2448   */\n      shl\n        /* \"#utility.yul\":2425:2426   */\n      0x00\n        /* \"#utility.yul\":2418:2449   */\n      mstore\n        /* \"#utility.yul\":2468:2472   */\n      0x41\n        /* \"#utility.yul\":2465:2466   */\n      0x04\n        /* \"#utility.yul\":2458:2473   */\n      mstore\n        /* \"#utility.yul\":2492:2496   */\n      0x24\n        /* \"#utility.yul\":2489:2490   */\n      0x00\n        /* \"#utility.yul\":2482:2497   */\n      revert\n        /* \"#utility.yul\":2508:2783   */\n    tag_222:\n        /* \"#utility.yul\":2579:2581   */\n      0x40\n        /* \"#utility.yul\":2573:2582   */\n      mload\n        /* \"#utility.yul\":2644:2646   */\n      0x1f\n        /* \"#utility.yul\":2625:2638   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2621:2648   */\n      and\n        /* \"#utility.yul\":2609:2649   */\n      dup2\n      add\n        /* \"#utility.yul\":2679:2697   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2664:2698   */\n      dup2\n      gt\n        /* \"#utility.yul\":2700:2722   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2661:2723   */\n      or\n        /* \"#utility.yul\":2658:2746   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2726:2744   */\n      tag_254\n      tag_90\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2762:2764   */\n      0x40\n        /* \"#utility.yul\":2755:2777   */\n      mstore\n        /* \"#utility.yul\":2508:2783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2788:2971   */\n    tag_223:\n        /* \"#utility.yul\":2848:2852   */\n      0x00\n        /* \"#utility.yul\":2881:2899   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2873:2879   */\n      dup3\n        /* \"#utility.yul\":2870:2900   */\n      gt\n        /* \"#utility.yul\":2867:2923   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2903:2921   */\n      tag_257\n      tag_90\n      jump\t// in\n    tag_257:\n      pop\n        /* \"#utility.yul\":2948:2949   */\n      0x05\n        /* \"#utility.yul\":2944:2958   */\n      shl\n        /* \"#utility.yul\":2960:2964   */\n      0x20\n        /* \"#utility.yul\":2940:2965   */\n      add\n      swap1\n        /* \"#utility.yul\":2788:2971   */\n      jump\t// out\n        /* \"#utility.yul\":2976:3644   */\n    tag_224:\n        /* \"#utility.yul\":3030:3035   */\n      0x00\n        /* \"#utility.yul\":3083:3086   */\n      dup3\n        /* \"#utility.yul\":3076:3080   */\n      0x1f\n        /* \"#utility.yul\":3068:3074   */\n      dup4\n        /* \"#utility.yul\":3064:3081   */\n      add\n        /* \"#utility.yul\":3060:3087   */\n      slt\n        /* \"#utility.yul\":3050:3105   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3101:3102   */\n      0x00\n        /* \"#utility.yul\":3098:3099   */\n      dup1\n        /* \"#utility.yul\":3091:3103   */\n      revert\n        /* \"#utility.yul\":3050:3105   */\n    tag_259:\n        /* \"#utility.yul\":3137:3143   */\n      dup2\n        /* \"#utility.yul\":3124:3144   */\n      calldataload\n        /* \"#utility.yul\":3163:3167   */\n      0x20\n        /* \"#utility.yul\":3187:3247   */\n      tag_260\n        /* \"#utility.yul\":3203:3246   */\n      tag_261\n        /* \"#utility.yul\":3243:3245   */\n      dup4\n        /* \"#utility.yul\":3203:3246   */\n      tag_223\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3187:3247   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3269:3272   */\n      dup1\n        /* \"#utility.yul\":3293:3295   */\n      dup4\n        /* \"#utility.yul\":3288:3291   */\n      dup3\n        /* \"#utility.yul\":3281:3296   */\n      mstore\n        /* \"#utility.yul\":3321:3325   */\n      0x20\n        /* \"#utility.yul\":3316:3319   */\n      dup3\n        /* \"#utility.yul\":3312:3326   */\n      add\n        /* \"#utility.yul\":3305:3326   */\n      swap2\n      pop\n        /* \"#utility.yul\":3378:3382   */\n      0x20\n        /* \"#utility.yul\":3372:3374   */\n      dup5\n        /* \"#utility.yul\":3369:3370   */\n      0x05\n        /* \"#utility.yul\":3365:3375   */\n      shl\n        /* \"#utility.yul\":3357:3363   */\n      dup8\n        /* \"#utility.yul\":3353:3376   */\n      add\n        /* \"#utility.yul\":3349:3383   */\n      add\n        /* \"#utility.yul\":3335:3383   */\n      swap4\n      pop\n        /* \"#utility.yul\":3406:3409   */\n      dup7\n        /* \"#utility.yul\":3398:3404   */\n      dup5\n        /* \"#utility.yul\":3395:3410   */\n      gt\n        /* \"#utility.yul\":3392:3427   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3420:3421   */\n      dup1\n        /* \"#utility.yul\":3413:3425   */\n      revert\n        /* \"#utility.yul\":3392:3427   */\n    tag_262:\n        /* \"#utility.yul\":3459:3463   */\n      0x20\n        /* \"#utility.yul\":3451:3457   */\n      dup7\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3473:3615   */\n    tag_263:\n        /* \"#utility.yul\":3489:3495   */\n      dup5\n        /* \"#utility.yul\":3484:3487   */\n      dup2\n        /* \"#utility.yul\":3481:3496   */\n      lt\n        /* \"#utility.yul\":3473:3615   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3555:3572   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3543:3573   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3593:3605   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3506:3518   */\n      dup4\n      add\n        /* \"#utility.yul\":3473:3615   */\n      jump(tag_263)\n    tag_265:\n      pop\n        /* \"#utility.yul\":3633:3638   */\n      swap7\n        /* \"#utility.yul\":2976:3644   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3649:4179   */\n    tag_225:\n        /* \"#utility.yul\":3691:3696   */\n      0x00\n        /* \"#utility.yul\":3744:3747   */\n      dup3\n        /* \"#utility.yul\":3737:3741   */\n      0x1f\n        /* \"#utility.yul\":3729:3735   */\n      dup4\n        /* \"#utility.yul\":3725:3742   */\n      add\n        /* \"#utility.yul\":3721:3748   */\n      slt\n        /* \"#utility.yul\":3711:3766   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3762:3763   */\n      0x00\n        /* \"#utility.yul\":3759:3760   */\n      dup1\n        /* \"#utility.yul\":3752:3764   */\n      revert\n        /* \"#utility.yul\":3711:3766   */\n    tag_267:\n        /* \"#utility.yul\":3798:3804   */\n      dup2\n        /* \"#utility.yul\":3785:3805   */\n      calldataload\n        /* \"#utility.yul\":3824:3842   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3820:3822   */\n      dup2\n        /* \"#utility.yul\":3817:3843   */\n      gt\n        /* \"#utility.yul\":3814:3866   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3846:3864   */\n      tag_269\n      tag_90\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3890:3945   */\n      tag_270\n        /* \"#utility.yul\":3933:3935   */\n      0x1f\n        /* \"#utility.yul\":3914:3927   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3910:3937   */\n      and\n        /* \"#utility.yul\":3939:3943   */\n      0x20\n        /* \"#utility.yul\":3906:3944   */\n      add\n        /* \"#utility.yul\":3890:3945   */\n      tag_222\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3970:3972   */\n      dup2\n        /* \"#utility.yul\":3961:3968   */\n      dup2\n        /* \"#utility.yul\":3954:3973   */\n      mstore\n        /* \"#utility.yul\":4016:4019   */\n      dup5\n        /* \"#utility.yul\":4009:4013   */\n      0x20\n        /* \"#utility.yul\":4004:4006   */\n      dup4\n        /* \"#utility.yul\":3996:4002   */\n      dup7\n        /* \"#utility.yul\":3992:4007   */\n      add\n        /* \"#utility.yul\":3988:4014   */\n      add\n        /* \"#utility.yul\":3985:4020   */\n      gt\n        /* \"#utility.yul\":3982:4037   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4033:4034   */\n      0x00\n        /* \"#utility.yul\":4030:4031   */\n      dup1\n        /* \"#utility.yul\":4023:4035   */\n      revert\n        /* \"#utility.yul\":3982:4037   */\n    tag_271:\n        /* \"#utility.yul\":4098:4100   */\n      dup2\n        /* \"#utility.yul\":4091:4095   */\n      0x20\n        /* \"#utility.yul\":4083:4089   */\n      dup6\n        /* \"#utility.yul\":4079:4096   */\n      add\n        /* \"#utility.yul\":4072:4076   */\n      0x20\n        /* \"#utility.yul\":4063:4070   */\n      dup4\n        /* \"#utility.yul\":4059:4077   */\n      add\n        /* \"#utility.yul\":4046:4101   */\n      calldatacopy\n        /* \"#utility.yul\":4146:4147   */\n      0x00\n        /* \"#utility.yul\":4121:4137   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4139:4143   */\n      0x20\n        /* \"#utility.yul\":4117:4144   */\n      add\n        /* \"#utility.yul\":4110:4148   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4125:4132   */\n      swap4\n        /* \"#utility.yul\":3649:4179   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4184:5127   */\n    tag_37:\n        /* \"#utility.yul\":4338:4344   */\n      0x00\n        /* \"#utility.yul\":4346:4352   */\n      dup1\n        /* \"#utility.yul\":4354:4360   */\n      0x00\n        /* \"#utility.yul\":4362:4368   */\n      dup1\n        /* \"#utility.yul\":4370:4376   */\n      0x00\n        /* \"#utility.yul\":4423:4426   */\n      0xa0\n        /* \"#utility.yul\":4411:4420   */\n      dup7\n        /* \"#utility.yul\":4402:4409   */\n      dup9\n        /* \"#utility.yul\":4398:4421   */\n      sub\n        /* \"#utility.yul\":4394:4427   */\n      slt\n        /* \"#utility.yul\":4391:4444   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4440:4441   */\n      0x00\n        /* \"#utility.yul\":4437:4438   */\n      dup1\n        /* \"#utility.yul\":4430:4442   */\n      revert\n        /* \"#utility.yul\":4391:4444   */\n    tag_273:\n        /* \"#utility.yul\":4463:4492   */\n      tag_274\n        /* \"#utility.yul\":4482:4491   */\n      dup7\n        /* \"#utility.yul\":4463:4492   */\n      tag_219\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4453:4492   */\n      swap5\n      pop\n        /* \"#utility.yul\":4511:4549   */\n      tag_275\n        /* \"#utility.yul\":4545:4547   */\n      0x20\n        /* \"#utility.yul\":4534:4543   */\n      dup8\n        /* \"#utility.yul\":4530:4548   */\n      add\n        /* \"#utility.yul\":4511:4549   */\n      tag_219\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4501:4549   */\n      swap4\n      pop\n        /* \"#utility.yul\":4600:4602   */\n      0x40\n        /* \"#utility.yul\":4589:4598   */\n      dup7\n        /* \"#utility.yul\":4585:4603   */\n      add\n        /* \"#utility.yul\":4572:4604   */\n      calldataload\n        /* \"#utility.yul\":4623:4641   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4664:4666   */\n      dup1\n        /* \"#utility.yul\":4656:4662   */\n      dup3\n        /* \"#utility.yul\":4653:4667   */\n      gt\n        /* \"#utility.yul\":4650:4684   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4680:4681   */\n      0x00\n        /* \"#utility.yul\":4677:4678   */\n      dup1\n        /* \"#utility.yul\":4670:4682   */\n      revert\n        /* \"#utility.yul\":4650:4684   */\n    tag_276:\n        /* \"#utility.yul\":4703:4764   */\n      tag_277\n        /* \"#utility.yul\":4756:4763   */\n      dup10\n        /* \"#utility.yul\":4747:4753   */\n      dup4\n        /* \"#utility.yul\":4736:4745   */\n      dup11\n        /* \"#utility.yul\":4732:4754   */\n      add\n        /* \"#utility.yul\":4703:4764   */\n      tag_224\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4693:4764   */\n      swap5\n      pop\n        /* \"#utility.yul\":4817:4819   */\n      0x60\n        /* \"#utility.yul\":4806:4815   */\n      dup9\n        /* \"#utility.yul\":4802:4820   */\n      add\n        /* \"#utility.yul\":4789:4821   */\n      calldataload\n        /* \"#utility.yul\":4773:4821   */\n      swap2\n      pop\n        /* \"#utility.yul\":4846:4848   */\n      dup1\n        /* \"#utility.yul\":4836:4844   */\n      dup3\n        /* \"#utility.yul\":4833:4849   */\n      gt\n        /* \"#utility.yul\":4830:4866   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4862:4863   */\n      0x00\n        /* \"#utility.yul\":4859:4860   */\n      dup1\n        /* \"#utility.yul\":4852:4864   */\n      revert\n        /* \"#utility.yul\":4830:4866   */\n    tag_278:\n        /* \"#utility.yul\":4885:4948   */\n      tag_279\n        /* \"#utility.yul\":4940:4947   */\n      dup10\n        /* \"#utility.yul\":4929:4937   */\n      dup4\n        /* \"#utility.yul\":4918:4927   */\n      dup11\n        /* \"#utility.yul\":4914:4938   */\n      add\n        /* \"#utility.yul\":4885:4948   */\n      tag_224\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4875:4948   */\n      swap4\n      pop\n        /* \"#utility.yul\":5001:5004   */\n      0x80\n        /* \"#utility.yul\":4990:4999   */\n      dup9\n        /* \"#utility.yul\":4986:5005   */\n      add\n        /* \"#utility.yul\":4973:5006   */\n      calldataload\n        /* \"#utility.yul\":4957:5006   */\n      swap2\n      pop\n        /* \"#utility.yul\":5031:5033   */\n      dup1\n        /* \"#utility.yul\":5021:5029   */\n      dup3\n        /* \"#utility.yul\":5018:5034   */\n      gt\n        /* \"#utility.yul\":5015:5051   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5015:5051   */\n    tag_280:\n      pop\n        /* \"#utility.yul\":5070:5121   */\n      tag_281\n        /* \"#utility.yul\":5113:5120   */\n      dup9\n        /* \"#utility.yul\":5102:5110   */\n      dup3\n        /* \"#utility.yul\":5091:5100   */\n      dup10\n        /* \"#utility.yul\":5087:5111   */\n      add\n        /* \"#utility.yul\":5070:5121   */\n      tag_225\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5060:5121   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4184:5127   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5132:6278   */\n    tag_41:\n        /* \"#utility.yul\":5250:5256   */\n      0x00\n        /* \"#utility.yul\":5258:5264   */\n      dup1\n        /* \"#utility.yul\":5311:5313   */\n      0x40\n        /* \"#utility.yul\":5299:5308   */\n      dup4\n        /* \"#utility.yul\":5290:5297   */\n      dup6\n        /* \"#utility.yul\":5286:5309   */\n      sub\n        /* \"#utility.yul\":5282:5314   */\n      slt\n        /* \"#utility.yul\":5279:5331   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5327:5328   */\n      0x00\n        /* \"#utility.yul\":5324:5325   */\n      dup1\n        /* \"#utility.yul\":5317:5329   */\n      revert\n        /* \"#utility.yul\":5279:5331   */\n    tag_283:\n        /* \"#utility.yul\":5367:5376   */\n      dup3\n        /* \"#utility.yul\":5354:5377   */\n      calldataload\n        /* \"#utility.yul\":5396:5414   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5437:5439   */\n      dup1\n        /* \"#utility.yul\":5429:5435   */\n      dup3\n        /* \"#utility.yul\":5426:5440   */\n      gt\n        /* \"#utility.yul\":5423:5457   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5453:5454   */\n      0x00\n        /* \"#utility.yul\":5450:5451   */\n      dup1\n        /* \"#utility.yul\":5443:5455   */\n      revert\n        /* \"#utility.yul\":5423:5457   */\n    tag_284:\n        /* \"#utility.yul\":5491:5497   */\n      dup2\n        /* \"#utility.yul\":5480:5489   */\n      dup6\n        /* \"#utility.yul\":5476:5498   */\n      add\n        /* \"#utility.yul\":5466:5498   */\n      swap2\n      pop\n        /* \"#utility.yul\":5536:5543   */\n      dup6\n        /* \"#utility.yul\":5529:5533   */\n      0x1f\n        /* \"#utility.yul\":5525:5527   */\n      dup4\n        /* \"#utility.yul\":5521:5534   */\n      add\n        /* \"#utility.yul\":5517:5544   */\n      slt\n        /* \"#utility.yul\":5507:5562   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5555:5556   */\n      dup1\n        /* \"#utility.yul\":5548:5560   */\n      revert\n        /* \"#utility.yul\":5507:5562   */\n    tag_285:\n        /* \"#utility.yul\":5594:5596   */\n      dup2\n        /* \"#utility.yul\":5581:5597   */\n      calldataload\n        /* \"#utility.yul\":5616:5620   */\n      0x20\n        /* \"#utility.yul\":5640:5700   */\n      tag_286\n        /* \"#utility.yul\":5656:5699   */\n      tag_261\n        /* \"#utility.yul\":5696:5698   */\n      dup4\n        /* \"#utility.yul\":5656:5699   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":5640:5700   */\n    tag_286:\n        /* \"#utility.yul\":5734:5749   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5816:5817   */\n      0x05\n        /* \"#utility.yul\":5812:5822   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":5804:5823   */\n      dup5\n      add\n        /* \"#utility.yul\":5800:5828   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":5765:5777   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5840:5859   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5837:5876   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5872:5873   */\n      0x00\n        /* \"#utility.yul\":5869:5870   */\n      dup1\n        /* \"#utility.yul\":5862:5874   */\n      revert\n        /* \"#utility.yul\":5837:5876   */\n    tag_288:\n        /* \"#utility.yul\":5896:5907   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5916:6064   */\n    tag_289:\n        /* \"#utility.yul\":5932:5938   */\n      dup4\n        /* \"#utility.yul\":5927:5930   */\n      dup7\n        /* \"#utility.yul\":5924:5939   */\n      lt\n        /* \"#utility.yul\":5916:6064   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":5998:6021   */\n      tag_292\n        /* \"#utility.yul\":6017:6020   */\n      dup7\n        /* \"#utility.yul\":5998:6021   */\n      tag_219\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5986:6022   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5949:5961   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6042:6054   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5916:6064   */\n      jump(tag_289)\n    tag_291:\n        /* \"#utility.yul\":6083:6088   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6126:6144   */\n      dup7\n      add\n        /* \"#utility.yul\":6113:6145   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6157:6173   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6154:6190   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6183:6184   */\n      dup1\n        /* \"#utility.yul\":6176:6188   */\n      revert\n        /* \"#utility.yul\":6154:6190   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":6209:6272   */\n      tag_294\n        /* \"#utility.yul\":6264:6271   */\n      dup6\n        /* \"#utility.yul\":6253:6261   */\n      dup3\n        /* \"#utility.yul\":6242:6251   */\n      dup7\n        /* \"#utility.yul\":6238:6262   */\n      add\n        /* \"#utility.yul\":6209:6272   */\n      tag_224\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6199:6272   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5132:6278   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6283:6722   */\n    tag_226:\n        /* \"#utility.yul\":6336:6339   */\n      0x00\n        /* \"#utility.yul\":6374:6379   */\n      dup2\n        /* \"#utility.yul\":6368:6380   */\n      mload\n        /* \"#utility.yul\":6401:6407   */\n      dup1\n        /* \"#utility.yul\":6396:6399   */\n      dup5\n        /* \"#utility.yul\":6389:6408   */\n      mstore\n        /* \"#utility.yul\":6427:6431   */\n      0x20\n        /* \"#utility.yul\":6456:6460   */\n      dup1\n        /* \"#utility.yul\":6451:6454   */\n      dup6\n        /* \"#utility.yul\":6447:6461   */\n      add\n        /* \"#utility.yul\":6440:6461   */\n      swap5\n      pop\n        /* \"#utility.yul\":6495:6499   */\n      0x20\n        /* \"#utility.yul\":6488:6493   */\n      dup5\n        /* \"#utility.yul\":6484:6500   */\n      add\n        /* \"#utility.yul\":6518:6519   */\n      0x00\n        /* \"#utility.yul\":6528:6697   */\n    tag_296:\n        /* \"#utility.yul\":6542:6548   */\n      dup4\n        /* \"#utility.yul\":6539:6540   */\n      dup2\n        /* \"#utility.yul\":6536:6549   */\n      lt\n        /* \"#utility.yul\":6528:6697   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":6603:6616   */\n      dup2\n      mload\n        /* \"#utility.yul\":6591:6617   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6637:6649   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6672:6687   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6564:6565   */\n      0x01\n        /* \"#utility.yul\":6557:6566   */\n      add\n        /* \"#utility.yul\":6528:6697   */\n      jump(tag_296)\n    tag_298:\n      pop\n        /* \"#utility.yul\":6713:6716   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6283:6722   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6727:6988   */\n    tag_44:\n        /* \"#utility.yul\":6906:6908   */\n      0x20\n        /* \"#utility.yul\":6895:6904   */\n      dup2\n        /* \"#utility.yul\":6888:6909   */\n      mstore\n        /* \"#utility.yul\":6869:6873   */\n      0x00\n        /* \"#utility.yul\":6926:6982   */\n      tag_238\n        /* \"#utility.yul\":6978:6980   */\n      0x20\n        /* \"#utility.yul\":6967:6976   */\n      dup4\n        /* \"#utility.yul\":6963:6981   */\n      add\n        /* \"#utility.yul\":6955:6961   */\n      dup5\n        /* \"#utility.yul\":6926:6982   */\n      tag_226\n      jump\t// in\n        /* \"#utility.yul\":6993:7340   */\n    tag_47:\n        /* \"#utility.yul\":7058:7064   */\n      0x00\n        /* \"#utility.yul\":7066:7072   */\n      dup1\n        /* \"#utility.yul\":7119:7121   */\n      0x40\n        /* \"#utility.yul\":7107:7116   */\n      dup4\n        /* \"#utility.yul\":7098:7105   */\n      dup6\n        /* \"#utility.yul\":7094:7117   */\n      sub\n        /* \"#utility.yul\":7090:7122   */\n      slt\n        /* \"#utility.yul\":7087:7139   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":7135:7136   */\n      0x00\n        /* \"#utility.yul\":7132:7133   */\n      dup1\n        /* \"#utility.yul\":7125:7137   */\n      revert\n        /* \"#utility.yul\":7087:7139   */\n    tag_302:\n        /* \"#utility.yul\":7158:7187   */\n      tag_303\n        /* \"#utility.yul\":7177:7186   */\n      dup4\n        /* \"#utility.yul\":7158:7187   */\n      tag_219\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7148:7187   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7239   */\n      0x20\n        /* \"#utility.yul\":7226:7235   */\n      dup4\n        /* \"#utility.yul\":7222:7240   */\n      add\n        /* \"#utility.yul\":7209:7241   */\n      calldataload\n        /* \"#utility.yul\":7284:7289   */\n      dup1\n        /* \"#utility.yul\":7277:7290   */\n      iszero\n        /* \"#utility.yul\":7270:7291   */\n      iszero\n        /* \"#utility.yul\":7263:7268   */\n      dup2\n        /* \"#utility.yul\":7260:7292   */\n      eq\n        /* \"#utility.yul\":7250:7310   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":7306:7307   */\n      0x00\n        /* \"#utility.yul\":7303:7304   */\n      dup1\n        /* \"#utility.yul\":7296:7308   */\n      revert\n        /* \"#utility.yul\":7250:7310   */\n    tag_304:\n        /* \"#utility.yul\":7329:7334   */\n      dup1\n        /* \"#utility.yul\":7319:7334   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6993:7340   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7345:7605   */\n    tag_51:\n        /* \"#utility.yul\":7413:7419   */\n      0x00\n        /* \"#utility.yul\":7421:7427   */\n      dup1\n        /* \"#utility.yul\":7474:7476   */\n      0x40\n        /* \"#utility.yul\":7462:7471   */\n      dup4\n        /* \"#utility.yul\":7453:7460   */\n      dup6\n        /* \"#utility.yul\":7449:7472   */\n      sub\n        /* \"#utility.yul\":7445:7477   */\n      slt\n        /* \"#utility.yul\":7442:7494   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":7490:7491   */\n      0x00\n        /* \"#utility.yul\":7487:7488   */\n      dup1\n        /* \"#utility.yul\":7480:7492   */\n      revert\n        /* \"#utility.yul\":7442:7494   */\n    tag_306:\n        /* \"#utility.yul\":7513:7542   */\n      tag_307\n        /* \"#utility.yul\":7532:7541   */\n      dup4\n        /* \"#utility.yul\":7513:7542   */\n      tag_219\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7503:7542   */\n      swap2\n      pop\n        /* \"#utility.yul\":7561:7599   */\n      tag_308\n        /* \"#utility.yul\":7595:7597   */\n      0x20\n        /* \"#utility.yul\":7584:7593   */\n      dup5\n        /* \"#utility.yul\":7580:7598   */\n      add\n        /* \"#utility.yul\":7561:7599   */\n      tag_219\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7551:7599   */\n      swap1\n      pop\n        /* \"#utility.yul\":7345:7605   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7610:8216   */\n    tag_56:\n        /* \"#utility.yul\":7714:7720   */\n      0x00\n        /* \"#utility.yul\":7722:7728   */\n      dup1\n        /* \"#utility.yul\":7730:7736   */\n      0x00\n        /* \"#utility.yul\":7738:7744   */\n      dup1\n        /* \"#utility.yul\":7746:7752   */\n      0x00\n        /* \"#utility.yul\":7799:7802   */\n      0xa0\n        /* \"#utility.yul\":7787:7796   */\n      dup7\n        /* \"#utility.yul\":7778:7785   */\n      dup9\n        /* \"#utility.yul\":7774:7797   */\n      sub\n        /* \"#utility.yul\":7770:7803   */\n      slt\n        /* \"#utility.yul\":7767:7820   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7816:7817   */\n      0x00\n        /* \"#utility.yul\":7813:7814   */\n      dup1\n        /* \"#utility.yul\":7806:7818   */\n      revert\n        /* \"#utility.yul\":7767:7820   */\n    tag_310:\n        /* \"#utility.yul\":7839:7868   */\n      tag_311\n        /* \"#utility.yul\":7858:7867   */\n      dup7\n        /* \"#utility.yul\":7839:7868   */\n      tag_219\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7829:7868   */\n      swap5\n      pop\n        /* \"#utility.yul\":7887:7925   */\n      tag_312\n        /* \"#utility.yul\":7921:7923   */\n      0x20\n        /* \"#utility.yul\":7910:7919   */\n      dup8\n        /* \"#utility.yul\":7906:7924   */\n      add\n        /* \"#utility.yul\":7887:7925   */\n      tag_219\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7877:7925   */\n      swap4\n      pop\n        /* \"#utility.yul\":7972:7974   */\n      0x40\n        /* \"#utility.yul\":7961:7970   */\n      dup7\n        /* \"#utility.yul\":7957:7975   */\n      add\n        /* \"#utility.yul\":7944:7976   */\n      calldataload\n        /* \"#utility.yul\":7934:7976   */\n      swap3\n      pop\n        /* \"#utility.yul\":8023:8025   */\n      0x60\n        /* \"#utility.yul\":8012:8021   */\n      dup7\n        /* \"#utility.yul\":8008:8026   */\n      add\n        /* \"#utility.yul\":7995:8027   */\n      calldataload\n        /* \"#utility.yul\":7985:8027   */\n      swap2\n      pop\n        /* \"#utility.yul\":8078:8081   */\n      0x80\n        /* \"#utility.yul\":8067:8076   */\n      dup7\n        /* \"#utility.yul\":8063:8082   */\n      add\n        /* \"#utility.yul\":8050:8083   */\n      calldataload\n        /* \"#utility.yul\":8106:8124   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8098:8104   */\n      dup2\n        /* \"#utility.yul\":8095:8125   */\n      gt\n        /* \"#utility.yul\":8092:8142   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":8138:8139   */\n      0x00\n        /* \"#utility.yul\":8135:8136   */\n      dup1\n        /* \"#utility.yul\":8128:8140   */\n      revert\n        /* \"#utility.yul\":8092:8142   */\n    tag_313:\n        /* \"#utility.yul\":8161:8210   */\n      tag_281\n        /* \"#utility.yul\":8202:8209   */\n      dup9\n        /* \"#utility.yul\":8193:8199   */\n      dup3\n        /* \"#utility.yul\":8182:8191   */\n      dup10\n        /* \"#utility.yul\":8178:8200   */\n      add\n        /* \"#utility.yul\":8161:8210   */\n      tag_225\n      jump\t// in\n        /* \"#utility.yul\":8221:8601   */\n    tag_66:\n        /* \"#utility.yul\":8300:8301   */\n      0x01\n        /* \"#utility.yul\":8296:8308   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8343:8355   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8364:8425   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":8418:8422   */\n      0x7f\n        /* \"#utility.yul\":8410:8416   */\n      dup3\n        /* \"#utility.yul\":8406:8423   */\n      and\n        /* \"#utility.yul\":8396:8423   */\n      swap2\n      pop\n        /* \"#utility.yul\":8364:8425   */\n    tag_316:\n        /* \"#utility.yul\":8471:8473   */\n      0x20\n        /* \"#utility.yul\":8463:8469   */\n      dup3\n        /* \"#utility.yul\":8460:8474   */\n      lt\n        /* \"#utility.yul\":8440:8458   */\n      dup2\n        /* \"#utility.yul\":8437:8475   */\n      sub\n        /* \"#utility.yul\":8434:8595   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8517:8527   */\n      0x4e487b71\n        /* \"#utility.yul\":8512:8515   */\n      0xe0\n        /* \"#utility.yul\":8508:8528   */\n      shl\n        /* \"#utility.yul\":8505:8506   */\n      0x00\n        /* \"#utility.yul\":8498:8529   */\n      mstore\n        /* \"#utility.yul\":8552:8556   */\n      0x22\n        /* \"#utility.yul\":8549:8550   */\n      0x04\n        /* \"#utility.yul\":8542:8557   */\n      mstore\n        /* \"#utility.yul\":8580:8584   */\n      0x24\n        /* \"#utility.yul\":8577:8578   */\n      0x00\n        /* \"#utility.yul\":8570:8585   */\n      revert\n        /* \"#utility.yul\":8434:8595   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":8221:8601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9168:9295   */\n    tag_102:\n        /* \"#utility.yul\":9229:9239   */\n      0x4e487b71\n        /* \"#utility.yul\":9224:9227   */\n      0xe0\n        /* \"#utility.yul\":9220:9240   */\n      shl\n        /* \"#utility.yul\":9217:9218   */\n      0x00\n        /* \"#utility.yul\":9210:9241   */\n      mstore\n        /* \"#utility.yul\":9260:9264   */\n      0x32\n        /* \"#utility.yul\":9257:9258   */\n      0x04\n        /* \"#utility.yul\":9250:9265   */\n      mstore\n        /* \"#utility.yul\":9284:9288   */\n      0x24\n        /* \"#utility.yul\":9281:9282   */\n      0x00\n        /* \"#utility.yul\":9274:9289   */\n      revert\n        /* \"#utility.yul\":9930:10152   */\n    tag_174:\n        /* \"#utility.yul\":9995:10004   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10016:10026   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10013:10146   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":10068:10078   */\n      0x4e487b71\n        /* \"#utility.yul\":10063:10066   */\n      0xe0\n        /* \"#utility.yul\":10059:10079   */\n      shl\n        /* \"#utility.yul\":10056:10057   */\n      0x00\n        /* \"#utility.yul\":10049:10080   */\n      mstore\n        /* \"#utility.yul\":10103:10107   */\n      0x11\n        /* \"#utility.yul\":10100:10101   */\n      0x04\n        /* \"#utility.yul\":10093:10108   */\n      mstore\n        /* \"#utility.yul\":10131:10135   */\n      0x24\n        /* \"#utility.yul\":10128:10129   */\n      0x00\n        /* \"#utility.yul\":10121:10136   */\n      revert\n        /* \"#utility.yul\":10157:10622   */\n    tag_181:\n        /* \"#utility.yul\":10414:10416   */\n      0x40\n        /* \"#utility.yul\":10403:10412   */\n      dup2\n        /* \"#utility.yul\":10396:10417   */\n      mstore\n        /* \"#utility.yul\":10377:10381   */\n      0x00\n        /* \"#utility.yul\":10440:10496   */\n      tag_326\n        /* \"#utility.yul\":10492:10494   */\n      0x40\n        /* \"#utility.yul\":10481:10490   */\n      dup4\n        /* \"#utility.yul\":10477:10495   */\n      add\n        /* \"#utility.yul\":10469:10475   */\n      dup6\n        /* \"#utility.yul\":10440:10496   */\n      tag_226\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10544:10553   */\n      dup3\n        /* \"#utility.yul\":10536:10542   */\n      dup2\n        /* \"#utility.yul\":10532:10554   */\n      sub\n        /* \"#utility.yul\":10527:10529   */\n      0x20\n        /* \"#utility.yul\":10516:10525   */\n      dup5\n        /* \"#utility.yul\":10512:10530   */\n      add\n        /* \"#utility.yul\":10505:10555   */\n      mstore\n        /* \"#utility.yul\":10572:10616   */\n      tag_327\n        /* \"#utility.yul\":10609:10615   */\n      dup2\n        /* \"#utility.yul\":10601:10607   */\n      dup6\n        /* \"#utility.yul\":10572:10616   */\n      tag_226\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10564:10616   */\n      swap6\n        /* \"#utility.yul\":10157:10622   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10627:11188   */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10924:10939   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":10906:10940   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10976:10991   */\n      dup6\n      and\n        /* \"#utility.yul\":10971:10973   */\n      0x20\n        /* \"#utility.yul\":10956:10974   */\n      dup3\n      add\n        /* \"#utility.yul\":10949:10992   */\n      mstore\n        /* \"#utility.yul\":11023:11025   */\n      0x40\n        /* \"#utility.yul\":11008:11026   */\n      dup2\n      add\n        /* \"#utility.yul\":11001:11035   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":11066:11068   */\n      0x60\n        /* \"#utility.yul\":11051:11069   */\n      dup2\n      add\n        /* \"#utility.yul\":11044:11078   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10886:10889   */\n      0xa0\n        /* \"#utility.yul\":11109:11112   */\n      0x80\n        /* \"#utility.yul\":11094:11113   */\n      dup3\n      add\n        /* \"#utility.yul\":11087:11119   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10849:10853   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11136:11182   */\n      tag_329\n      swap1\n        /* \"#utility.yul\":11162:11181   */\n      dup4\n      add\n        /* \"#utility.yul\":11154:11160   */\n      dup5\n        /* \"#utility.yul\":11136:11182   */\n      tag_221\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":11128:11182   */\n      swap8\n        /* \"#utility.yul\":10627:11188   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11193:11442   */\n    tag_188:\n        /* \"#utility.yul\":11262:11268   */\n      0x00\n        /* \"#utility.yul\":11315:11317   */\n      0x20\n        /* \"#utility.yul\":11303:11312   */\n      dup3\n        /* \"#utility.yul\":11294:11301   */\n      dup5\n        /* \"#utility.yul\":11290:11313   */\n      sub\n        /* \"#utility.yul\":11286:11318   */\n      slt\n        /* \"#utility.yul\":11283:11335   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":11331:11332   */\n      0x00\n        /* \"#utility.yul\":11328:11329   */\n      dup1\n        /* \"#utility.yul\":11321:11333   */\n      revert\n        /* \"#utility.yul\":11283:11335   */\n    tag_331:\n        /* \"#utility.yul\":11363:11372   */\n      dup2\n        /* \"#utility.yul\":11357:11373   */\n      mload\n        /* \"#utility.yul\":11382:11412   */\n      tag_238\n        /* \"#utility.yul\":11406:11411   */\n      dup2\n        /* \"#utility.yul\":11382:11412   */\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":11447:12274   */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11844:11859   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":11826:11860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11896:11911   */\n      dup6\n      and\n        /* \"#utility.yul\":11891:11893   */\n      0x20\n        /* \"#utility.yul\":11876:11894   */\n      dup3\n      add\n        /* \"#utility.yul\":11869:11912   */\n      mstore\n        /* \"#utility.yul\":11806:11809   */\n      0xa0\n        /* \"#utility.yul\":11943:11945   */\n      0x40\n        /* \"#utility.yul\":11928:11946   */\n      dup3\n      add\n        /* \"#utility.yul\":11921:11952   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11769:11773   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11975:12032   */\n      tag_334\n      swap1\n        /* \"#utility.yul\":12012:12031   */\n      dup4\n      add\n        /* \"#utility.yul\":12004:12010   */\n      dup7\n        /* \"#utility.yul\":11975:12032   */\n      tag_226\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":12080:12089   */\n      dup3\n        /* \"#utility.yul\":12072:12078   */\n      dup2\n        /* \"#utility.yul\":12068:12090   */\n      sub\n        /* \"#utility.yul\":12063:12065   */\n      0x60\n        /* \"#utility.yul\":12052:12061   */\n      dup5\n        /* \"#utility.yul\":12048:12066   */\n      add\n        /* \"#utility.yul\":12041:12091   */\n      mstore\n        /* \"#utility.yul\":12114:12158   */\n      tag_335\n        /* \"#utility.yul\":12151:12157   */\n      dup2\n        /* \"#utility.yul\":12143:12149   */\n      dup7\n        /* \"#utility.yul\":12114:12158   */\n      tag_226\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12100:12158   */\n      swap1\n      pop\n        /* \"#utility.yul\":12207:12216   */\n      dup3\n        /* \"#utility.yul\":12199:12205   */\n      dup2\n        /* \"#utility.yul\":12195:12217   */\n      sub\n        /* \"#utility.yul\":12189:12192   */\n      0x80\n        /* \"#utility.yul\":12178:12187   */\n      dup5\n        /* \"#utility.yul\":12174:12193   */\n      add\n        /* \"#utility.yul\":12167:12218   */\n      mstore\n        /* \"#utility.yul\":12235:12268   */\n      tag_336\n        /* \"#utility.yul\":12261:12267   */\n      dup2\n        /* \"#utility.yul\":12253:12259   */\n      dup6\n        /* \"#utility.yul\":12235:12268   */\n      tag_221\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":12227:12268   */\n      swap9\n        /* \"#utility.yul\":11447:12274   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208ac2e9740ba79611762983bff00f7a7c2c6fbb661512908a54df62f39b37d73e64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2360": {
									"entryPoint": null,
									"id": 2360,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3376": {
									"entryPoint": null,
									"id": 3376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArrays_3349": {
									"entryPoint": null,
									"id": 3349,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_3333": {
									"entryPoint": 1264,
									"id": 3333,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_3263": {
									"entryPoint": 950,
									"id": 3263,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_3025": {
									"entryPoint": 195,
									"id": 3025,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1587": {
									"entryPoint": null,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_2973": {
									"entryPoint": 177,
									"id": 2973,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_2841": {
									"entryPoint": 304,
									"id": 2841,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_2765": {
									"entryPoint": 403,
									"id": 2765,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1562": {
									"entryPoint": null,
									"id": 1562,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6865:1",
										"nodeType": "YulBlock",
										"src": "0:6865:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:462:1",
													"nodeType": "YulBlock",
													"src": "738:462:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:423:1",
																"nodeType": "YulBlock",
																"src": "771:423:1",
																"statements": [
																	{
																		"nativeSrc": "785:11:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "795:1:1",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "789:2:1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "816:1:1",
																					"nodeType": "YulLiteral",
																					"src": "816:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "819:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "819:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "809:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nativeSrc": "809:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "809:16:1"
																		},
																		"nativeSrc": "809:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "809:16:1"
																	},
																	{
																		"nativeSrc": "838:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "838:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "860:1:1",
																					"nodeType": "YulLiteral",
																					"src": "860:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "863:4:1",
																					"nodeType": "YulLiteral",
																					"src": "863:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "850:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "850:9:1"
																			},
																			"nativeSrc": "850:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "850:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "842:4:1",
																				"nodeType": "YulTypedName",
																				"src": "842:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "881:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "881:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "904:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "904:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "914:1:1",
																							"nodeType": "YulLiteral",
																							"src": "914:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "921:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "921:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "933:2:1",
																									"nodeType": "YulLiteral",
																									"src": "933:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "917:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "917:3:1"
																							},
																							"nativeSrc": "917:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "917:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "910:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "910:3:1"
																					},
																					"nativeSrc": "910:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "910:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "900:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "900:3:1"
																			},
																			"nativeSrc": "900:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "900:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "885:11:1",
																				"nodeType": "YulTypedName",
																				"src": "885:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "975:23:1",
																			"nodeType": "YulBlock",
																			"src": "975:23:1",
																			"statements": [
																				{
																					"nativeSrc": "977:19:1",
																					"nodeType": "YulAssignment",
																					"src": "977:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "992:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "992:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "977:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "977:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "957:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "957:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "969:4:1",
																					"nodeType": "YulLiteral",
																					"src": "969:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "954:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "954:2:1"
																			},
																			"nativeSrc": "954:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "954:20:1"
																		},
																		"nativeSrc": "951:47:1",
																		"nodeType": "YulIf",
																		"src": "951:47:1"
																	},
																	{
																		"nativeSrc": "1011:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1011:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1025:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1025:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1035:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1035:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1042:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1042:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1047:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1047:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1038:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1038:3:1"
																							},
																							"nativeSrc": "1038:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1038:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1031:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1031:3:1"
																					},
																					"nativeSrc": "1031:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1031:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1021:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1021:3:1"
																			},
																			"nativeSrc": "1021:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1021:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1015:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1015:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1065:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1065:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1078:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1069:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1069:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1163:21:1",
																			"nodeType": "YulBlock",
																			"src": "1163:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1172:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1172:5:1"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "1179:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "1179:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1165:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1165:6:1"
																						},
																						"nativeSrc": "1165:17:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1165:17:1"
																					},
																					"nativeSrc": "1165:17:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1165:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1113:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1113:5:1"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1120:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1120:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1110:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1110:2:1"
																			},
																			"nativeSrc": "1110:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1110:13:1"
																		},
																		"nativeSrc": "1102:82:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1124:26:1",
																			"nodeType": "YulBlock",
																			"src": "1124:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1126:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1126:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1139:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1139:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1146:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1146:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1135:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1135:3:1"
																						},
																						"nativeSrc": "1135:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1135:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1126:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1126:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1106:3:1",
																			"nodeType": "YulBlock",
																			"src": "1106:3:1",
																			"statements": []
																		},
																		"src": "1102:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:446:1",
															"nodeType": "YulIf",
															"src": "748:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:543:1"
											},
											{
												"body": {
													"nativeSrc": "1290:81:1",
													"nodeType": "YulBlock",
													"src": "1290:81:1",
													"statements": [
														{
															"nativeSrc": "1300:65:1",
															"nodeType": "YulAssignment",
															"src": "1300:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1315:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1315:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1333:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1333:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1336:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1336:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1329:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1329:3:1"
																								},
																								"nativeSrc": "1329:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1329:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1346:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1346:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1342:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1342:3:1"
																								},
																								"nativeSrc": "1342:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1342:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1325:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1325:3:1"
																						},
																						"nativeSrc": "1325:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1325:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1321:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1321:3:1"
																				},
																				"nativeSrc": "1321:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1321:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1311:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:1"
																		},
																		"nativeSrc": "1311:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1357:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1357:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1360:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1360:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1353:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:1"
																		},
																		"nativeSrc": "1353:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1308:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:1"
																},
																"nativeSrc": "1308:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1308:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1300:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1300:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1205:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1267:4:1",
														"nodeType": "YulTypedName",
														"src": "1267:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1273:3:1",
														"nodeType": "YulTypedName",
														"src": "1273:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1281:4:1",
														"nodeType": "YulTypedName",
														"src": "1281:4:1",
														"type": ""
													}
												],
												"src": "1205:166:1"
											},
											{
												"body": {
													"nativeSrc": "1472:1249:1",
													"nodeType": "YulBlock",
													"src": "1472:1249:1",
													"statements": [
														{
															"nativeSrc": "1482:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1482:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1502:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1502:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1496:5:1"
																},
																"nativeSrc": "1496:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1496:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1486:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1486:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1549:22:1",
																"nodeType": "YulBlock",
																"src": "1549:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1551:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1551:16:1"
																			},
																			"nativeSrc": "1551:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1551:18:1"
																		},
																		"nativeSrc": "1551:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1551:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1521:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1537:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1537:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1541:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1541:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1533:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1533:3:1"
																				},
																				"nativeSrc": "1533:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1533:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1545:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1545:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1529:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:1"
																		},
																		"nativeSrc": "1529:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1518:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1518:2:1"
																},
																"nativeSrc": "1518:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1518:30:1"
															},
															"nativeSrc": "1515:56:1",
															"nodeType": "YulIf",
															"src": "1515:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1624:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1662:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1662:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1656:5:1"
																				},
																				"nativeSrc": "1656:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1656:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1630:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:25:1"
																		},
																		"nativeSrc": "1630:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1670:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1580:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1580:43:1"
																},
																"nativeSrc": "1580:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1580:97:1"
															},
															"nativeSrc": "1580:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1580:97:1"
														},
														{
															"nativeSrc": "1686:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1686:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1703:1:1",
																"nodeType": "YulLiteral",
																"src": "1703:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1690:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1690:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1713:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1713:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1732:4:1",
																"nodeType": "YulLiteral",
																"src": "1732:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1717:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1717:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1745:17:1",
															"nodeType": "YulAssignment",
															"src": "1745:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1758:4:1",
																"nodeType": "YulLiteral",
																"src": "1758:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1745:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1745:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1808:656:1",
																		"nodeType": "YulBlock",
																		"src": "1808:656:1",
																		"statements": [
																			{
																				"nativeSrc": "1822:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1822:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1841:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1841:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1853:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1853:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1849:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1849:3:1"
																							},
																							"nativeSrc": "1849:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1849:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1837:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1837:3:1"
																					},
																					"nativeSrc": "1837:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1837:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1826:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1826:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1870:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1870:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1914:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1914:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1884:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1884:29:1"
																					},
																					"nativeSrc": "1884:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1884:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1874:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1874:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1932:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1932:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1941:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1936:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1936:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2019:172:1",
																					"nodeType": "YulBlock",
																					"src": "2019:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2044:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2044:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2062:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2062:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2067:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2067:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2058:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2058:3:1"
																												},
																												"nativeSrc": "2058:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2058:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2052:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2052:5:1"
																										},
																										"nativeSrc": "2052:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2052:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2037:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2037:6:1"
																								},
																								"nativeSrc": "2037:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2037:42:1"
																							},
																							"nativeSrc": "2037:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2037:42:1"
																						},
																						{
																							"nativeSrc": "2096:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2096:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2110:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2110:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2118:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2118:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2106:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2106:3:1"
																								},
																								"nativeSrc": "2106:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2106:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2096:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2096:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2137:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2137:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2154:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2154:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2165:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2165:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2150:3:1"
																								},
																								"nativeSrc": "2150:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2150:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2137:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2137:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1966:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1966:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1969:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1969:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1963:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1963:2:1"
																					},
																					"nativeSrc": "1963:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1963:14:1"
																				},
																				"nativeSrc": "1955:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1978:28:1",
																					"nodeType": "YulBlock",
																					"src": "1978:28:1",
																					"statements": [
																						{
																							"nativeSrc": "1980:24:1",
																							"nodeType": "YulAssignment",
																							"src": "1980:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1989:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1989:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1992:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "1992:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1985:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1985:3:1"
																								},
																								"nativeSrc": "1985:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1985:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1980:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1980:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1959:3:1",
																					"nodeType": "YulBlock",
																					"src": "1959:3:1",
																					"statements": []
																				},
																				"src": "1955:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2239:166:1",
																					"nodeType": "YulBlock",
																					"src": "2239:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2257:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2257:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2284:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2284:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2289:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2289:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2280:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2280:3:1"
																										},
																										"nativeSrc": "2280:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2280:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2274:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2274:5:1"
																								},
																								"nativeSrc": "2274:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2274:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2261:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2261:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2324:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2324:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2336:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2336:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2363:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2363:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2366:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2366:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2359:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2359:3:1"
																																		},
																																		"nativeSrc": "2359:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2359:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2375:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2375:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2355:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2355:3:1"
																																},
																																"nativeSrc": "2355:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2355:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2385:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2385:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2381:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2381:3:1"
																																},
																																"nativeSrc": "2381:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2381:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2351:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2351:3:1"
																														},
																														"nativeSrc": "2351:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2351:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2347:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2347:3:1"
																												},
																												"nativeSrc": "2347:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2347:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2332:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2332:3:1"
																										},
																										"nativeSrc": "2332:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2332:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2317:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2317:6:1"
																								},
																								"nativeSrc": "2317:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2317:74:1"
																							},
																							"nativeSrc": "2317:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2317:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2210:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2210:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2219:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2219:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2207:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2207:2:1"
																					},
																					"nativeSrc": "2207:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2207:19:1"
																				},
																				"nativeSrc": "2204:201:1",
																				"nodeType": "YulIf",
																				"src": "2204:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2425:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2425:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2439:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2439:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2442:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2442:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2435:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2435:3:1"
																									},
																									"nativeSrc": "2435:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2435:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2451:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2451:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2431:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2431:3:1"
																							},
																							"nativeSrc": "2431:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2431:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2418:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2418:6:1"
																					},
																					"nativeSrc": "2418:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2418:36:1"
																				},
																				"nativeSrc": "2418:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2418:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1801:663:1",
																	"nodeType": "YulCase",
																	"src": "1801:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1806:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1806:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2481:234:1",
																		"nodeType": "YulBlock",
																		"src": "2481:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2495:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2495:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2508:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2508:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2499:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2499:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2544:67:1",
																					"nodeType": "YulBlock",
																					"src": "2544:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2562:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2562:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2581:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2581:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2586:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2586:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2577:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2577:3:1"
																										},
																										"nativeSrc": "2577:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2577:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2571:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								},
																								"nativeSrc": "2571:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2571:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2562:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2562:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2525:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2525:6:1"
																				},
																				"nativeSrc": "2522:89:1",
																				"nodeType": "YulIf",
																				"src": "2522:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2631:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2631:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2690:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2690:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2697:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2697:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2637:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2637:52:1"
																							},
																							"nativeSrc": "2637:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2637:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2624:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2624:6:1"
																					},
																					"nativeSrc": "2624:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2624:81:1"
																				},
																				"nativeSrc": "2624:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2624:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2473:242:1",
																	"nodeType": "YulCase",
																	"src": "2473:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1781:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1781:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1789:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1778:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:1"
																},
																"nativeSrc": "1778:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1778:14:1"
															},
															"nativeSrc": "1771:944:1",
															"nodeType": "YulSwitch",
															"src": "1771:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1376:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1457:4:1",
														"nodeType": "YulTypedName",
														"src": "1457:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1463:3:1",
														"nodeType": "YulTypedName",
														"src": "1463:3:1",
														"type": ""
													}
												],
												"src": "1376:1345:1"
											},
											{
												"body": {
													"nativeSrc": "2827:102:1",
													"nodeType": "YulBlock",
													"src": "2827:102:1",
													"statements": [
														{
															"nativeSrc": "2837:26:1",
															"nodeType": "YulAssignment",
															"src": "2837:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2849:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2849:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:1"
																},
																"nativeSrc": "2845:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2845:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2837:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2837:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2879:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2879:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2894:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2910:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2910:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2915:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2915:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2906:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2906:3:1"
																						},
																						"nativeSrc": "2906:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2906:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2919:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2919:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2902:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2902:3:1"
																				},
																				"nativeSrc": "2902:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2902:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2890:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2890:3:1"
																		},
																		"nativeSrc": "2890:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2890:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2872:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:1"
																},
																"nativeSrc": "2872:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2872:51:1"
															},
															"nativeSrc": "2872:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2872:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2726:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2796:9:1",
														"nodeType": "YulTypedName",
														"src": "2796:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2807:6:1",
														"nodeType": "YulTypedName",
														"src": "2807:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2818:4:1",
														"nodeType": "YulTypedName",
														"src": "2818:4:1",
														"type": ""
													}
												],
												"src": "2726:203:1"
											},
											{
												"body": {
													"nativeSrc": "3063:119:1",
													"nodeType": "YulBlock",
													"src": "3063:119:1",
													"statements": [
														{
															"nativeSrc": "3073:26:1",
															"nodeType": "YulAssignment",
															"src": "3073:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3085:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3085:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3096:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3096:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3081:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3081:3:1"
																},
																"nativeSrc": "3081:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3081:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3073:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3073:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3115:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3115:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3126:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3126:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3108:6:1"
																},
																"nativeSrc": "3108:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3108:25:1"
															},
															"nativeSrc": "3108:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3108:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3153:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3153:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3164:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3164:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3149:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:1"
																		},
																		"nativeSrc": "3149:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3169:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3169:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:1"
																},
																"nativeSrc": "3142:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3142:34:1"
															},
															"nativeSrc": "3142:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3142:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2934:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3024:9:1",
														"nodeType": "YulTypedName",
														"src": "3024:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3035:6:1",
														"nodeType": "YulTypedName",
														"src": "3035:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3043:6:1",
														"nodeType": "YulTypedName",
														"src": "3043:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3054:4:1",
														"nodeType": "YulTypedName",
														"src": "3054:4:1",
														"type": ""
													}
												],
												"src": "2934:248:1"
											},
											{
												"body": {
													"nativeSrc": "3372:232:1",
													"nodeType": "YulBlock",
													"src": "3372:232:1",
													"statements": [
														{
															"nativeSrc": "3382:27:1",
															"nodeType": "YulAssignment",
															"src": "3382:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3394:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3394:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3405:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3405:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3390:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3390:3:1"
																},
																"nativeSrc": "3390:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3390:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3382:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3382:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3440:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3440:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3456:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3456:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3461:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3461:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3452:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3452:3:1"
																						},
																						"nativeSrc": "3452:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3452:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3465:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3465:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3448:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3448:3:1"
																				},
																				"nativeSrc": "3448:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3448:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3436:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:1"
																		},
																		"nativeSrc": "3436:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3418:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:1"
																},
																"nativeSrc": "3418:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3418:51:1"
															},
															"nativeSrc": "3418:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3418:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3489:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3489:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3500:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3500:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3485:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3485:3:1"
																		},
																		"nativeSrc": "3485:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3485:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3505:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3505:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3478:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3478:6:1"
																},
																"nativeSrc": "3478:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3478:34:1"
															},
															"nativeSrc": "3478:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3478:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3532:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3532:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3543:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3543:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:1"
																		},
																		"nativeSrc": "3528:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3528:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3548:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3548:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nativeSrc": "3521:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3521:34:1"
															},
															"nativeSrc": "3521:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3521:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3575:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3586:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3586:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3571:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:1"
																		},
																		"nativeSrc": "3571:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3591:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3591:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3564:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3564:6:1"
																},
																"nativeSrc": "3564:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3564:34:1"
															},
															"nativeSrc": "3564:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3564:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3187:417:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3317:9:1",
														"nodeType": "YulTypedName",
														"src": "3317:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3328:6:1",
														"nodeType": "YulTypedName",
														"src": "3328:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3336:6:1",
														"nodeType": "YulTypedName",
														"src": "3336:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3344:6:1",
														"nodeType": "YulTypedName",
														"src": "3344:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3352:6:1",
														"nodeType": "YulTypedName",
														"src": "3352:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3363:4:1",
														"nodeType": "YulTypedName",
														"src": "3363:4:1",
														"type": ""
													}
												],
												"src": "3187:417:1"
											},
											{
												"body": {
													"nativeSrc": "3657:174:1",
													"nodeType": "YulBlock",
													"src": "3657:174:1",
													"statements": [
														{
															"nativeSrc": "3667:16:1",
															"nodeType": "YulAssignment",
															"src": "3667:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3678:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3678:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3681:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3681:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3674:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3674:3:1"
																},
																"nativeSrc": "3674:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3674:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3667:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3667:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3714:111:1",
																"nodeType": "YulBlock",
																"src": "3714:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3735:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3735:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3742:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3742:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3747:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3747:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3738:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3738:3:1"
																					},
																					"nativeSrc": "3738:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3738:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3728:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3728:6:1"
																			},
																			"nativeSrc": "3728:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3728:31:1"
																		},
																		"nativeSrc": "3728:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3779:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3782:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3782:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3772:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:1"
																			},
																			"nativeSrc": "3772:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:15:1"
																		},
																		"nativeSrc": "3772:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3807:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3810:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3810:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3800:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3800:6:1"
																			},
																			"nativeSrc": "3800:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3800:15:1"
																		},
																		"nativeSrc": "3800:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3800:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3698:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3698:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3701:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3695:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3695:2:1"
																},
																"nativeSrc": "3695:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3695:10:1"
															},
															"nativeSrc": "3692:133:1",
															"nodeType": "YulIf",
															"src": "3692:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3609:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3640:1:1",
														"nodeType": "YulTypedName",
														"src": "3640:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3643:1:1",
														"nodeType": "YulTypedName",
														"src": "3643:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3649:3:1",
														"nodeType": "YulTypedName",
														"src": "3649:3:1",
														"type": ""
													}
												],
												"src": "3609:222:1"
											},
											{
												"body": {
													"nativeSrc": "3897:378:1",
													"nodeType": "YulBlock",
													"src": "3897:378:1",
													"statements": [
														{
															"nativeSrc": "3907:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3907:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3927:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3927:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3921:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3921:5:1"
																},
																"nativeSrc": "3921:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3921:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3911:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3911:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3949:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3949:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3954:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3954:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3942:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:1"
																},
																"nativeSrc": "3942:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3942:19:1"
															},
															"nativeSrc": "3942:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3942:19:1"
														},
														{
															"nativeSrc": "3970:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3970:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3980:4:1",
																"nodeType": "YulLiteral",
																"src": "3980:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3974:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3974:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3993:21:1",
															"nodeType": "YulAssignment",
															"src": "3993:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4004:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4004:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4009:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4009:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4000:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4000:3:1"
																},
																"nativeSrc": "4000:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4000:14:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3993:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3993:3:1"
																}
															]
														},
														{
															"nativeSrc": "4023:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4023:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4041:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4041:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4048:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4048:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4037:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:1"
																},
																"nativeSrc": "4037:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4037:16:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4027:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4027:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4062:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4062:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4071:1:1",
																"nodeType": "YulLiteral",
																"src": "4071:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4066:1:1",
																	"nodeType": "YulTypedName",
																	"src": "4066:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4130:120:1",
																"nodeType": "YulBlock",
																"src": "4130:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4151:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4151:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "4162:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4162:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4156:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4156:5:1"
																					},
																					"nativeSrc": "4156:13:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4156:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4144:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4144:6:1"
																			},
																			"nativeSrc": "4144:26:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4144:26:1"
																		},
																		"nativeSrc": "4144:26:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4144:26:1"
																	},
																	{
																		"nativeSrc": "4183:19:1",
																		"nodeType": "YulAssignment",
																		"src": "4183:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4194:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4194:3:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "4199:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4199:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4190:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4190:3:1"
																			},
																			"nativeSrc": "4190:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4190:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4183:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4183:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4215:25:1",
																		"nodeType": "YulAssignment",
																		"src": "4215:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4229:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4229:6:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "4237:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4237:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4225:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4225:3:1"
																			},
																			"nativeSrc": "4225:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4225:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4215:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4215:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4092:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4092:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4095:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4089:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4089:2:1"
																},
																"nativeSrc": "4089:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4089:13:1"
															},
															"nativeSrc": "4081:169:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4103:18:1",
																"nodeType": "YulBlock",
																"src": "4103:18:1",
																"statements": [
																	{
																		"nativeSrc": "4105:14:1",
																		"nodeType": "YulAssignment",
																		"src": "4105:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4114:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "4114:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4117:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4117:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4110:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4110:3:1"
																			},
																			"nativeSrc": "4110:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4110:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4105:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4105:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4085:3:1",
																"nodeType": "YulBlock",
																"src": "4085:3:1",
																"statements": []
															},
															"src": "4081:169:1"
														},
														{
															"nativeSrc": "4259:10:1",
															"nodeType": "YulAssignment",
															"src": "4259:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "4266:3:1",
																"nodeType": "YulIdentifier",
																"src": "4266:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4259:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4259:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "3836:439:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3874:5:1",
														"nodeType": "YulTypedName",
														"src": "3874:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3881:3:1",
														"nodeType": "YulTypedName",
														"src": "3881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3889:3:1",
														"nodeType": "YulTypedName",
														"src": "3889:3:1",
														"type": ""
													}
												],
												"src": "3836:439:1"
											},
											{
												"body": {
													"nativeSrc": "4509:236:1",
													"nodeType": "YulBlock",
													"src": "4509:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4526:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4526:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4537:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4519:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4519:6:1"
																},
																"nativeSrc": "4519:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4519:21:1"
															},
															"nativeSrc": "4519:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4519:21:1"
														},
														{
															"nativeSrc": "4549:70:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4549:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4592:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4592:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4604:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4604:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4615:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4615:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4600:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4600:3:1"
																		},
																		"nativeSrc": "4600:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "4563:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "4563:28:1"
																},
																"nativeSrc": "4563:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4563:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4553:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4553:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4639:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4650:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4650:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4635:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:1"
																		},
																		"nativeSrc": "4635:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "4659:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4659:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4667:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4667:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4655:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4655:3:1"
																		},
																		"nativeSrc": "4655:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:1"
																},
																"nativeSrc": "4628:50:1",
																"nodeType": "YulFunctionCall",
																"src": "4628:50:1"
															},
															"nativeSrc": "4628:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "4628:50:1"
														},
														{
															"nativeSrc": "4687:52:1",
															"nodeType": "YulAssignment",
															"src": "4687:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4724:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4724:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "4732:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4732:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "4695:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "4695:28:1"
																},
																"nativeSrc": "4695:44:1",
																"nodeType": "YulFunctionCall",
																"src": "4695:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4687:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4687:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4280:465:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4470:9:1",
														"nodeType": "YulTypedName",
														"src": "4470:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4481:6:1",
														"nodeType": "YulTypedName",
														"src": "4481:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4489:6:1",
														"nodeType": "YulTypedName",
														"src": "4489:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4500:4:1",
														"nodeType": "YulTypedName",
														"src": "4500:4:1",
														"type": ""
													}
												],
												"src": "4280:465:1"
											},
											{
												"body": {
													"nativeSrc": "4799:373:1",
													"nodeType": "YulBlock",
													"src": "4799:373:1",
													"statements": [
														{
															"nativeSrc": "4809:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4809:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4829:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4829:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4823:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4823:5:1"
																},
																"nativeSrc": "4823:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4823:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4813:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4813:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4851:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4851:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4856:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4856:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4844:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:1"
																},
																"nativeSrc": "4844:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4844:19:1"
															},
															"nativeSrc": "4844:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "4844:19:1"
														},
														{
															"nativeSrc": "4872:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4872:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4881:1:1",
																"nodeType": "YulLiteral",
																"src": "4881:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4876:1:1",
																	"nodeType": "YulTypedName",
																	"src": "4876:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4943:110:1",
																"nodeType": "YulBlock",
																"src": "4943:110:1",
																"statements": [
																	{
																		"nativeSrc": "4957:14:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4957:14:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4967:4:1",
																			"nodeType": "YulLiteral",
																			"src": "4967:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "4961:2:1",
																				"nodeType": "YulTypedName",
																				"src": "4961:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "4999:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4999:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5004:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5004:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4995:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4995:3:1"
																							},
																							"nativeSrc": "4995:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4995:11:1"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "5008:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "5008:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4991:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4991:3:1"
																					},
																					"nativeSrc": "4991:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4991:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "5027:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5027:5:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "5034:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "5034:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5023:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "5023:3:1"
																									},
																									"nativeSrc": "5023:13:1",
																									"nodeType": "YulFunctionCall",
																									"src": "5023:13:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "5038:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "5038:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5019:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5019:3:1"
																							},
																							"nativeSrc": "5019:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5019:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5013:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5013:5:1"
																					},
																					"nativeSrc": "5013:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5013:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4984:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4984:6:1"
																			},
																			"nativeSrc": "4984:59:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4984:59:1"
																		},
																		"nativeSrc": "4984:59:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4984:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4902:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4902:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4905:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4905:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4899:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4899:2:1"
																},
																"nativeSrc": "4899:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4899:13:1"
															},
															"nativeSrc": "4891:162:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4913:21:1",
																"nodeType": "YulBlock",
																"src": "4913:21:1",
																"statements": [
																	{
																		"nativeSrc": "4915:17:1",
																		"nodeType": "YulAssignment",
																		"src": "4915:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4924:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "4924:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4927:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4927:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4920:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4920:3:1"
																			},
																			"nativeSrc": "4920:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4920:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4915:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4915:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4895:3:1",
																"nodeType": "YulBlock",
																"src": "4895:3:1",
																"statements": []
															},
															"src": "4891:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5077:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5077:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5082:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5082:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5073:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5073:3:1"
																				},
																				"nativeSrc": "5073:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5073:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5091:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5091:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5069:3:1"
																		},
																		"nativeSrc": "5069:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5069:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5098:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5098:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5062:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5062:6:1"
																},
																"nativeSrc": "5062:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5062:38:1"
															},
															"nativeSrc": "5062:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "5062:38:1"
														},
														{
															"nativeSrc": "5109:57:1",
															"nodeType": "YulAssignment",
															"src": "5109:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5124:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5124:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5137:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "5137:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5145:2:1",
																								"nodeType": "YulLiteral",
																								"src": "5145:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5133:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5133:3:1"
																						},
																						"nativeSrc": "5133:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5133:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5154:2:1",
																								"nodeType": "YulLiteral",
																								"src": "5154:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5150:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5150:3:1"
																						},
																						"nativeSrc": "5150:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5150:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5129:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5129:3:1"
																				},
																				"nativeSrc": "5129:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5129:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5120:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5120:3:1"
																		},
																		"nativeSrc": "5120:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5120:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5161:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5161:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5116:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:1"
																},
																"nativeSrc": "5116:50:1",
																"nodeType": "YulFunctionCall",
																"src": "5116:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5109:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5109:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "4750:422:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4776:5:1",
														"nodeType": "YulTypedName",
														"src": "4776:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4783:3:1",
														"nodeType": "YulTypedName",
														"src": "4783:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4791:3:1",
														"nodeType": "YulTypedName",
														"src": "4791:3:1",
														"type": ""
													}
												],
												"src": "4750:422:1"
											},
											{
												"body": {
													"nativeSrc": "5408:329:1",
													"nodeType": "YulBlock",
													"src": "5408:329:1",
													"statements": [
														{
															"nativeSrc": "5418:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5418:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5436:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5436:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5441:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5441:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5432:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:1"
																		},
																		"nativeSrc": "5432:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5432:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5445:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5445:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5428:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:1"
																},
																"nativeSrc": "5428:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5428:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5422:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5422:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5463:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5463:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5478:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5478:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5486:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5486:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5474:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:1"
																		},
																		"nativeSrc": "5474:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5474:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5456:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:1"
																},
																"nativeSrc": "5456:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5456:34:1"
															},
															"nativeSrc": "5456:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5456:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5510:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5521:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5521:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5506:3:1"
																		},
																		"nativeSrc": "5506:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5506:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5530:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5538:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5538:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5526:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5526:3:1"
																		},
																		"nativeSrc": "5526:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5499:6:1"
																},
																"nativeSrc": "5499:43:1",
																"nodeType": "YulFunctionCall",
																"src": "5499:43:1"
															},
															"nativeSrc": "5499:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "5499:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5562:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5562:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5573:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5573:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5558:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5558:3:1"
																		},
																		"nativeSrc": "5558:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5558:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5578:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5578:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5551:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5551:6:1"
																},
																"nativeSrc": "5551:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5551:34:1"
															},
															"nativeSrc": "5551:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5551:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5605:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5605:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5616:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5616:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5601:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5601:3:1"
																		},
																		"nativeSrc": "5601:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5601:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5621:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5621:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5594:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5594:6:1"
																},
																"nativeSrc": "5594:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5594:34:1"
															},
															"nativeSrc": "5594:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5594:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5648:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5648:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5659:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5659:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5644:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:1"
																		},
																		"nativeSrc": "5644:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:19:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5665:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5637:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:1"
																},
																"nativeSrc": "5637:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5637:32:1"
															},
															"nativeSrc": "5637:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "5637:32:1"
														},
														{
															"nativeSrc": "5678:53:1",
															"nodeType": "YulAssignment",
															"src": "5678:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5703:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5715:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5715:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5726:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5726:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5711:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:1"
																		},
																		"nativeSrc": "5711:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5711:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "5686:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "5686:16:1"
																},
																"nativeSrc": "5686:45:1",
																"nodeType": "YulFunctionCall",
																"src": "5686:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5678:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5678:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5177:560:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5345:9:1",
														"nodeType": "YulTypedName",
														"src": "5345:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5356:6:1",
														"nodeType": "YulTypedName",
														"src": "5356:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5364:6:1",
														"nodeType": "YulTypedName",
														"src": "5364:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5372:6:1",
														"nodeType": "YulTypedName",
														"src": "5372:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5380:6:1",
														"nodeType": "YulTypedName",
														"src": "5380:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5388:6:1",
														"nodeType": "YulTypedName",
														"src": "5388:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5399:4:1",
														"nodeType": "YulTypedName",
														"src": "5399:4:1",
														"type": ""
													}
												],
												"src": "5177:560:1"
											},
											{
												"body": {
													"nativeSrc": "5822:210:1",
													"nodeType": "YulBlock",
													"src": "5822:210:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5868:16:1",
																"nodeType": "YulBlock",
																"src": "5868:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5877:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5877:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5880:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5880:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5870:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5870:6:1"
																			},
																			"nativeSrc": "5870:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5870:12:1"
																		},
																		"nativeSrc": "5870:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5870:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5843:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5843:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5852:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5852:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5839:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5839:3:1"
																		},
																		"nativeSrc": "5839:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5839:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5864:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5864:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5835:3:1"
																},
																"nativeSrc": "5835:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5835:32:1"
															},
															"nativeSrc": "5832:52:1",
															"nodeType": "YulIf",
															"src": "5832:52:1"
														},
														{
															"nativeSrc": "5893:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5912:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5912:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5906:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5906:5:1"
																},
																"nativeSrc": "5906:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5906:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5897:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5897:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5986:16:1",
																"nodeType": "YulBlock",
																"src": "5986:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5995:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5995:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5998:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5998:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5988:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5988:6:1"
																			},
																			"nativeSrc": "5988:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5988:12:1"
																		},
																		"nativeSrc": "5988:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5988:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5944:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5944:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5955:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5955:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5966:3:1",
																								"nodeType": "YulLiteral",
																								"src": "5966:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5971:10:1",
																								"nodeType": "YulLiteral",
																								"src": "5971:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5962:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5962:3:1"
																						},
																						"nativeSrc": "5962:20:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5962:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5951:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5951:3:1"
																				},
																				"nativeSrc": "5951:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5951:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5941:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5941:2:1"
																		},
																		"nativeSrc": "5941:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5941:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:1"
																},
																"nativeSrc": "5934:51:1",
																"nodeType": "YulFunctionCall",
																"src": "5934:51:1"
															},
															"nativeSrc": "5931:71:1",
															"nodeType": "YulIf",
															"src": "5931:71:1"
														},
														{
															"nativeSrc": "6011:15:1",
															"nodeType": "YulAssignment",
															"src": "6011:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "6021:5:1",
																"nodeType": "YulIdentifier",
																"src": "6021:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "5742:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5788:9:1",
														"nodeType": "YulTypedName",
														"src": "5788:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5799:7:1",
														"nodeType": "YulTypedName",
														"src": "5799:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5811:6:1",
														"nodeType": "YulTypedName",
														"src": "5811:6:1",
														"type": ""
													}
												],
												"src": "5742:290:1"
											},
											{
												"body": {
													"nativeSrc": "6368:495:1",
													"nodeType": "YulBlock",
													"src": "6368:495:1",
													"statements": [
														{
															"nativeSrc": "6378:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6378:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6396:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6396:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6401:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6401:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6392:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6392:3:1"
																		},
																		"nativeSrc": "6392:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6405:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6405:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6388:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6388:3:1"
																},
																"nativeSrc": "6388:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6388:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6382:2:1",
																	"nodeType": "YulTypedName",
																	"src": "6382:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6423:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6423:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6438:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6438:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6446:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6446:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6434:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6434:3:1"
																		},
																		"nativeSrc": "6434:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6434:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6416:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:1"
																},
																"nativeSrc": "6416:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6416:34:1"
															},
															"nativeSrc": "6416:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6416:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6470:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6481:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6481:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6466:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:1"
																		},
																		"nativeSrc": "6466:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6466:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6490:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6490:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6498:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6498:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6486:3:1"
																		},
																		"nativeSrc": "6486:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6486:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6459:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:1"
																},
																"nativeSrc": "6459:43:1",
																"nodeType": "YulFunctionCall",
																"src": "6459:43:1"
															},
															"nativeSrc": "6459:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "6459:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6522:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6522:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6533:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6533:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6518:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:1"
																		},
																		"nativeSrc": "6518:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6518:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6538:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6538:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6511:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:1"
																},
																"nativeSrc": "6511:31:1",
																"nodeType": "YulFunctionCall",
																"src": "6511:31:1"
															},
															"nativeSrc": "6511:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "6511:31:1"
														},
														{
															"nativeSrc": "6551:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6551:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6594:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6594:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6606:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6606:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6617:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6617:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6602:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6602:3:1"
																		},
																		"nativeSrc": "6602:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6602:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "6565:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "6565:28:1"
																},
																"nativeSrc": "6565:57:1",
																"nodeType": "YulFunctionCall",
																"src": "6565:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "6555:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6555:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6642:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6653:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6638:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:1"
																		},
																		"nativeSrc": "6638:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "6662:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6662:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6670:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6670:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6658:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6658:3:1"
																		},
																		"nativeSrc": "6658:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6658:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6631:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:1"
																},
																"nativeSrc": "6631:50:1",
																"nodeType": "YulFunctionCall",
																"src": "6631:50:1"
															},
															"nativeSrc": "6631:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "6631:50:1"
														},
														{
															"nativeSrc": "6690:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6690:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6733:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6733:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "6704:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "6704:28:1"
																},
																"nativeSrc": "6704:44:1",
																"nodeType": "YulFunctionCall",
																"src": "6704:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "6694:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6694:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6768:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6768:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6779:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6779:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6764:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6764:3:1"
																		},
																		"nativeSrc": "6764:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6764:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "6789:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6789:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6797:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6797:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6785:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:1"
																		},
																		"nativeSrc": "6785:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6757:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6757:6:1"
																},
																"nativeSrc": "6757:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6757:51:1"
															},
															"nativeSrc": "6757:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6757:51:1"
														},
														{
															"nativeSrc": "6817:40:1",
															"nodeType": "YulAssignment",
															"src": "6817:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6842:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6842:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nativeSrc": "6850:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6850:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "6825:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "6825:16:1"
																},
																"nativeSrc": "6825:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6825:32:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6037:826:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6305:9:1",
														"nodeType": "YulTypedName",
														"src": "6305:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6316:6:1",
														"nodeType": "YulTypedName",
														"src": "6316:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6324:6:1",
														"nodeType": "YulTypedName",
														"src": "6324:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6332:6:1",
														"nodeType": "YulTypedName",
														"src": "6332:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6340:6:1",
														"nodeType": "YulTypedName",
														"src": "6340:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6348:6:1",
														"nodeType": "YulTypedName",
														"src": "6348:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6359:4:1",
														"nodeType": "YulTypedName",
														"src": "6359:4:1",
														"type": ""
													}
												],
												"src": "6037:826:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040805180820190915260078152666d6f636b55524960c81b60208201526200003b81620000b1565b5062000073336001678ac7230489e8000060405180604001604052806002815260200161060f60f31b815250620000c360201b60201c565b620000ab6065600167016345785d8a000060405180604001604052806002815260200161060f60f31b815250620000c360201b60201c565b62000911565b6002620000bf828262000687565b5050565b6001600160a01b038416620000f357604051632bfa23e760e11b8152600060048201526024015b60405180910390fd5b604080516001808252602082018690528183019081526060820185905260808201909252906200012860008784848762000130565b505050505050565b6200013e8585858562000193565b6001600160a01b038416156200018c57825133906001036200017c576020848101519084015162000174838989858589620003b6565b505062000128565b62000128818787878787620004f0565b5050505050565b8051825114620001c45781518151604051635b05999160e01b815260048101929092526024820152604401620000ea565b3360005b8351811015620002d2576020818102858101820151908501909101516001600160a01b038816156200027f576000828152602081815260408083206001600160a01b038c1684529091529020548181101562000258576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401620000ea565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615620002c7576000828152602081815260408083206001600160a01b038b16845290915281208054839290620002c190849062000753565b90915550505b5050600101620001c8565b508251600103620003565760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405162000346929190918252602082015260400190565b60405180910390a450506200018c565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051620003a7929190620007b9565b60405180910390a45050505050565b6001600160a01b0384163b15620001285760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620003fd908990899088908890889060040162000833565b6020604051808303816000875af19250505080156200043b575060408051601f3d908101601f1916820190925262000438918101906200087a565b60015b620004a9573d8080156200046c576040519150601f19603f3d011682016040523d82523d6000602084013e62000471565b606091505b508051600003620004a157604051632bfa23e760e11b81526001600160a01b0386166004820152602401620000ea565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14620004e757604051632bfa23e760e11b81526001600160a01b0386166004820152602401620000ea565b50505050505050565b6001600160a01b0384163b15620001285760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190620005379089908990889088908890600401620008ad565b6020604051808303816000875af192505050801562000575575060408051601f3d908101601f1916820190925262000572918101906200087a565b60015b620005a6573d8080156200046c576040519150601f19603f3d011682016040523d82523d6000602084013e62000471565b6001600160e01b0319811663bc197c8160e01b14620004e757604051632bfa23e760e11b81526001600160a01b0386166004820152602401620000ea565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200060f57607f821691505b6020821081036200063057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000682576000816000526020600020601f850160051c81016020861015620006615750805b601f850160051c820191505b8181101562000128578281556001016200066d565b505050565b81516001600160401b03811115620006a357620006a3620005e4565b620006bb81620006b48454620005fa565b8462000636565b602080601f831160018114620006f35760008415620006da5750858301515b600019600386901b1c1916600185901b17855562000128565b600085815260208120601f198616915b82811015620007245788860151825594840194600190910190840162000703565b5085821015620007435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200077557634e487b7160e01b600052601160045260246000fd5b92915050565b60008151808452602080850194506020840160005b83811015620007ae5781518752958201959082019060010162000790565b509495945050505050565b604081526000620007ce60408301856200077b565b8281036020840152620007e281856200077b565b95945050505050565b6000815180845260005b818110156200081357602081850181015186830182015201620007f5565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906200086f90830184620007eb565b979650505050505050565b6000602082840312156200088d57600080fd5b81516001600160e01b031981168114620008a657600080fd5b9392505050565b6001600160a01b0386811682528516602082015260a060408201819052600090620008db908301866200077b565b8281036060840152620008ef81866200077b565b90508281036080840152620009058185620007eb565b98975050505050505050565b61117d80620009216000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d6146101155780634e1273f414610128578063a22cb46514610148578063e985e9c51461015b578063f242432a1461016e57600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100e0578063156e29f614610100575b600080fd5b6100aa6100a5366004610b05565b610181565b6040519081526020015b60405180910390f35b6100d06100cb366004610b48565b6101a9565b60405190151581526020016100b4565b6100f36100ee366004610b6c565b6101f9565b6040516100b49190610bcb565b61011361010e366004610bde565b61028d565b005b610113610123366004610d5b565b6102b8565b61013b610136366004610e05565b610324565b6040516100b49190610f01565b610113610156366004610f14565b6103f1565b6100d0610169366004610f50565b610400565b61011361017c366004610f83565b61042e565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806101da57506001600160e01b031982166303a24d0760e21b145b806101a357506301ffc9a760e01b6001600160e01b03198316146101a3565b60606002805461020890610fe8565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610fe8565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b50505050509050919050565b6102b383838360405180604001604052806002815260200161060f60f31b81525061048d565b505050565b336001600160a01b03861681148015906102d957506102d78682610400565b155b1561030f5760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b61031c86868686866104ea565b505050505050565b606081518351146103555781518351604051635b05999160e01b815260048101929092526024820152604401610306565b6000835167ffffffffffffffff81111561037157610371610c11565b60405190808252806020026020018201604052801561039a578160200160208202803683370190505b50905060005b84518110156103e9576020808202860101516103c490602080840287010151610181565b8282815181106103d6576103d6611022565b60209081029190910101526001016103a0565b509392505050565b6103fc338383610551565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b038616811480159061044f575061044d8682610400565b155b156104805760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610306565b61031c86868686866105e7565b6001600160a01b0384166104b757604051632bfa23e760e11b815260006004820152602401610306565b6040805160018082526020820186905281830190815260608201859052608082019092529061031c600087848487610675565b6001600160a01b03841661051457604051632bfa23e760e11b815260006004820152602401610306565b6001600160a01b03851661053d57604051626a0d4560e21b815260006004820152602401610306565b61054a8585858585610675565b5050505050565b6001600160a01b03821661057a5760405162ced3e160e81b815260006004820152602401610306565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661061157604051632bfa23e760e11b815260006004820152602401610306565b6001600160a01b03851661063a57604051626a0d4560e21b815260006004820152602401610306565b6040805160018082526020820186905281830190815260608201859052608082019092529061066c8787848487610675565b50505050505050565b610681858585856106c8565b6001600160a01b0384161561054a57825133906001036106ba57602084810151908401516106b38389898585896108dc565b505061031c565b61031c818787878787610a00565b80518251146106f75781518151604051635b05999160e01b815260048101929092526024820152604401610306565b3360005b83518110156107fd576020818102858101820151908501909101516001600160a01b038816156107ae576000828152602081815260408083206001600160a01b038c16845290915290205481811015610787576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610306565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156107f3576000828152602081815260408083206001600160a01b038b168452909152812080548392906107ed908490611038565b90915550505b50506001016106fb565b50825160010361087e5760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161086f929190918252602082015260400190565b60405180910390a4505061054a565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516108cd929190611059565b60405180910390a45050505050565b6001600160a01b0384163b1561031c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906109209089908990889088908890600401611087565b6020604051808303816000875af192505050801561095b575060408051601f3d908101601f19168201909252610958918101906110cc565b60015b6109c4573d808015610989576040519150601f19603f3d011682016040523d82523d6000602084013e61098e565b606091505b5080516000036109bc57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610306565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461066c57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610306565b6001600160a01b0384163b1561031c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a4490899089908890889088906004016110e9565b6020604051808303816000875af1925050508015610a7f575060408051601f3d908101601f19168201909252610a7c918101906110cc565b60015b610aad573d808015610989576040519150601f19603f3d011682016040523d82523d6000602084013e61098e565b6001600160e01b0319811663bc197c8160e01b1461066c57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610306565b80356001600160a01b0381168114610b0057600080fd5b919050565b60008060408385031215610b1857600080fd5b610b2183610ae9565b946020939093013593505050565b6001600160e01b031981168114610b4557600080fd5b50565b600060208284031215610b5a57600080fd5b8135610b6581610b2f565b9392505050565b600060208284031215610b7e57600080fd5b5035919050565b6000815180845260005b81811015610bab57602081850181015186830182015201610b8f565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610b656020830184610b85565b600080600060608486031215610bf357600080fd5b610bfc84610ae9565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c5057610c50610c11565b604052919050565b600067ffffffffffffffff821115610c7257610c72610c11565b5060051b60200190565b600082601f830112610c8d57600080fd5b81356020610ca2610c9d83610c58565b610c27565b8083825260208201915060208460051b870101935086841115610cc457600080fd5b602086015b84811015610ce05780358352918301918301610cc9565b509695505050505050565b600082601f830112610cfc57600080fd5b813567ffffffffffffffff811115610d1657610d16610c11565b610d29601f8201601f1916602001610c27565b818152846020838601011115610d3e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d7357600080fd5b610d7c86610ae9565b9450610d8a60208701610ae9565b9350604086013567ffffffffffffffff80821115610da757600080fd5b610db389838a01610c7c565b94506060880135915080821115610dc957600080fd5b610dd589838a01610c7c565b93506080880135915080821115610deb57600080fd5b50610df888828901610ceb565b9150509295509295909350565b60008060408385031215610e1857600080fd5b823567ffffffffffffffff80821115610e3057600080fd5b818501915085601f830112610e4457600080fd5b81356020610e54610c9d83610c58565b82815260059290921b84018101918181019089841115610e7357600080fd5b948201945b83861015610e9857610e8986610ae9565b82529482019490820190610e78565b96505086013592505080821115610eae57600080fd5b50610ebb85828601610c7c565b9150509250929050565b60008151808452602080850194506020840160005b83811015610ef657815187529582019590820190600101610eda565b509495945050505050565b602081526000610b656020830184610ec5565b60008060408385031215610f2757600080fd5b610f3083610ae9565b915060208301358015158114610f4557600080fd5b809150509250929050565b60008060408385031215610f6357600080fd5b610f6c83610ae9565b9150610f7a60208401610ae9565b90509250929050565b600080600080600060a08688031215610f9b57600080fd5b610fa486610ae9565b9450610fb260208701610ae9565b93506040860135925060608601359150608086013567ffffffffffffffff811115610fdc57600080fd5b610df888828901610ceb565b600181811c90821680610ffc57607f821691505b60208210810361101c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156101a357634e487b7160e01b600052601160045260246000fd5b60408152600061106c6040830185610ec5565b828103602084015261107e8185610ec5565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110c190830184610b85565b979650505050505050565b6000602082840312156110de57600080fd5b8151610b6581610b2f565b6001600160a01b0386811682528516602082015260a06040820181905260009061111590830186610ec5565b82810360608401526111278186610ec5565b9050828103608084015261113b8185610b85565b9897505050505050505056fea26469706673582212208ac2e9740ba79611762983bff00f7a7c2c6fbb661512908a54df62f39b37d73e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x6D6F636B555249 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x3B DUP2 PUSH3 0xB1 JUMP JUMPDEST POP PUSH3 0x73 CALLER PUSH1 0x1 PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x60F PUSH1 0xF3 SHL DUP2 MSTORE POP PUSH3 0xC3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAB PUSH1 0x65 PUSH1 0x1 PUSH8 0x16345785D8A0000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x60F PUSH1 0xF3 SHL DUP2 MSTORE POP PUSH3 0xC3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x911 JUMP JUMPDEST PUSH1 0x2 PUSH3 0xBF DUP3 DUP3 PUSH3 0x687 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH3 0x128 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH3 0x130 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x13E DUP6 DUP6 DUP6 DUP6 PUSH3 0x193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH3 0x18C JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH3 0x17C JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH3 0x174 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH3 0x3B6 JUMP JUMPDEST POP POP PUSH3 0x128 JUMP JUMPDEST PUSH3 0x128 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0x4F0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH3 0x1C4 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH3 0xEA JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x2D2 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH3 0x27F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x258 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH3 0xEA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH3 0x2C7 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x2C1 SWAP1 DUP5 SWAP1 PUSH3 0x753 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH3 0x1C8 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH3 0x356 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x346 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH3 0x18C JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x3A7 SWAP3 SWAP2 SWAP1 PUSH3 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH3 0x128 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH3 0x3FD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x833 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x43B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x438 SWAP2 DUP2 ADD SWAP1 PUSH3 0x87A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x4A9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH3 0x46C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x471 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH3 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xEA JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH3 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xEA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH3 0x128 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH3 0x537 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x8AD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x575 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x572 SWAP2 DUP2 ADD SWAP1 PUSH3 0x87A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x5A6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH3 0x46C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH3 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xEA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x60F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x630 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x682 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x661 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x128 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x66D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x6A3 JUMPI PUSH3 0x6A3 PUSH3 0x5E4 JUMP JUMPDEST PUSH3 0x6BB DUP2 PUSH3 0x6B4 DUP5 SLOAD PUSH3 0x5FA JUMP JUMPDEST DUP5 PUSH3 0x636 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6DA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x128 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x724 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x703 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x743 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x775 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x7AE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x790 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH3 0x7CE PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x77B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x7E2 DUP2 DUP6 PUSH3 0x77B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x813 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x7F5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x86F SWAP1 DUP4 ADD DUP5 PUSH3 0x7EB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x8DB SWAP1 DUP4 ADD DUP7 PUSH3 0x77B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x8EF DUP2 DUP7 PUSH3 0x77B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0x905 DUP2 DUP6 PUSH3 0x7EB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x117D DUP1 PUSH3 0x921 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x1DA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1A3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x208 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x234 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x281 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x256 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x281 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x264 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x60F PUSH1 0xF3 SHL DUP2 MSTORE POP PUSH2 0x48D JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2D9 JUMPI POP PUSH2 0x2D7 DUP7 DUP3 PUSH2 0x400 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31C DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4EA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x355 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371 JUMPI PUSH2 0x371 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x3C4 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x181 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D6 JUMPI PUSH2 0x3D6 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3FC CALLER DUP4 DUP4 PUSH2 0x551 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x44F JUMPI POP PUSH2 0x44D DUP7 DUP3 PUSH2 0x400 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x306 JUMP JUMPDEST PUSH2 0x31C DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x31C PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH2 0x54A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x675 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x66C DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x675 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x681 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x54A JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x6BA JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x6B3 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x8DC JUMP JUMPDEST POP POP PUSH2 0x31C JUMP JUMPDEST PUSH2 0x31C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA00 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x6F7 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x306 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7ED SWAP1 DUP5 SWAP1 PUSH2 0x1038 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x6FB JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x87E JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x86F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x54A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8CD SWAP3 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x920 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x95B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x958 SWAP2 DUP2 ADD SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9C4 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x98E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA44 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA7F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA7C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAAD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x98E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB21 DUP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB65 DUP2 PUSH2 0xB2F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB8F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBFC DUP5 PUSH2 0xAE9 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC50 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC72 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA2 PUSH2 0xC9D DUP4 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCE0 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCC9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD16 JUMPI PUSH2 0xD16 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xD29 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xC27 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP7 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 POP PUSH2 0xD8A PUSH1 0x20 DUP8 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB3 DUP10 DUP4 DUP11 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD5 DUP10 DUP4 DUP11 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF8 DUP9 DUP3 DUP10 ADD PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE54 PUSH2 0xC9D DUP4 PUSH2 0xC58 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xE98 JUMPI PUSH2 0xE89 DUP7 PUSH2 0xAE9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE78 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEBB DUP6 DUP3 DUP7 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEDA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6C DUP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF7A PUSH1 0x20 DUP5 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA4 DUP7 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 POP PUSH2 0xFB2 PUSH1 0x20 DUP8 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF8 DUP9 DUP3 DUP10 ADD PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x101C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x106C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEC5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x107E DUP2 DUP6 PUSH2 0xEC5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10C1 SWAP1 DUP4 ADD DUP5 PUSH2 0xB85 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB65 DUP2 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1115 SWAP1 DUP4 ADD DUP7 PUSH2 0xEC5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1127 DUP2 DUP7 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x113B DUP2 DUP6 PUSH2 0xB85 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xC2 0xE9 PUSH21 0xBA79611762983BFF00F7A7C2C6FBB661512908A54 0xDF PUSH3 0xF39B37 0xD7 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "72476:285:0:-:0;;;72530:116;;;;;;;;;-1:-1:-1;56738:62:0;;;;;;;;;;;;-1:-1:-1;;;56738:62:0;;;;56780:13;56738:62;56780:7;:13::i;:::-;56738:62;72554:36;72560:10;72572:1;72575:8;72554:36;;;;;;;;;;;;;-1:-1:-1;;;72554:36:0;;;:5;;;:36;;:::i;:::-;72600:39;72614:3;72620:1;72623:9;72600:39;;;;;;;;;;;;;-1:-1:-1;;;72600:39:0;;;:5;;;:39;;:::i;:::-;72476:285;;65769:86;65835:4;:13;65842:6;65835:4;:13;:::i;:::-;;65769:86;:::o;66233:346::-;-1:-1:-1;;;;;66329:16:0;;66325:88;;66368:34;;-1:-1:-1;;;66368:34:0;;66399:1;66368:34;;;2872:51:1;2845:18;;66368:34:0;;;;;;;;66325:88;71861:4;71855:11;;71931:1;71916:17;;;72062:4;72050:17;;72043:35;;;72179:17;;;72209;;;71675:23;72246:17;;72239:35;;;72382:17;;;72369:31;;;71855:11;66511:61;-1:-1:-1;66550:2:0;71855:11;72179:17;66567:4;66511:26;:61::i;:::-;66315:264;;66233:346;;;;:::o;62491:690::-;62692:30;62700:4;62706:2;62710:3;62715:6;62692:7;:30::i;:::-;-1:-1:-1;;;;;62736:16:0;;;62732:443;;62817:10;;34750;;62831:1;62817:15;62813:352;;33555:4;33526:35;;;33520:42;33526:35;;;33520:42;62970:67;63001:8;63011:4;63017:2;33520:42;;63032:4;62970:30;:67::i;:::-;62834:218;;62813:352;;;63076:74;63112:8;63122:4;63128:2;63132:3;63137:6;63145:4;63076:35;:74::i;62732:443::-;62491:690;;;;;:::o;60631:1281::-;60766:6;:13;60752:3;:10;:27;60748:117;;60828:10;;60840:13;;60802:52;;-1:-1:-1;;;60802:52:0;;;;;3108:25:1;;;;3149:18;;;3142:34;3081:18;;60802:52:0;2934:248:1;60748:117:0;34750:10;60875:16;60917:691;60941:3;:10;60937:1;:14;60917:691;;;33555:4;33546:14;;;33526:35;;;;;33520:42;33526:35;;;;;;33520:42;-1:-1:-1;;;;;61087:18:0;;;61083:420;;61125:19;61147:13;;;;;;;;;;;-1:-1:-1;;;;;61147:19:0;;;;;;;;;;61188;;;61184:129;;;61238:56;;-1:-1:-1;;;61238:56:0;;-1:-1:-1;;;;;3436:32:1;;61238:56:0;;;3418:51:1;3485:18;;;3478:34;;;3528:18;;;3521:34;;;3571:18;;;3564:34;;;3390:19;;61238:56:0;3187:417:1;61184:129:0;61429:9;:13;;;;;;;;;;;-1:-1:-1;;;;;61429:19:0;;;;;;;;;61451;;;;61429:41;;61083:420;-1:-1:-1;;;;;61521:16:0;;;61517:81;;61557:9;:13;;;;;;;;;;;-1:-1:-1;;;;;61557:17:0;;;;;;;;;:26;;61578:5;;61557:9;:26;;61578:5;;61557:26;:::i;:::-;;;;-1:-1:-1;;61517:81:0;-1:-1:-1;;60953:3:0;;60917:691;;;;61622:3;:10;61636:1;61622:15;61618:288;;33555:4;33526:35;;33520:42;61653:10;;33555:4;33526:35;;33520:42;61653:38;;-1:-1:-1;61799:2:0;-1:-1:-1;;;;;61768:45:0;61793:4;-1:-1:-1;;;;;61768:45:0;61783:8;-1:-1:-1;;;;;61768:45:0;;61803:2;61807:5;61768:45;;;;;;3108:25:1;;;3164:2;3149:18;;3142:34;3096:2;3081:18;;2934:248;61768:45:0;;;;;;;;61639:185;;61618:288;;;61879:2;-1:-1:-1;;;;;61849:46:0;61873:4;-1:-1:-1;;;;;61849:46:0;61863:8;-1:-1:-1;;;;;61849:46:0;;61883:3;61888:6;61849:46;;;;;;;:::i;:::-;;;;;;;;60738:1174;60631:1281;;;;:::o;69248:974::-;-1:-1:-1;;;;;69454:14:0;;;:18;69450:766;;69492:71;;-1:-1:-1;;;69492:71:0;;-1:-1:-1;;;;;69492:38:0;;;;;:71;;69531:8;;69541:4;;69547:2;;69551:5;;69558:4;;69492:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69492:71:0;;;;;;;;-1:-1:-1;;69492:71:0;;;;;;;;;;;;:::i;:::-;;;69488:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;69847:6;:13;69864:1;69847:18;69843:349;;69951:26;;-1:-1:-1;;;69951:26:0;;-1:-1:-1;;;;;2890:32:1;;69951:26:0;;;2872:51:1;2845:18;;69951:26:0;2726:203:1;69843:349:0;70144:6;70138:13;70129:6;70125:2;70121:15;70114:38;69488:718;-1:-1:-1;;;;;;69612:55:0;;-1:-1:-1;;;69612:55:0;69608:174;;69737:26;;-1:-1:-1;;;69737:26:0;;-1:-1:-1;;;;;2890:32:1;;69737:26:0;;;2872:51:1;2845:18;;69737:26:0;2726:203:1;69608:174:0;69564:232;69248:974;;;;;;:::o;70410:1041::-;-1:-1:-1;;;;;70641:14:0;;;:18;70637:808;;70679:78;;-1:-1:-1;;;70679:78:0;;-1:-1:-1;;;;;70679:43:0;;;;;:78;;70723:8;;70733:4;;70739:3;;70744:6;;70752:4;;70679:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;70679:78:0;;;;;;;;-1:-1:-1;;70679:78:0;;;;;;;;;;;;:::i;:::-;;;70675:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;70836:60:0;;-1:-1:-1;;;70836:60:0;70832:179;;70966:26;;-1:-1:-1;;;70966:26:0;;-1:-1:-1;;;;;2890:32:1;;70966:26:0;;;2872:51:1;2845:18;;70966:26:0;2726:203:1;14:127;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:1;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:1;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:1;;;2571:26;2522:89;-1:-1:-1;;1333:1:1;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:1;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:1;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:1;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:1:o;3609:222::-;3674:9;;;3695:10;;;3692:133;;;3747:10;3742:3;3738:20;3735:1;3728:31;3782:4;3779:1;3772:15;3810:4;3807:1;3800:15;3692:133;3609:222;;;;:::o;3836:439::-;3889:3;3927:5;3921:12;3954:6;3949:3;3942:19;3980:4;4009;4004:3;4000:14;3993:21;;4048:4;4041:5;4037:16;4071:1;4081:169;4095:6;4092:1;4089:13;4081:169;;;4156:13;;4144:26;;4190:12;;;;4225:15;;;;4117:1;4110:9;4081:169;;;-1:-1:-1;4266:3:1;;3836:439;-1:-1:-1;;;;;3836:439:1:o;4280:465::-;4537:2;4526:9;4519:21;4500:4;4563:56;4615:2;4604:9;4600:18;4592:6;4563:56;:::i;:::-;4667:9;4659:6;4655:22;4650:2;4639:9;4635:18;4628:50;4695:44;4732:6;4724;4695:44;:::i;:::-;4687:52;4280:465;-1:-1:-1;;;;;4280:465:1:o;4750:422::-;4791:3;4829:5;4823:12;4856:6;4851:3;4844:19;4881:1;4891:162;4905:6;4902:1;4899:13;4891:162;;;4967:4;5023:13;;;5019:22;;5013:29;4995:11;;;4991:20;;4984:59;4920:12;4891:162;;;4895:3;5098:1;5091:4;5082:6;5077:3;5073:16;5069:27;5062:38;5161:4;5154:2;5150:7;5145:2;5137:6;5133:15;5129:29;5124:3;5120:39;5116:50;5109:57;;;4750:422;;;;:::o;5177:560::-;-1:-1:-1;;;;;5474:15:1;;;5456:34;;5526:15;;5521:2;5506:18;;5499:43;5573:2;5558:18;;5551:34;;;5616:2;5601:18;;5594:34;;;5436:3;5659;5644:19;;5637:32;;;5399:4;;5686:45;;5711:19;;5703:6;5686:45;:::i;:::-;5678:53;5177:560;-1:-1:-1;;;;;;;5177:560:1:o;5742:290::-;5811:6;5864:2;5852:9;5843:7;5839:23;5835:32;5832:52;;;5880:1;5877;5870:12;5832:52;5906:16;;-1:-1:-1;;;;;;5951:32:1;;5941:43;;5931:71;;5998:1;5995;5988:12;5931:71;6021:5;5742:290;-1:-1:-1;;;5742:290:1:o;6037:826::-;-1:-1:-1;;;;;6434:15:1;;;6416:34;;6486:15;;6481:2;6466:18;;6459:43;6396:3;6533:2;6518:18;;6511:31;;;6359:4;;6565:57;;6602:19;;6594:6;6565:57;:::i;:::-;6670:9;6662:6;6658:22;6653:2;6642:9;6638:18;6631:50;6704:44;6741:6;6733;6704:44;:::i;:::-;6690:58;;6797:9;6789:6;6785:22;6779:3;6768:9;6764:19;6757:51;6825:32;6850:6;6842;6825:32;:::i;:::-;6817:40;6037:826;-1:-1:-1;;;;;;;;6037:826:1:o;:::-;72476:285:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_3349": {
									"entryPoint": null,
									"id": 3349,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_3333": {
									"entryPoint": 2560,
									"id": 3333,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_3263": {
									"entryPoint": 2268,
									"id": 3263,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_3025": {
									"entryPoint": 1165,
									"id": 3025,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1587": {
									"entryPoint": null,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_2962": {
									"entryPoint": 1258,
									"id": 2962,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_2907": {
									"entryPoint": 1511,
									"id": 2907,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_3195": {
									"entryPoint": 1361,
									"id": 3195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_2841": {
									"entryPoint": 1653,
									"id": 2841,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_2765": {
									"entryPoint": 1736,
									"id": 2765,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_2489": {
									"entryPoint": 804,
									"id": 2489,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_2419": {
									"entryPoint": 385,
									"id": 2419,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_2522": {
									"entryPoint": 1024,
									"id": 2522,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_3393": {
									"entryPoint": 653,
									"id": 3393,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_2612": {
									"entryPoint": 696,
									"id": 2612,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_2566": {
									"entryPoint": 1070,
									"id": 2566,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_2505": {
									"entryPoint": 1009,
									"id": 2505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2142": {
									"entryPoint": null,
									"id": 2142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2391": {
									"entryPoint": 425,
									"id": 2391,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1562": {
									"entryPoint": null,
									"id": 1562,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1575": {
									"entryPoint": null,
									"id": 1575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_2402": {
									"entryPoint": 505,
									"id": 2402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12276:1",
										"nodeType": "YulBlock",
										"src": "0:12276:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:1",
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nativeSrc": "73:29:1",
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nativeSrc": "82:20:1",
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:1",
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:1",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:1",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nativeSrc": "167:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nativeSrc": "167:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:1",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:1",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nativeSrc": "146:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:1",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nativeSrc": "142:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nativeSrc": "131:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nativeSrc": "121:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nativeSrc": "114:50:1",
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nativeSrc": "111:70:1",
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:1",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:1",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nativeSrc": "279:167:1",
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:1",
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:1",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:1",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nativeSrc": "327:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nativeSrc": "327:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nativeSrc": "296:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nativeSrc": "292:32:1",
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nativeSrc": "289:52:1",
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nativeSrc": "350:39:1",
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nativeSrc": "360:29:1",
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nativeSrc": "398:42:1",
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "425:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "436:2:1",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "421:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nativeSrc": "421:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "408:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nativeSrc": "408:32:1",
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "192:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:1",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:1",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:1",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nativeSrc": "552:76:1",
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nativeSrc": "562:26:1",
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "574:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "570:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nativeSrc": "570:18:1",
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "562:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "604:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "615:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:25:1",
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nativeSrc": "597:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "451:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "521:9:1",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "532:6:1",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "543:4:1",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nativeSrc": "677:87:1",
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "742:16:1",
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "751:1:1",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "754:1:1",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "744:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nativeSrc": "744:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nativeSrc": "744:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "700:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "711:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "722:3:1",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "727:10:1",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "718:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nativeSrc": "718:20:1",
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "707:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nativeSrc": "707:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "697:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nativeSrc": "697:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "690:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nativeSrc": "690:51:1",
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nativeSrc": "687:71:1",
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "633:131:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "666:5:1",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nativeSrc": "838:176:1",
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "884:16:1",
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "893:1:1",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "896:1:1",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "886:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nativeSrc": "886:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nativeSrc": "886:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "859:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "868:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "855:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nativeSrc": "855:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "880:2:1",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "851:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nativeSrc": "851:32:1",
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nativeSrc": "848:52:1",
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nativeSrc": "909:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "935:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "922:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nativeSrc": "922:23:1",
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "913:5:1",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "978:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "954:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nativeSrc": "954:30:1",
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nativeSrc": "954:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nativeSrc": "993:15:1",
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1003:5:1",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "993:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "769:245:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "804:9:1",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "815:7:1",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "827:6:1",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nativeSrc": "1114:92:1",
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nativeSrc": "1124:26:1",
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1136:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1147:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1132:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nativeSrc": "1132:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1124:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1166:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1191:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1184:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nativeSrc": "1184:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1177:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nativeSrc": "1177:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nativeSrc": "1159:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nativeSrc": "1159:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1019:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1083:9:1",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1094:6:1",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1105:4:1",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nativeSrc": "1281:110:1",
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1327:16:1",
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1336:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1339:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1329:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nativeSrc": "1329:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nativeSrc": "1329:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1302:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1311:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1298:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nativeSrc": "1298:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1323:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1294:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nativeSrc": "1294:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nativeSrc": "1291:52:1",
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nativeSrc": "1352:33:1",
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1375:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1362:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nativeSrc": "1362:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1211:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1247:9:1",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1258:7:1",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1270:6:1",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nativeSrc": "1446:373:1",
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nativeSrc": "1456:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1476:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1470:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nativeSrc": "1470:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1460:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1498:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1503:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1491:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nativeSrc": "1491:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nativeSrc": "1491:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nativeSrc": "1519:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1528:1:1",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1523:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1590:110:1",
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nativeSrc": "1604:14:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1614:4:1",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1608:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "1646:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1651:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1642:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nativeSrc": "1642:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "1655:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1638:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nativeSrc": "1638:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1674:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "1681:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "1670:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nativeSrc": "1670:13:1",
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "1685:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1666:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nativeSrc": "1666:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1660:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nativeSrc": "1660:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1631:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nativeSrc": "1631:59:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nativeSrc": "1631:59:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1549:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1552:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1546:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nativeSrc": "1546:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nativeSrc": "1538:162:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1560:21:1",
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nativeSrc": "1562:17:1",
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1571:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1574:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1567:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nativeSrc": "1567:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1562:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1542:3:1",
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1724:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1729:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1720:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nativeSrc": "1720:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1738:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1716:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nativeSrc": "1716:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1745:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1709:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nativeSrc": "1709:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nativeSrc": "1709:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nativeSrc": "1756:57:1",
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1771:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1784:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1792:2:1",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1780:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nativeSrc": "1780:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1801:2:1",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1797:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nativeSrc": "1797:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1776:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nativeSrc": "1776:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nativeSrc": "1767:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1808:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1763:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nativeSrc": "1763:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "1396:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1423:5:1",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1430:3:1",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nativeSrc": "1945:99:1",
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1962:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1973:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1955:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nativeSrc": "1955:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nativeSrc": "1955:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nativeSrc": "1985:53:1",
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2011:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2023:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2034:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2019:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nativeSrc": "2019:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1993:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nativeSrc": "1993:45:1",
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1985:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1824:220:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1914:9:1",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1925:6:1",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1936:4:1",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nativeSrc": "2153:218:1",
													"nodeType": "YulBlock",
													"src": "2153:218:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2199:16:1",
																"nodeType": "YulBlock",
																"src": "2199:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2201:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:1"
																			},
																			"nativeSrc": "2201:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:12:1"
																		},
																		"nativeSrc": "2201:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2174:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2183:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2170:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:1"
																		},
																		"nativeSrc": "2170:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2195:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2166:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:1"
																},
																"nativeSrc": "2166:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2166:32:1"
															},
															"nativeSrc": "2163:52:1",
															"nodeType": "YulIf",
															"src": "2163:52:1"
														},
														{
															"nativeSrc": "2224:39:1",
															"nodeType": "YulAssignment",
															"src": "2224:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2253:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2253:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2234:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2234:18:1"
																},
																"nativeSrc": "2234:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2234:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2224:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:1"
																}
															]
														},
														{
															"nativeSrc": "2272:42:1",
															"nodeType": "YulAssignment",
															"src": "2272:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2299:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2299:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2310:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2310:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2295:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2295:3:1"
																		},
																		"nativeSrc": "2295:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2295:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2282:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2282:12:1"
																},
																"nativeSrc": "2282:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2282:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:1"
																}
															]
														},
														{
															"nativeSrc": "2323:42:1",
															"nodeType": "YulAssignment",
															"src": "2323:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2350:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2350:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2361:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2361:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2346:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2346:3:1"
																		},
																		"nativeSrc": "2346:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2346:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2333:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2333:12:1"
																},
																"nativeSrc": "2333:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2333:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2323:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "2049:322:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2103:9:1",
														"nodeType": "YulTypedName",
														"src": "2103:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2114:7:1",
														"nodeType": "YulTypedName",
														"src": "2114:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2126:6:1",
														"nodeType": "YulTypedName",
														"src": "2126:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2134:6:1",
														"nodeType": "YulTypedName",
														"src": "2134:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2142:6:1",
														"nodeType": "YulTypedName",
														"src": "2142:6:1",
														"type": ""
													}
												],
												"src": "2049:322:1"
											},
											{
												"body": {
													"nativeSrc": "2408:95:1",
													"nodeType": "YulBlock",
													"src": "2408:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2425:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2432:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2432:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2437:10:1",
																				"nodeType": "YulLiteral",
																				"src": "2437:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2428:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2428:3:1"
																		},
																		"nativeSrc": "2428:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2428:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2418:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:1"
																},
																"nativeSrc": "2418:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:31:1"
															},
															"nativeSrc": "2418:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2465:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2465:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2468:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2468:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:1"
																},
																"nativeSrc": "2458:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2458:15:1"
															},
															"nativeSrc": "2458:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2458:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2489:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2489:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2492:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2492:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2482:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:1"
																},
																"nativeSrc": "2482:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2482:15:1"
															},
															"nativeSrc": "2482:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2482:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2376:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2376:127:1"
											},
											{
												"body": {
													"nativeSrc": "2553:230:1",
													"nodeType": "YulBlock",
													"src": "2553:230:1",
													"statements": [
														{
															"nativeSrc": "2563:19:1",
															"nodeType": "YulAssignment",
															"src": "2563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2579:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2573:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2573:5:1"
																},
																"nativeSrc": "2573:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2563:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2563:6:1"
																}
															]
														},
														{
															"nativeSrc": "2591:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2591:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2613:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2613:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "2629:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2629:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2635:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2635:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2625:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2625:3:1"
																				},
																				"nativeSrc": "2625:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2625:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2644:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2644:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2640:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2640:3:1"
																				},
																				"nativeSrc": "2640:7:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2640:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2621:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:1"
																		},
																		"nativeSrc": "2621:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2609:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2609:3:1"
																},
																"nativeSrc": "2609:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2609:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2595:10:1",
																	"nodeType": "YulTypedName",
																	"src": "2595:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2724:22:1",
																"nodeType": "YulBlock",
																"src": "2724:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2726:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2726:16:1"
																			},
																			"nativeSrc": "2726:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2726:18:1"
																		},
																		"nativeSrc": "2726:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2667:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "2667:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2679:18:1",
																				"nodeType": "YulLiteral",
																				"src": "2679:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2664:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2664:2:1"
																		},
																		"nativeSrc": "2664:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2664:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2703:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "2703:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2715:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2715:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2700:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:1"
																		},
																		"nativeSrc": "2700:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2700:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2661:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2661:2:1"
																},
																"nativeSrc": "2661:62:1",
																"nodeType": "YulFunctionCall",
																"src": "2661:62:1"
															},
															"nativeSrc": "2658:88:1",
															"nodeType": "YulIf",
															"src": "2658:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2762:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2762:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2766:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2766:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2755:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:1"
																},
																"nativeSrc": "2755:22:1",
																"nodeType": "YulFunctionCall",
																"src": "2755:22:1"
															},
															"nativeSrc": "2755:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "2755:22:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2508:275:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2533:4:1",
														"nodeType": "YulTypedName",
														"src": "2533:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2542:6:1",
														"nodeType": "YulTypedName",
														"src": "2542:6:1",
														"type": ""
													}
												],
												"src": "2508:275:1"
											},
											{
												"body": {
													"nativeSrc": "2857:114:1",
													"nodeType": "YulBlock",
													"src": "2857:114:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2901:22:1",
																"nodeType": "YulBlock",
																"src": "2901:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2903:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2903:16:1"
																			},
																			"nativeSrc": "2903:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2903:18:1"
																		},
																		"nativeSrc": "2903:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2903:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2873:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2881:18:1",
																		"nodeType": "YulLiteral",
																		"src": "2881:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2870:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2870:2:1"
																},
																"nativeSrc": "2870:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2870:30:1"
															},
															"nativeSrc": "2867:56:1",
															"nodeType": "YulIf",
															"src": "2867:56:1"
														},
														{
															"nativeSrc": "2932:33:1",
															"nodeType": "YulAssignment",
															"src": "2932:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2948:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2948:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2951:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2951:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2944:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2944:3:1"
																		},
																		"nativeSrc": "2944:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2944:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2960:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2960:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2940:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2940:3:1"
																},
																"nativeSrc": "2940:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2940:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2932:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2932:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nativeSrc": "2788:183:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2837:6:1",
														"nodeType": "YulTypedName",
														"src": "2837:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2848:4:1",
														"nodeType": "YulTypedName",
														"src": "2848:4:1",
														"type": ""
													}
												],
												"src": "2788:183:1"
											},
											{
												"body": {
													"nativeSrc": "3040:604:1",
													"nodeType": "YulBlock",
													"src": "3040:604:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3089:16:1",
																"nodeType": "YulBlock",
																"src": "3089:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3098:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3098:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3101:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3101:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3091:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3091:6:1"
																			},
																			"nativeSrc": "3091:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3091:12:1"
																		},
																		"nativeSrc": "3091:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3091:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3068:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3068:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3076:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3076:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3064:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3064:3:1"
																				},
																				"nativeSrc": "3064:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3064:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3083:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3083:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3060:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3060:3:1"
																		},
																		"nativeSrc": "3060:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3053:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3053:6:1"
																},
																"nativeSrc": "3053:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3053:35:1"
															},
															"nativeSrc": "3050:55:1",
															"nodeType": "YulIf",
															"src": "3050:55:1"
														},
														{
															"nativeSrc": "3114:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3114:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3137:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3124:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3124:12:1"
																},
																"nativeSrc": "3124:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3124:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3118:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3118:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3153:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3153:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3163:4:1",
																"nodeType": "YulLiteral",
																"src": "3163:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3157:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3157:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3176:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3176:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3243:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3243:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "3203:39:1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:39:1"
																		},
																		"nativeSrc": "3203:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3203:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3187:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "3187:15:1"
																},
																"nativeSrc": "3187:60:1",
																"nodeType": "YulFunctionCall",
																"src": "3187:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3180:3:1",
																	"nodeType": "YulTypedName",
																	"src": "3180:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3256:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3256:16:1",
															"value": {
																"name": "dst",
																"nativeSrc": "3269:3:1",
																"nodeType": "YulIdentifier",
																"src": "3269:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "3260:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3260:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3288:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3288:3:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3293:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3293:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3281:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:1"
																},
																"nativeSrc": "3281:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3281:15:1"
															},
															"nativeSrc": "3281:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3281:15:1"
														},
														{
															"nativeSrc": "3305:21:1",
															"nodeType": "YulAssignment",
															"src": "3305:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3316:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3316:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3321:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3312:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3312:3:1"
																},
																"nativeSrc": "3312:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3312:14:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3305:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3305:3:1"
																}
															]
														},
														{
															"nativeSrc": "3335:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3335:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3357:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3357:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3369:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3369:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "3372:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3372:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3365:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:1"
																				},
																				"nativeSrc": "3365:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3353:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:1"
																		},
																		"nativeSrc": "3353:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3353:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3378:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3378:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3349:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:1"
																},
																"nativeSrc": "3349:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3349:34:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3339:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3339:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3411:16:1",
																"nodeType": "YulBlock",
																"src": "3411:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3420:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3420:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3423:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3423:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3413:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3413:6:1"
																			},
																			"nativeSrc": "3413:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3413:12:1"
																		},
																		"nativeSrc": "3413:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3413:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3398:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3398:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3406:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3395:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3395:2:1"
																},
																"nativeSrc": "3395:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3395:15:1"
															},
															"nativeSrc": "3392:35:1",
															"nodeType": "YulIf",
															"src": "3392:35:1"
														},
														{
															"nativeSrc": "3436:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3436:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3451:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3459:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3459:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3447:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3447:3:1"
																},
																"nativeSrc": "3447:17:1",
																"nodeType": "YulFunctionCall",
																"src": "3447:17:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "3440:3:1",
																	"nodeType": "YulTypedName",
																	"src": "3440:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3529:86:1",
																"nodeType": "YulBlock",
																"src": "3529:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3550:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3550:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "3568:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3568:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "3555:12:1",
																						"nodeType": "YulIdentifier",
																						"src": "3555:12:1"
																					},
																					"nativeSrc": "3555:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3555:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3543:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3543:6:1"
																			},
																			"nativeSrc": "3543:30:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3543:30:1"
																		},
																		"nativeSrc": "3543:30:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3543:30:1"
																	},
																	{
																		"nativeSrc": "3586:19:1",
																		"nodeType": "YulAssignment",
																		"src": "3586:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3597:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3597:3:1"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3602:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3602:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3593:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3593:3:1"
																			},
																			"nativeSrc": "3593:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3593:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3586:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3586:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3484:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3484:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3489:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3489:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3481:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3481:2:1"
																},
																"nativeSrc": "3481:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3481:15:1"
															},
															"nativeSrc": "3473:142:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3497:23:1",
																"nodeType": "YulBlock",
																"src": "3497:23:1",
																"statements": [
																	{
																		"nativeSrc": "3499:19:1",
																		"nodeType": "YulAssignment",
																		"src": "3499:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3510:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3510:3:1"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3515:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3515:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3506:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3506:3:1"
																			},
																			"nativeSrc": "3506:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3506:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3499:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3499:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3477:3:1",
																"nodeType": "YulBlock",
																"src": "3477:3:1",
																"statements": []
															},
															"src": "3473:142:1"
														},
														{
															"nativeSrc": "3624:14:1",
															"nodeType": "YulAssignment",
															"src": "3624:14:1",
															"value": {
																"name": "dst_1",
																"nativeSrc": "3633:5:1",
																"nodeType": "YulIdentifier",
																"src": "3633:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3624:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3624:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nativeSrc": "2976:668:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3014:6:1",
														"nodeType": "YulTypedName",
														"src": "3014:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3022:3:1",
														"nodeType": "YulTypedName",
														"src": "3022:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3030:5:1",
														"nodeType": "YulTypedName",
														"src": "3030:5:1",
														"type": ""
													}
												],
												"src": "2976:668:1"
											},
											{
												"body": {
													"nativeSrc": "3701:478:1",
													"nodeType": "YulBlock",
													"src": "3701:478:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3750:16:1",
																"nodeType": "YulBlock",
																"src": "3750:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3759:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3759:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3762:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3752:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3752:6:1"
																			},
																			"nativeSrc": "3752:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3752:12:1"
																		},
																		"nativeSrc": "3752:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3752:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3729:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3729:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3737:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3737:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3725:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3725:3:1"
																				},
																				"nativeSrc": "3725:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3725:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3744:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3744:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3721:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3721:3:1"
																		},
																		"nativeSrc": "3721:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3721:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3714:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3714:6:1"
																},
																"nativeSrc": "3714:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3714:35:1"
															},
															"nativeSrc": "3711:55:1",
															"nodeType": "YulIf",
															"src": "3711:55:1"
														},
														{
															"nativeSrc": "3775:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3775:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3798:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3798:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3785:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3785:12:1"
																},
																"nativeSrc": "3785:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3785:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3779:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3779:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3844:22:1",
																"nodeType": "YulBlock",
																"src": "3844:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3846:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3846:16:1"
																			},
																			"nativeSrc": "3846:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3846:18:1"
																		},
																		"nativeSrc": "3846:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3846:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3820:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3820:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3824:18:1",
																		"nodeType": "YulLiteral",
																		"src": "3824:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3817:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3817:2:1"
																},
																"nativeSrc": "3817:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3817:26:1"
															},
															"nativeSrc": "3814:52:1",
															"nodeType": "YulIf",
															"src": "3814:52:1"
														},
														{
															"nativeSrc": "3875:70:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3875:70:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nativeSrc": "3918:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "3918:2:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3922:4:1",
																								"nodeType": "YulLiteral",
																								"src": "3922:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3914:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3914:3:1"
																						},
																						"nativeSrc": "3914:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3914:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3933:2:1",
																								"nodeType": "YulLiteral",
																								"src": "3933:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3929:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3929:3:1"
																						},
																						"nativeSrc": "3929:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3929:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3910:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3910:3:1"
																				},
																				"nativeSrc": "3910:27:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3910:27:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3939:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3939:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3906:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3906:3:1"
																		},
																		"nativeSrc": "3906:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3906:38:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3890:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "3890:15:1"
																},
																"nativeSrc": "3890:55:1",
																"nodeType": "YulFunctionCall",
																"src": "3890:55:1"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "3879:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3879:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nativeSrc": "3961:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3961:7:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3970:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3970:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3954:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3954:6:1"
																},
																"nativeSrc": "3954:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3954:19:1"
															},
															"nativeSrc": "3954:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3954:19:1"
														},
														{
															"body": {
																"nativeSrc": "4021:16:1",
																"nodeType": "YulBlock",
																"src": "4021:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4030:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4030:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4033:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4033:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4023:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4023:6:1"
																			},
																			"nativeSrc": "4023:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4023:12:1"
																		},
																		"nativeSrc": "4023:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4023:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3996:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3996:6:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "4004:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4004:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3992:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3992:3:1"
																				},
																				"nativeSrc": "3992:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3992:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4009:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4009:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3988:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:1"
																		},
																		"nativeSrc": "3988:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3988:26:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4016:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4016:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3985:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3985:2:1"
																},
																"nativeSrc": "3985:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3985:35:1"
															},
															"nativeSrc": "3982:55:1",
															"nodeType": "YulIf",
															"src": "3982:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nativeSrc": "4063:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4063:7:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4072:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4072:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4059:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:1"
																		},
																		"nativeSrc": "4059:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4059:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4083:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4091:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4091:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4079:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:1"
																		},
																		"nativeSrc": "4079:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4079:17:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4098:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4046:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:12:1"
																},
																"nativeSrc": "4046:55:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:55:1"
															},
															"nativeSrc": "4046:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nativeSrc": "4125:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "4125:7:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "4134:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4134:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4121:3:1"
																				},
																				"nativeSrc": "4121:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4121:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4139:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4139:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4117:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4117:3:1"
																		},
																		"nativeSrc": "4117:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4117:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4146:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4146:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:1"
																},
																"nativeSrc": "4110:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4110:38:1"
															},
															"nativeSrc": "4110:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "4110:38:1"
														},
														{
															"nativeSrc": "4157:16:1",
															"nodeType": "YulAssignment",
															"src": "4157:16:1",
															"value": {
																"name": "array_1",
																"nativeSrc": "4166:7:1",
																"nodeType": "YulIdentifier",
																"src": "4166:7:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4157:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4157:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "3649:530:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3675:6:1",
														"nodeType": "YulTypedName",
														"src": "3675:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3683:3:1",
														"nodeType": "YulTypedName",
														"src": "3683:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3691:5:1",
														"nodeType": "YulTypedName",
														"src": "3691:5:1",
														"type": ""
													}
												],
												"src": "3649:530:1"
											},
											{
												"body": {
													"nativeSrc": "4381:746:1",
													"nodeType": "YulBlock",
													"src": "4381:746:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:16:1",
																"nodeType": "YulBlock",
																"src": "4428:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4437:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4437:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4440:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4430:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4430:6:1"
																			},
																			"nativeSrc": "4430:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:12:1"
																		},
																		"nativeSrc": "4430:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4402:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4402:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4411:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4398:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:1"
																		},
																		"nativeSrc": "4398:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4398:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4423:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4394:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:1"
																},
																"nativeSrc": "4394:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4394:33:1"
															},
															"nativeSrc": "4391:53:1",
															"nodeType": "YulIf",
															"src": "4391:53:1"
														},
														{
															"nativeSrc": "4453:39:1",
															"nodeType": "YulAssignment",
															"src": "4453:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4482:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4482:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4463:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4463:18:1"
																},
																"nativeSrc": "4463:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4463:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4453:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:1"
																}
															]
														},
														{
															"nativeSrc": "4501:48:1",
															"nodeType": "YulAssignment",
															"src": "4501:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4534:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4545:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4530:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:1"
																		},
																		"nativeSrc": "4530:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4530:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4511:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4511:18:1"
																},
																"nativeSrc": "4511:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4511:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:1"
																}
															]
														},
														{
															"nativeSrc": "4558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4558:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4589:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4589:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4600:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4600:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4585:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4585:3:1"
																		},
																		"nativeSrc": "4585:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4585:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4572:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4572:12:1"
																},
																"nativeSrc": "4572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4572:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4562:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4613:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4613:28:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4623:18:1",
																"nodeType": "YulLiteral",
																"src": "4623:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4617:2:1",
																	"nodeType": "YulTypedName",
																	"src": "4617:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4668:16:1",
																"nodeType": "YulBlock",
																"src": "4668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4670:6:1"
																			},
																			"nativeSrc": "4670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4670:12:1"
																		},
																		"nativeSrc": "4670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4656:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4656:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4664:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4664:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4653:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4653:2:1"
																},
																"nativeSrc": "4653:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4653:14:1"
															},
															"nativeSrc": "4650:34:1",
															"nodeType": "YulIf",
															"src": "4650:34:1"
														},
														{
															"nativeSrc": "4693:71:1",
															"nodeType": "YulAssignment",
															"src": "4693:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4736:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4736:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4747:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4747:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4732:3:1"
																		},
																		"nativeSrc": "4732:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4732:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4756:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4756:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "4703:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "4703:28:1"
																},
																"nativeSrc": "4703:61:1",
																"nodeType": "YulFunctionCall",
																"src": "4703:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4693:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:1"
																}
															]
														},
														{
															"nativeSrc": "4773:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4773:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4806:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4806:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4817:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4817:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4802:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4802:3:1"
																		},
																		"nativeSrc": "4802:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4802:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4789:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4789:12:1"
																},
																"nativeSrc": "4789:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4789:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4777:8:1",
																	"nodeType": "YulTypedName",
																	"src": "4777:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4850:16:1",
																"nodeType": "YulBlock",
																"src": "4850:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4859:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4859:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4862:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4862:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4852:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4852:6:1"
																			},
																			"nativeSrc": "4852:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4852:12:1"
																		},
																		"nativeSrc": "4852:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4836:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4836:8:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4846:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4846:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4833:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4833:2:1"
																},
																"nativeSrc": "4833:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4833:16:1"
															},
															"nativeSrc": "4830:36:1",
															"nodeType": "YulIf",
															"src": "4830:36:1"
														},
														{
															"nativeSrc": "4875:73:1",
															"nodeType": "YulAssignment",
															"src": "4875:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4918:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4918:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "4929:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "4929:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4914:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4914:3:1"
																		},
																		"nativeSrc": "4914:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4914:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4940:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4940:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "4885:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "4885:28:1"
																},
																"nativeSrc": "4885:63:1",
																"nodeType": "YulFunctionCall",
																"src": "4885:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4875:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:1"
																}
															]
														},
														{
															"nativeSrc": "4957:49:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4957:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4990:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4990:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5001:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5001:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4986:3:1"
																		},
																		"nativeSrc": "4986:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4973:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4973:12:1"
																},
																"nativeSrc": "4973:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4973:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "4961:8:1",
																	"nodeType": "YulTypedName",
																	"src": "4961:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5035:16:1",
																"nodeType": "YulBlock",
																"src": "5035:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5044:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5044:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5047:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5047:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5037:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5037:6:1"
																			},
																			"nativeSrc": "5037:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5037:12:1"
																		},
																		"nativeSrc": "5037:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5037:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "5021:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5021:8:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5031:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5031:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5018:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5018:2:1"
																},
																"nativeSrc": "5018:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5018:16:1"
															},
															"nativeSrc": "5015:36:1",
															"nodeType": "YulIf",
															"src": "5015:36:1"
														},
														{
															"nativeSrc": "5060:61:1",
															"nodeType": "YulAssignment",
															"src": "5060:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5091:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5091:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "5102:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "5102:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5087:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5087:3:1"
																		},
																		"nativeSrc": "5087:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5087:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5113:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5113:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "5070:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "5070:16:1"
																},
																"nativeSrc": "5070:51:1",
																"nodeType": "YulFunctionCall",
																"src": "5070:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "4184:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4315:9:1",
														"nodeType": "YulTypedName",
														"src": "4315:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4326:7:1",
														"nodeType": "YulTypedName",
														"src": "4326:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4338:6:1",
														"nodeType": "YulTypedName",
														"src": "4338:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4346:6:1",
														"nodeType": "YulTypedName",
														"src": "4346:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4354:6:1",
														"nodeType": "YulTypedName",
														"src": "4354:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4362:6:1",
														"nodeType": "YulTypedName",
														"src": "4362:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4370:6:1",
														"nodeType": "YulTypedName",
														"src": "4370:6:1",
														"type": ""
													}
												],
												"src": "4184:943:1"
											},
											{
												"body": {
													"nativeSrc": "5269:1009:1",
													"nodeType": "YulBlock",
													"src": "5269:1009:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5315:16:1",
																"nodeType": "YulBlock",
																"src": "5315:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5324:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5324:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5327:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5327:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5317:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5317:6:1"
																			},
																			"nativeSrc": "5317:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5317:12:1"
																		},
																		"nativeSrc": "5317:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5317:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5290:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5290:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5299:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5299:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5286:3:1"
																		},
																		"nativeSrc": "5286:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5286:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5311:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5282:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:1"
																},
																"nativeSrc": "5282:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5282:32:1"
															},
															"nativeSrc": "5279:52:1",
															"nodeType": "YulIf",
															"src": "5279:52:1"
														},
														{
															"nativeSrc": "5340:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5340:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5367:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5367:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5354:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5354:12:1"
																},
																"nativeSrc": "5354:23:1",
																"nodeType": "YulFunctionCall",
																"src": "5354:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5344:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5344:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5386:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5386:28:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5396:18:1",
																"nodeType": "YulLiteral",
																"src": "5396:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5390:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5390:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5441:16:1",
																"nodeType": "YulBlock",
																"src": "5441:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5450:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5450:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5453:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5453:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5443:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5443:6:1"
																			},
																			"nativeSrc": "5443:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5443:12:1"
																		},
																		"nativeSrc": "5443:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5443:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5429:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5429:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5437:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5437:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5426:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5426:2:1"
																},
																"nativeSrc": "5426:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5426:14:1"
															},
															"nativeSrc": "5423:34:1",
															"nodeType": "YulIf",
															"src": "5423:34:1"
														},
														{
															"nativeSrc": "5466:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5466:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5480:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5480:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5491:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5491:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5476:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5476:3:1"
																},
																"nativeSrc": "5476:22:1",
																"nodeType": "YulFunctionCall",
																"src": "5476:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "5470:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5470:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5546:16:1",
																"nodeType": "YulBlock",
																"src": "5546:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5555:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5555:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5558:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5558:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5548:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5548:6:1"
																			},
																			"nativeSrc": "5548:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5548:12:1"
																		},
																		"nativeSrc": "5548:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5548:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5525:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5525:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5529:4:1",
																						"nodeType": "YulLiteral",
																						"src": "5529:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5521:3:1"
																				},
																				"nativeSrc": "5521:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5521:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5536:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5517:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5517:3:1"
																		},
																		"nativeSrc": "5517:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5517:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5510:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5510:6:1"
																},
																"nativeSrc": "5510:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5510:35:1"
															},
															"nativeSrc": "5507:55:1",
															"nodeType": "YulIf",
															"src": "5507:55:1"
														},
														{
															"nativeSrc": "5571:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5594:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5594:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5581:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5581:12:1"
																},
																"nativeSrc": "5581:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5581:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "5575:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5575:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5606:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5606:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5616:4:1",
																"nodeType": "YulLiteral",
																"src": "5616:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "5610:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5610:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5629:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5629:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "5696:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5696:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "5656:39:1",
																			"nodeType": "YulIdentifier",
																			"src": "5656:39:1"
																		},
																		"nativeSrc": "5656:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5656:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5640:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "5640:15:1"
																},
																"nativeSrc": "5640:60:1",
																"nodeType": "YulFunctionCall",
																"src": "5640:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5633:3:1",
																	"nodeType": "YulTypedName",
																	"src": "5633:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5709:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5709:16:1",
															"value": {
																"name": "dst",
																"nativeSrc": "5722:3:1",
																"nodeType": "YulIdentifier",
																"src": "5722:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "5713:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5713:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5741:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5741:3:1"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "5746:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5746:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5734:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:1"
																},
																"nativeSrc": "5734:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5734:15:1"
															},
															"nativeSrc": "5734:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5734:15:1"
														},
														{
															"nativeSrc": "5758:19:1",
															"nodeType": "YulAssignment",
															"src": "5758:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5769:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5769:3:1"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "5774:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5774:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5765:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5765:3:1"
																},
																"nativeSrc": "5765:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5765:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5758:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5758:3:1"
																}
															]
														},
														{
															"nativeSrc": "5786:42:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5786:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "5808:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5808:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5816:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5816:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "5819:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5819:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5812:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:1"
																				},
																				"nativeSrc": "5812:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5812:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5804:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5804:3:1"
																		},
																		"nativeSrc": "5804:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5804:19:1"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "5825:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5825:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5800:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:1"
																},
																"nativeSrc": "5800:28:1",
																"nodeType": "YulFunctionCall",
																"src": "5800:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5790:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5790:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5860:16:1",
																"nodeType": "YulBlock",
																"src": "5860:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5869:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5869:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5872:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5872:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5862:6:1"
																			},
																			"nativeSrc": "5862:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:12:1"
																		},
																		"nativeSrc": "5862:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5843:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5843:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5851:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5851:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5840:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5840:2:1"
																},
																"nativeSrc": "5840:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5840:19:1"
															},
															"nativeSrc": "5837:39:1",
															"nodeType": "YulIf",
															"src": "5837:39:1"
														},
														{
															"nativeSrc": "5885:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5885:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5900:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5900:2:1"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "5904:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5904:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5896:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:1"
																},
																"nativeSrc": "5896:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5896:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "5889:3:1",
																	"nodeType": "YulTypedName",
																	"src": "5889:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5972:92:1",
																"nodeType": "YulBlock",
																"src": "5972:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5993:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5993:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "6017:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6017:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "5998:18:1",
																						"nodeType": "YulIdentifier",
																						"src": "5998:18:1"
																					},
																					"nativeSrc": "5998:23:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5998:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5986:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5986:6:1"
																			},
																			"nativeSrc": "5986:36:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5986:36:1"
																		},
																		"nativeSrc": "5986:36:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5986:36:1"
																	},
																	{
																		"nativeSrc": "6035:19:1",
																		"nodeType": "YulAssignment",
																		"src": "6035:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6046:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6046:3:1"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "6051:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6051:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6042:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6042:3:1"
																			},
																			"nativeSrc": "6042:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6042:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6035:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6035:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5927:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5927:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5932:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5932:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5924:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5924:2:1"
																},
																"nativeSrc": "5924:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5924:15:1"
															},
															"nativeSrc": "5916:148:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5940:23:1",
																"nodeType": "YulBlock",
																"src": "5940:23:1",
																"statements": [
																	{
																		"nativeSrc": "5942:19:1",
																		"nodeType": "YulAssignment",
																		"src": "5942:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5953:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5953:3:1"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "5958:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5958:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5949:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5949:3:1"
																			},
																			"nativeSrc": "5949:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5949:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5942:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5942:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5920:3:1",
																"nodeType": "YulBlock",
																"src": "5920:3:1",
																"statements": []
															},
															"src": "5916:148:1"
														},
														{
															"nativeSrc": "6073:15:1",
															"nodeType": "YulAssignment",
															"src": "6073:15:1",
															"value": {
																"name": "dst_1",
																"nativeSrc": "6083:5:1",
																"nodeType": "YulIdentifier",
																"src": "6083:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6073:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6073:6:1"
																}
															]
														},
														{
															"nativeSrc": "6097:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6097:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6130:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6130:9:1"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "6141:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6141:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6126:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6126:3:1"
																		},
																		"nativeSrc": "6126:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6126:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6113:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6113:12:1"
																},
																"nativeSrc": "6113:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6113:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6101:8:1",
																	"nodeType": "YulTypedName",
																	"src": "6101:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6174:16:1",
																"nodeType": "YulBlock",
																"src": "6174:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6183:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6183:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6186:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6186:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6176:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6176:6:1"
																			},
																			"nativeSrc": "6176:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6176:12:1"
																		},
																		"nativeSrc": "6176:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6176:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6160:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6160:8:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6170:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "6170:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:1"
																},
																"nativeSrc": "6157:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6157:16:1"
															},
															"nativeSrc": "6154:36:1",
															"nodeType": "YulIf",
															"src": "6154:36:1"
														},
														{
															"nativeSrc": "6199:73:1",
															"nodeType": "YulAssignment",
															"src": "6199:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6242:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "6253:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "6253:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:1"
																		},
																		"nativeSrc": "6238:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6264:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "6264:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "6209:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "6209:28:1"
																},
																"nativeSrc": "6209:63:1",
																"nodeType": "YulFunctionCall",
																"src": "6209:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5132:1146:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5227:9:1",
														"nodeType": "YulTypedName",
														"src": "5227:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5238:7:1",
														"nodeType": "YulTypedName",
														"src": "5238:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5250:6:1",
														"nodeType": "YulTypedName",
														"src": "5250:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5258:6:1",
														"nodeType": "YulTypedName",
														"src": "5258:6:1",
														"type": ""
													}
												],
												"src": "5132:1146:1"
											},
											{
												"body": {
													"nativeSrc": "6344:378:1",
													"nodeType": "YulBlock",
													"src": "6344:378:1",
													"statements": [
														{
															"nativeSrc": "6354:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6354:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6374:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6374:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6368:5:1"
																},
																"nativeSrc": "6368:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6368:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6358:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6358:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6396:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6396:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6401:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6401:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6389:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6389:6:1"
																},
																"nativeSrc": "6389:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6389:19:1"
															},
															"nativeSrc": "6389:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6389:19:1"
														},
														{
															"nativeSrc": "6417:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6417:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "6427:4:1",
																"nodeType": "YulLiteral",
																"src": "6427:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6421:2:1",
																	"nodeType": "YulTypedName",
																	"src": "6421:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6440:21:1",
															"nodeType": "YulAssignment",
															"src": "6440:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6451:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6451:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6456:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6456:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6447:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6447:3:1"
																},
																"nativeSrc": "6447:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6447:14:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6440:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6440:3:1"
																}
															]
														},
														{
															"nativeSrc": "6470:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6470:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6488:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6488:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6495:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6495:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6484:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6484:3:1"
																},
																"nativeSrc": "6484:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6484:16:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6474:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6474:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6509:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6509:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "6518:1:1",
																"nodeType": "YulLiteral",
																"src": "6518:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6513:1:1",
																	"nodeType": "YulTypedName",
																	"src": "6513:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6577:120:1",
																"nodeType": "YulBlock",
																"src": "6577:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6598:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6598:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "6609:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "6609:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6603:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6603:5:1"
																					},
																					"nativeSrc": "6603:13:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6603:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6591:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6591:6:1"
																			},
																			"nativeSrc": "6591:26:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:26:1"
																		},
																		"nativeSrc": "6591:26:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:26:1"
																	},
																	{
																		"nativeSrc": "6630:19:1",
																		"nodeType": "YulAssignment",
																		"src": "6630:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6641:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6641:3:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6646:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6646:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6637:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6637:3:1"
																			},
																			"nativeSrc": "6637:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6637:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6630:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6630:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6662:25:1",
																		"nodeType": "YulAssignment",
																		"src": "6662:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6676:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6676:6:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6684:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6684:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6672:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6672:3:1"
																			},
																			"nativeSrc": "6672:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6672:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6662:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6662:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6539:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6539:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6542:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6542:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6536:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6536:2:1"
																},
																"nativeSrc": "6536:13:1",
																"nodeType": "YulFunctionCall",
																"src": "6536:13:1"
															},
															"nativeSrc": "6528:169:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6550:18:1",
																"nodeType": "YulBlock",
																"src": "6550:18:1",
																"statements": [
																	{
																		"nativeSrc": "6552:14:1",
																		"nodeType": "YulAssignment",
																		"src": "6552:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6561:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "6561:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6564:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6564:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6557:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6557:3:1"
																			},
																			"nativeSrc": "6557:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6557:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6552:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "6552:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6532:3:1",
																"nodeType": "YulBlock",
																"src": "6532:3:1",
																"statements": []
															},
															"src": "6528:169:1"
														},
														{
															"nativeSrc": "6706:10:1",
															"nodeType": "YulAssignment",
															"src": "6706:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "6713:3:1",
																"nodeType": "YulIdentifier",
																"src": "6713:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6706:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6706:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "6283:439:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6321:5:1",
														"nodeType": "YulTypedName",
														"src": "6321:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6328:3:1",
														"nodeType": "YulTypedName",
														"src": "6328:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6336:3:1",
														"nodeType": "YulTypedName",
														"src": "6336:3:1",
														"type": ""
													}
												],
												"src": "6283:439:1"
											},
											{
												"body": {
													"nativeSrc": "6878:110:1",
													"nodeType": "YulBlock",
													"src": "6878:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6888:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:1"
																},
																"nativeSrc": "6888:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6888:21:1"
															},
															"nativeSrc": "6888:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6888:21:1"
														},
														{
															"nativeSrc": "6918:64:1",
															"nodeType": "YulAssignment",
															"src": "6918:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6955:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6955:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6967:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6967:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6978:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6978:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6963:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6963:3:1"
																		},
																		"nativeSrc": "6963:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6963:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "6926:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "6926:28:1"
																},
																"nativeSrc": "6926:56:1",
																"nodeType": "YulFunctionCall",
																"src": "6926:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6918:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6727:261:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6847:9:1",
														"nodeType": "YulTypedName",
														"src": "6847:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6858:6:1",
														"nodeType": "YulTypedName",
														"src": "6858:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6869:4:1",
														"nodeType": "YulTypedName",
														"src": "6869:4:1",
														"type": ""
													}
												],
												"src": "6727:261:1"
											},
											{
												"body": {
													"nativeSrc": "7077:263:1",
													"nodeType": "YulBlock",
													"src": "7077:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7123:16:1",
																"nodeType": "YulBlock",
																"src": "7123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7132:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7135:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7125:6:1"
																			},
																			"nativeSrc": "7125:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7125:12:1"
																		},
																		"nativeSrc": "7125:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7098:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7098:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7107:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:1"
																		},
																		"nativeSrc": "7094:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7119:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7090:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:1"
																},
																"nativeSrc": "7090:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7090:32:1"
															},
															"nativeSrc": "7087:52:1",
															"nodeType": "YulIf",
															"src": "7087:52:1"
														},
														{
															"nativeSrc": "7148:39:1",
															"nodeType": "YulAssignment",
															"src": "7148:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7177:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7177:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7158:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7158:18:1"
																},
																"nativeSrc": "7158:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7158:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7148:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7148:6:1"
																}
															]
														},
														{
															"nativeSrc": "7196:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7196:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7226:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7226:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7237:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7237:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7222:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7222:3:1"
																		},
																		"nativeSrc": "7222:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7222:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7209:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7209:12:1"
																},
																"nativeSrc": "7209:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7209:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7200:5:1",
																	"nodeType": "YulTypedName",
																	"src": "7200:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7294:16:1",
																"nodeType": "YulBlock",
																"src": "7294:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7303:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7303:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7306:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7306:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7296:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7296:6:1"
																			},
																			"nativeSrc": "7296:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7296:12:1"
																		},
																		"nativeSrc": "7296:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7296:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7263:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7263:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7284:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "7284:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7277:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "7277:6:1"
																						},
																						"nativeSrc": "7277:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7277:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7270:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7270:6:1"
																				},
																				"nativeSrc": "7270:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7270:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7260:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7260:2:1"
																		},
																		"nativeSrc": "7260:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7260:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7253:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:1"
																},
																"nativeSrc": "7253:40:1",
																"nodeType": "YulFunctionCall",
																"src": "7253:40:1"
															},
															"nativeSrc": "7250:60:1",
															"nodeType": "YulIf",
															"src": "7250:60:1"
														},
														{
															"nativeSrc": "7319:15:1",
															"nodeType": "YulAssignment",
															"src": "7319:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "7329:5:1",
																"nodeType": "YulIdentifier",
																"src": "7329:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7319:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7319:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6993:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7035:9:1",
														"nodeType": "YulTypedName",
														"src": "7035:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7046:7:1",
														"nodeType": "YulTypedName",
														"src": "7046:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7058:6:1",
														"nodeType": "YulTypedName",
														"src": "7058:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7066:6:1",
														"nodeType": "YulTypedName",
														"src": "7066:6:1",
														"type": ""
													}
												],
												"src": "6993:347:1"
											},
											{
												"body": {
													"nativeSrc": "7432:173:1",
													"nodeType": "YulBlock",
													"src": "7432:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7478:16:1",
																"nodeType": "YulBlock",
																"src": "7478:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7487:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7487:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7490:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7490:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7480:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7480:6:1"
																			},
																			"nativeSrc": "7480:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7480:12:1"
																		},
																		"nativeSrc": "7480:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7480:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7453:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7453:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7462:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7462:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7449:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7449:3:1"
																		},
																		"nativeSrc": "7449:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7449:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7474:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7474:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7445:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7445:3:1"
																},
																"nativeSrc": "7445:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7445:32:1"
															},
															"nativeSrc": "7442:52:1",
															"nodeType": "YulIf",
															"src": "7442:52:1"
														},
														{
															"nativeSrc": "7503:39:1",
															"nodeType": "YulAssignment",
															"src": "7503:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7532:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7532:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7513:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7513:18:1"
																},
																"nativeSrc": "7513:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7513:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7503:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7503:6:1"
																}
															]
														},
														{
															"nativeSrc": "7551:48:1",
															"nodeType": "YulAssignment",
															"src": "7551:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7595:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7595:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7580:3:1"
																		},
																		"nativeSrc": "7580:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7580:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7561:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7561:18:1"
																},
																"nativeSrc": "7561:38:1",
																"nodeType": "YulFunctionCall",
																"src": "7561:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7551:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7551:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7345:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7390:9:1",
														"nodeType": "YulTypedName",
														"src": "7390:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7401:7:1",
														"nodeType": "YulTypedName",
														"src": "7401:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7413:6:1",
														"nodeType": "YulTypedName",
														"src": "7413:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7421:6:1",
														"nodeType": "YulTypedName",
														"src": "7421:6:1",
														"type": ""
													}
												],
												"src": "7345:260:1"
											},
											{
												"body": {
													"nativeSrc": "7757:459:1",
													"nodeType": "YulBlock",
													"src": "7757:459:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7804:16:1",
																"nodeType": "YulBlock",
																"src": "7804:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7813:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7813:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7816:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7816:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7806:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7806:6:1"
																			},
																			"nativeSrc": "7806:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7806:12:1"
																		},
																		"nativeSrc": "7806:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7806:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7778:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7778:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7787:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7787:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7774:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7774:3:1"
																		},
																		"nativeSrc": "7774:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7774:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7799:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7799:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7770:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7770:3:1"
																},
																"nativeSrc": "7770:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7770:33:1"
															},
															"nativeSrc": "7767:53:1",
															"nodeType": "YulIf",
															"src": "7767:53:1"
														},
														{
															"nativeSrc": "7829:39:1",
															"nodeType": "YulAssignment",
															"src": "7829:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7858:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7858:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7839:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7839:18:1"
																},
																"nativeSrc": "7839:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7839:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7829:6:1"
																}
															]
														},
														{
															"nativeSrc": "7877:48:1",
															"nodeType": "YulAssignment",
															"src": "7877:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7910:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7910:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7921:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7921:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7906:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:1"
																		},
																		"nativeSrc": "7906:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7906:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7887:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7887:18:1"
																},
																"nativeSrc": "7887:38:1",
																"nodeType": "YulFunctionCall",
																"src": "7887:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7877:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:1"
																}
															]
														},
														{
															"nativeSrc": "7934:42:1",
															"nodeType": "YulAssignment",
															"src": "7934:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7961:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7972:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7972:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7957:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:1"
																		},
																		"nativeSrc": "7957:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7944:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7944:12:1"
																},
																"nativeSrc": "7944:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7944:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7934:6:1"
																}
															]
														},
														{
															"nativeSrc": "7985:42:1",
															"nodeType": "YulAssignment",
															"src": "7985:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8012:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8012:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8023:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8023:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8008:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8008:3:1"
																		},
																		"nativeSrc": "8008:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8008:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7995:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7995:12:1"
																},
																"nativeSrc": "7995:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7995:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "7985:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7985:6:1"
																}
															]
														},
														{
															"nativeSrc": "8036:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8036:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8067:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8078:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8078:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8063:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8063:3:1"
																		},
																		"nativeSrc": "8063:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8063:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8050:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8050:12:1"
																},
																"nativeSrc": "8050:33:1",
																"nodeType": "YulFunctionCall",
																"src": "8050:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8040:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8040:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8126:16:1",
																"nodeType": "YulBlock",
																"src": "8126:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8135:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8135:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8138:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8138:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8128:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8128:6:1"
																			},
																			"nativeSrc": "8128:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8128:12:1"
																		},
																		"nativeSrc": "8128:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8128:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8098:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8098:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8106:18:1",
																		"nodeType": "YulLiteral",
																		"src": "8106:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8095:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8095:2:1"
																},
																"nativeSrc": "8095:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8095:30:1"
															},
															"nativeSrc": "8092:50:1",
															"nodeType": "YulIf",
															"src": "8092:50:1"
														},
														{
															"nativeSrc": "8151:59:1",
															"nodeType": "YulAssignment",
															"src": "8151:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8182:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8182:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8193:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8193:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8178:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8178:3:1"
																		},
																		"nativeSrc": "8178:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8178:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8202:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "8202:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "8161:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "8161:16:1"
																},
																"nativeSrc": "8161:49:1",
																"nodeType": "YulFunctionCall",
																"src": "8161:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "8151:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8151:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "7610:606:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7691:9:1",
														"nodeType": "YulTypedName",
														"src": "7691:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7702:7:1",
														"nodeType": "YulTypedName",
														"src": "7702:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7714:6:1",
														"nodeType": "YulTypedName",
														"src": "7714:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7722:6:1",
														"nodeType": "YulTypedName",
														"src": "7722:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7730:6:1",
														"nodeType": "YulTypedName",
														"src": "7730:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7738:6:1",
														"nodeType": "YulTypedName",
														"src": "7738:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7746:6:1",
														"nodeType": "YulTypedName",
														"src": "7746:6:1",
														"type": ""
													}
												],
												"src": "7610:606:1"
											},
											{
												"body": {
													"nativeSrc": "8276:325:1",
													"nodeType": "YulBlock",
													"src": "8276:325:1",
													"statements": [
														{
															"nativeSrc": "8286:22:1",
															"nodeType": "YulAssignment",
															"src": "8286:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8300:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8300:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "8303:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8303:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8296:3:1"
																},
																"nativeSrc": "8296:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8296:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8286:6:1"
																}
															]
														},
														{
															"nativeSrc": "8317:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8317:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8347:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8347:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8353:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8343:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8343:3:1"
																},
																"nativeSrc": "8343:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8343:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8321:18:1",
																	"nodeType": "YulTypedName",
																	"src": "8321:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8394:31:1",
																"nodeType": "YulBlock",
																"src": "8394:31:1",
																"statements": [
																	{
																		"nativeSrc": "8396:27:1",
																		"nodeType": "YulAssignment",
																		"src": "8396:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8410:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8410:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8418:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8418:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8406:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8406:3:1"
																			},
																			"nativeSrc": "8406:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8406:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8396:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8396:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8374:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8374:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8367:6:1"
																},
																"nativeSrc": "8367:26:1",
																"nodeType": "YulFunctionCall",
																"src": "8367:26:1"
															},
															"nativeSrc": "8364:61:1",
															"nodeType": "YulIf",
															"src": "8364:61:1"
														},
														{
															"body": {
																"nativeSrc": "8484:111:1",
																"nodeType": "YulBlock",
																"src": "8484:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8505:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8505:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8512:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8512:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8517:10:1",
																							"nodeType": "YulLiteral",
																							"src": "8517:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8508:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8508:3:1"
																					},
																					"nativeSrc": "8508:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8508:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8498:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8498:6:1"
																			},
																			"nativeSrc": "8498:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8498:31:1"
																		},
																		"nativeSrc": "8498:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8498:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8549:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8549:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8552:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8552:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8542:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8542:6:1"
																			},
																			"nativeSrc": "8542:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8542:15:1"
																		},
																		"nativeSrc": "8542:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8542:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8577:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8577:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8580:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8580:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8570:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8570:6:1"
																			},
																			"nativeSrc": "8570:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8570:15:1"
																		},
																		"nativeSrc": "8570:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8570:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8440:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8440:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8463:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8463:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8471:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8471:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8460:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8460:2:1"
																		},
																		"nativeSrc": "8460:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8460:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8437:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8437:2:1"
																},
																"nativeSrc": "8437:38:1",
																"nodeType": "YulFunctionCall",
																"src": "8437:38:1"
															},
															"nativeSrc": "8434:161:1",
															"nodeType": "YulIf",
															"src": "8434:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8221:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8256:4:1",
														"nodeType": "YulTypedName",
														"src": "8256:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8265:6:1",
														"nodeType": "YulTypedName",
														"src": "8265:6:1",
														"type": ""
													}
												],
												"src": "8221:380:1"
											},
											{
												"body": {
													"nativeSrc": "8735:175:1",
													"nodeType": "YulBlock",
													"src": "8735:175:1",
													"statements": [
														{
															"nativeSrc": "8745:26:1",
															"nodeType": "YulAssignment",
															"src": "8745:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8757:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8757:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8768:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8768:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8753:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8753:3:1"
																},
																"nativeSrc": "8753:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8753:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8745:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8745:4:1"
																}
															]
														},
														{
															"nativeSrc": "8780:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8780:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8798:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8798:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8803:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8803:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8794:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8794:3:1"
																		},
																		"nativeSrc": "8794:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8794:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8790:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8790:3:1"
																},
																"nativeSrc": "8790:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8790:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8784:2:1",
																	"nodeType": "YulTypedName",
																	"src": "8784:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8825:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8825:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8840:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8840:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8848:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8848:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8836:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8836:3:1"
																		},
																		"nativeSrc": "8836:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8836:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8818:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:1"
																},
																"nativeSrc": "8818:34:1",
																"nodeType": "YulFunctionCall",
																"src": "8818:34:1"
															},
															"nativeSrc": "8818:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "8818:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8872:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8872:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8883:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8883:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8868:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8868:3:1"
																		},
																		"nativeSrc": "8868:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8868:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8892:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8892:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8900:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8900:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8888:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8888:3:1"
																		},
																		"nativeSrc": "8888:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8888:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8861:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8861:6:1"
																},
																"nativeSrc": "8861:43:1",
																"nodeType": "YulFunctionCall",
																"src": "8861:43:1"
															},
															"nativeSrc": "8861:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "8861:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "8606:304:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8696:9:1",
														"nodeType": "YulTypedName",
														"src": "8696:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8707:6:1",
														"nodeType": "YulTypedName",
														"src": "8707:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8715:6:1",
														"nodeType": "YulTypedName",
														"src": "8715:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8726:4:1",
														"nodeType": "YulTypedName",
														"src": "8726:4:1",
														"type": ""
													}
												],
												"src": "8606:304:1"
											},
											{
												"body": {
													"nativeSrc": "9044:119:1",
													"nodeType": "YulBlock",
													"src": "9044:119:1",
													"statements": [
														{
															"nativeSrc": "9054:26:1",
															"nodeType": "YulAssignment",
															"src": "9054:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9066:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9066:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9077:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9062:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9062:3:1"
																},
																"nativeSrc": "9062:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9062:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9054:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9054:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9096:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9096:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9107:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9107:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9089:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:1"
																},
																"nativeSrc": "9089:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9089:25:1"
															},
															"nativeSrc": "9089:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "9089:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9134:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9134:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9145:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9145:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9130:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9130:3:1"
																		},
																		"nativeSrc": "9130:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9130:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9150:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9150:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9123:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:1"
																},
																"nativeSrc": "9123:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9123:34:1"
															},
															"nativeSrc": "9123:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9123:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8915:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9005:9:1",
														"nodeType": "YulTypedName",
														"src": "9005:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9016:6:1",
														"nodeType": "YulTypedName",
														"src": "9016:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9024:6:1",
														"nodeType": "YulTypedName",
														"src": "9024:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9035:4:1",
														"nodeType": "YulTypedName",
														"src": "9035:4:1",
														"type": ""
													}
												],
												"src": "8915:248:1"
											},
											{
												"body": {
													"nativeSrc": "9200:95:1",
													"nodeType": "YulBlock",
													"src": "9200:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9217:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9217:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9224:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9224:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9229:10:1",
																				"nodeType": "YulLiteral",
																				"src": "9229:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9220:3:1"
																		},
																		"nativeSrc": "9220:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9210:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9210:6:1"
																},
																"nativeSrc": "9210:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9210:31:1"
															},
															"nativeSrc": "9210:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9210:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9257:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9257:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9260:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9260:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9250:6:1"
																},
																"nativeSrc": "9250:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9250:15:1"
															},
															"nativeSrc": "9250:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9250:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9281:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9281:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9284:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9284:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9274:6:1"
																},
																"nativeSrc": "9274:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9274:15:1"
															},
															"nativeSrc": "9274:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9274:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9168:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9168:127:1"
											},
											{
												"body": {
													"nativeSrc": "9401:102:1",
													"nodeType": "YulBlock",
													"src": "9401:102:1",
													"statements": [
														{
															"nativeSrc": "9411:26:1",
															"nodeType": "YulAssignment",
															"src": "9411:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9423:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9423:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9434:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9434:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9419:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9419:3:1"
																},
																"nativeSrc": "9419:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9419:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9411:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9411:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9453:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9453:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9468:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9468:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9484:3:1",
																								"nodeType": "YulLiteral",
																								"src": "9484:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9489:1:1",
																								"nodeType": "YulLiteral",
																								"src": "9489:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9480:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9480:3:1"
																						},
																						"nativeSrc": "9480:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9480:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9493:1:1",
																						"nodeType": "YulLiteral",
																						"src": "9493:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9476:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9476:3:1"
																				},
																				"nativeSrc": "9476:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9476:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:1"
																		},
																		"nativeSrc": "9464:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9464:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9446:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9446:6:1"
																},
																"nativeSrc": "9446:51:1",
																"nodeType": "YulFunctionCall",
																"src": "9446:51:1"
															},
															"nativeSrc": "9446:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "9446:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9300:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9370:9:1",
														"nodeType": "YulTypedName",
														"src": "9370:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9381:6:1",
														"nodeType": "YulTypedName",
														"src": "9381:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9392:4:1",
														"nodeType": "YulTypedName",
														"src": "9392:4:1",
														"type": ""
													}
												],
												"src": "9300:203:1"
											},
											{
												"body": {
													"nativeSrc": "9693:232:1",
													"nodeType": "YulBlock",
													"src": "9693:232:1",
													"statements": [
														{
															"nativeSrc": "9703:27:1",
															"nodeType": "YulAssignment",
															"src": "9703:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9715:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9715:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9726:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9726:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9711:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9711:3:1"
																},
																"nativeSrc": "9711:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9711:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9703:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9703:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9746:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9746:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9761:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9761:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9777:3:1",
																								"nodeType": "YulLiteral",
																								"src": "9777:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9782:1:1",
																								"nodeType": "YulLiteral",
																								"src": "9782:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9773:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9773:3:1"
																						},
																						"nativeSrc": "9773:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9773:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9786:1:1",
																						"nodeType": "YulLiteral",
																						"src": "9786:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9769:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9769:3:1"
																				},
																				"nativeSrc": "9769:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9769:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9757:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:1"
																		},
																		"nativeSrc": "9757:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9757:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9739:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9739:6:1"
																},
																"nativeSrc": "9739:51:1",
																"nodeType": "YulFunctionCall",
																"src": "9739:51:1"
															},
															"nativeSrc": "9739:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "9739:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9810:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9810:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9821:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9821:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9806:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9806:3:1"
																		},
																		"nativeSrc": "9806:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9806:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9826:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9826:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9799:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9799:6:1"
																},
																"nativeSrc": "9799:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9799:34:1"
															},
															"nativeSrc": "9799:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9799:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9853:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9864:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9864:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9849:3:1"
																		},
																		"nativeSrc": "9849:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9849:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9869:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9869:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9842:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9842:6:1"
																},
																"nativeSrc": "9842:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9842:34:1"
															},
															"nativeSrc": "9842:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9842:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9896:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9896:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9907:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9907:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9892:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:1"
																		},
																		"nativeSrc": "9892:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9912:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9912:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9885:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9885:6:1"
																},
																"nativeSrc": "9885:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9885:34:1"
															},
															"nativeSrc": "9885:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9885:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9508:417:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9638:9:1",
														"nodeType": "YulTypedName",
														"src": "9638:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9649:6:1",
														"nodeType": "YulTypedName",
														"src": "9649:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9657:6:1",
														"nodeType": "YulTypedName",
														"src": "9657:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9665:6:1",
														"nodeType": "YulTypedName",
														"src": "9665:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9673:6:1",
														"nodeType": "YulTypedName",
														"src": "9673:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9684:4:1",
														"nodeType": "YulTypedName",
														"src": "9684:4:1",
														"type": ""
													}
												],
												"src": "9508:417:1"
											},
											{
												"body": {
													"nativeSrc": "9978:174:1",
													"nodeType": "YulBlock",
													"src": "9978:174:1",
													"statements": [
														{
															"nativeSrc": "9988:16:1",
															"nodeType": "YulAssignment",
															"src": "9988:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9999:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10002:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10002:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9995:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9995:3:1"
																},
																"nativeSrc": "9995:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9995:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9988:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9988:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10035:111:1",
																"nodeType": "YulBlock",
																"src": "10035:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10056:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10056:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10063:3:1",
																							"nodeType": "YulLiteral",
																							"src": "10063:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10068:10:1",
																							"nodeType": "YulLiteral",
																							"src": "10068:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10059:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "10059:3:1"
																					},
																					"nativeSrc": "10059:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10059:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10049:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10049:6:1"
																			},
																			"nativeSrc": "10049:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10049:31:1"
																		},
																		"nativeSrc": "10049:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10049:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10100:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10100:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10103:4:1",
																					"nodeType": "YulLiteral",
																					"src": "10103:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10093:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10093:6:1"
																			},
																			"nativeSrc": "10093:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10093:15:1"
																		},
																		"nativeSrc": "10093:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10093:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10128:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10128:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10131:4:1",
																					"nodeType": "YulLiteral",
																					"src": "10131:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10121:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10121:6:1"
																			},
																			"nativeSrc": "10121:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10121:15:1"
																		},
																		"nativeSrc": "10121:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10121:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10019:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10019:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10022:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10022:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10016:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10016:2:1"
																},
																"nativeSrc": "10016:10:1",
																"nodeType": "YulFunctionCall",
																"src": "10016:10:1"
															},
															"nativeSrc": "10013:133:1",
															"nodeType": "YulIf",
															"src": "10013:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9930:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9961:1:1",
														"nodeType": "YulTypedName",
														"src": "9961:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9964:1:1",
														"nodeType": "YulTypedName",
														"src": "9964:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9970:3:1",
														"nodeType": "YulTypedName",
														"src": "9970:3:1",
														"type": ""
													}
												],
												"src": "9930:222:1"
											},
											{
												"body": {
													"nativeSrc": "10386:236:1",
													"nodeType": "YulBlock",
													"src": "10386:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10403:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10403:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10414:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10396:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10396:6:1"
																},
																"nativeSrc": "10396:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10396:21:1"
															},
															"nativeSrc": "10396:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10396:21:1"
														},
														{
															"nativeSrc": "10426:70:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10426:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10469:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10469:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10481:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10481:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10492:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10492:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10477:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10477:3:1"
																		},
																		"nativeSrc": "10477:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10477:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "10440:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "10440:28:1"
																},
																"nativeSrc": "10440:56:1",
																"nodeType": "YulFunctionCall",
																"src": "10440:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "10430:6:1",
																	"nodeType": "YulTypedName",
																	"src": "10430:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10516:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10516:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10527:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10527:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10512:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10512:3:1"
																		},
																		"nativeSrc": "10512:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10512:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "10536:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10536:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10532:3:1"
																		},
																		"nativeSrc": "10532:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10532:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10505:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10505:6:1"
																},
																"nativeSrc": "10505:50:1",
																"nodeType": "YulFunctionCall",
																"src": "10505:50:1"
															},
															"nativeSrc": "10505:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "10505:50:1"
														},
														{
															"nativeSrc": "10564:52:1",
															"nodeType": "YulAssignment",
															"src": "10564:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10601:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10601:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "10609:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10609:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "10572:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "10572:28:1"
																},
																"nativeSrc": "10572:44:1",
																"nodeType": "YulFunctionCall",
																"src": "10572:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10564:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10564:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "10157:465:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10347:9:1",
														"nodeType": "YulTypedName",
														"src": "10347:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10358:6:1",
														"nodeType": "YulTypedName",
														"src": "10358:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10366:6:1",
														"nodeType": "YulTypedName",
														"src": "10366:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10377:4:1",
														"nodeType": "YulTypedName",
														"src": "10377:4:1",
														"type": ""
													}
												],
												"src": "10157:465:1"
											},
											{
												"body": {
													"nativeSrc": "10858:330:1",
													"nodeType": "YulBlock",
													"src": "10858:330:1",
													"statements": [
														{
															"nativeSrc": "10868:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10868:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10886:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10886:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10891:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10891:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10882:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10882:3:1"
																		},
																		"nativeSrc": "10882:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10882:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10895:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10895:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10878:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10878:3:1"
																},
																"nativeSrc": "10878:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10878:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10872:2:1",
																	"nodeType": "YulTypedName",
																	"src": "10872:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10913:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10913:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10928:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10928:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10936:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10936:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10924:3:1"
																		},
																		"nativeSrc": "10924:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10924:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10906:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10906:6:1"
																},
																"nativeSrc": "10906:34:1",
																"nodeType": "YulFunctionCall",
																"src": "10906:34:1"
															},
															"nativeSrc": "10906:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "10906:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10960:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10960:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10971:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10971:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10956:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10956:3:1"
																		},
																		"nativeSrc": "10956:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10956:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10980:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10988:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10988:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10976:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10976:3:1"
																		},
																		"nativeSrc": "10976:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10976:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10949:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10949:6:1"
																},
																"nativeSrc": "10949:43:1",
																"nodeType": "YulFunctionCall",
																"src": "10949:43:1"
															},
															"nativeSrc": "10949:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "10949:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11012:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11012:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11023:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11023:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11008:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11008:3:1"
																		},
																		"nativeSrc": "11008:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11008:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11028:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11028:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11001:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11001:6:1"
																},
																"nativeSrc": "11001:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11001:34:1"
															},
															"nativeSrc": "11001:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11001:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11055:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11055:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11066:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11066:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11051:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11051:3:1"
																		},
																		"nativeSrc": "11051:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11051:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11071:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11071:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11044:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11044:6:1"
																},
																"nativeSrc": "11044:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11044:34:1"
															},
															"nativeSrc": "11044:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11044:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11109:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11109:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11094:3:1"
																		},
																		"nativeSrc": "11094:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11094:19:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11115:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11115:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11087:6:1"
																},
																"nativeSrc": "11087:32:1",
																"nodeType": "YulFunctionCall",
																"src": "11087:32:1"
															},
															"nativeSrc": "11087:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "11087:32:1"
														},
														{
															"nativeSrc": "11128:54:1",
															"nodeType": "YulAssignment",
															"src": "11128:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11154:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11154:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11166:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11166:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11177:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11177:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11162:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11162:3:1"
																		},
																		"nativeSrc": "11162:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11162:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11136:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11136:17:1"
																},
																"nativeSrc": "11136:46:1",
																"nodeType": "YulFunctionCall",
																"src": "11136:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11128:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11128:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10627:561:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10795:9:1",
														"nodeType": "YulTypedName",
														"src": "10795:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10806:6:1",
														"nodeType": "YulTypedName",
														"src": "10806:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10814:6:1",
														"nodeType": "YulTypedName",
														"src": "10814:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10822:6:1",
														"nodeType": "YulTypedName",
														"src": "10822:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10830:6:1",
														"nodeType": "YulTypedName",
														"src": "10830:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10838:6:1",
														"nodeType": "YulTypedName",
														"src": "10838:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10849:4:1",
														"nodeType": "YulTypedName",
														"src": "10849:4:1",
														"type": ""
													}
												],
												"src": "10627:561:1"
											},
											{
												"body": {
													"nativeSrc": "11273:169:1",
													"nodeType": "YulBlock",
													"src": "11273:169:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11319:16:1",
																"nodeType": "YulBlock",
																"src": "11319:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11328:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11328:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11331:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11331:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11321:6:1"
																			},
																			"nativeSrc": "11321:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11321:12:1"
																		},
																		"nativeSrc": "11321:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11321:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11294:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11294:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11303:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11303:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11290:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:1"
																		},
																		"nativeSrc": "11290:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11290:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11315:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11315:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11286:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11286:3:1"
																},
																"nativeSrc": "11286:32:1",
																"nodeType": "YulFunctionCall",
																"src": "11286:32:1"
															},
															"nativeSrc": "11283:52:1",
															"nodeType": "YulIf",
															"src": "11283:52:1"
														},
														{
															"nativeSrc": "11344:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11344:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11363:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11363:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11357:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11357:5:1"
																},
																"nativeSrc": "11357:16:1",
																"nodeType": "YulFunctionCall",
																"src": "11357:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11348:5:1",
																	"nodeType": "YulTypedName",
																	"src": "11348:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11406:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11406:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "11382:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "11382:23:1"
																},
																"nativeSrc": "11382:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11382:30:1"
															},
															"nativeSrc": "11382:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11382:30:1"
														},
														{
															"nativeSrc": "11421:15:1",
															"nodeType": "YulAssignment",
															"src": "11421:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "11431:5:1",
																"nodeType": "YulIdentifier",
																"src": "11431:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11421:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11421:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "11193:249:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11239:9:1",
														"nodeType": "YulTypedName",
														"src": "11239:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11250:7:1",
														"nodeType": "YulTypedName",
														"src": "11250:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11262:6:1",
														"nodeType": "YulTypedName",
														"src": "11262:6:1",
														"type": ""
													}
												],
												"src": "11193:249:1"
											},
											{
												"body": {
													"nativeSrc": "11778:496:1",
													"nodeType": "YulBlock",
													"src": "11778:496:1",
													"statements": [
														{
															"nativeSrc": "11788:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11788:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11806:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11806:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11811:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11811:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11802:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11802:3:1"
																		},
																		"nativeSrc": "11802:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11802:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11815:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11815:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11798:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11798:3:1"
																},
																"nativeSrc": "11798:19:1",
																"nodeType": "YulFunctionCall",
																"src": "11798:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11792:2:1",
																	"nodeType": "YulTypedName",
																	"src": "11792:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11833:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11833:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11848:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11848:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11856:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "11856:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11844:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11844:3:1"
																		},
																		"nativeSrc": "11844:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11844:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11826:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11826:6:1"
																},
																"nativeSrc": "11826:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11826:34:1"
															},
															"nativeSrc": "11826:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11826:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11880:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11880:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11891:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11891:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11876:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11876:3:1"
																		},
																		"nativeSrc": "11876:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11876:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11900:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11900:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11908:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "11908:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11896:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11896:3:1"
																		},
																		"nativeSrc": "11896:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11896:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11869:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11869:6:1"
																},
																"nativeSrc": "11869:43:1",
																"nodeType": "YulFunctionCall",
																"src": "11869:43:1"
															},
															"nativeSrc": "11869:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "11869:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11932:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11932:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11943:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11943:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11928:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11928:3:1"
																		},
																		"nativeSrc": "11928:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11928:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11948:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11948:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11921:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11921:6:1"
																},
																"nativeSrc": "11921:31:1",
																"nodeType": "YulFunctionCall",
																"src": "11921:31:1"
															},
															"nativeSrc": "11921:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "11921:31:1"
														},
														{
															"nativeSrc": "11961:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11961:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12004:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12004:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12016:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12016:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12027:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12027:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12012:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12012:3:1"
																		},
																		"nativeSrc": "12012:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12012:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "11975:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "11975:28:1"
																},
																"nativeSrc": "11975:57:1",
																"nodeType": "YulFunctionCall",
																"src": "11975:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "11965:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11965:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12052:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12052:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12063:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12063:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12048:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12048:3:1"
																		},
																		"nativeSrc": "12048:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12048:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "12072:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12072:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12080:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12080:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12068:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12068:3:1"
																		},
																		"nativeSrc": "12068:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12068:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12041:6:1"
																},
																"nativeSrc": "12041:50:1",
																"nodeType": "YulFunctionCall",
																"src": "12041:50:1"
															},
															"nativeSrc": "12041:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "12041:50:1"
														},
														{
															"nativeSrc": "12100:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12100:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12143:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12143:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "12151:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12151:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "12114:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "12114:28:1"
																},
																"nativeSrc": "12114:44:1",
																"nodeType": "YulFunctionCall",
																"src": "12114:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "12104:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12104:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12178:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12178:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12189:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12189:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12174:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12174:3:1"
																		},
																		"nativeSrc": "12174:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "12199:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12199:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12207:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12207:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12195:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12195:3:1"
																		},
																		"nativeSrc": "12195:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12195:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12167:6:1"
																},
																"nativeSrc": "12167:51:1",
																"nodeType": "YulFunctionCall",
																"src": "12167:51:1"
															},
															"nativeSrc": "12167:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "12167:51:1"
														},
														{
															"nativeSrc": "12227:41:1",
															"nodeType": "YulAssignment",
															"src": "12227:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "12253:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12253:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nativeSrc": "12261:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12261:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "12235:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12235:17:1"
																},
																"nativeSrc": "12235:33:1",
																"nodeType": "YulFunctionCall",
																"src": "12235:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12227:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12227:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11447:827:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11715:9:1",
														"nodeType": "YulTypedName",
														"src": "11715:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11726:6:1",
														"nodeType": "YulTypedName",
														"src": "11726:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11734:6:1",
														"nodeType": "YulTypedName",
														"src": "11734:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11742:6:1",
														"nodeType": "YulTypedName",
														"src": "11742:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11750:6:1",
														"nodeType": "YulTypedName",
														"src": "11750:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11758:6:1",
														"nodeType": "YulTypedName",
														"src": "11758:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11769:4:1",
														"nodeType": "YulTypedName",
														"src": "11769:4:1",
														"type": ""
													}
												],
												"src": "11447:827:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d6146101155780634e1273f414610128578063a22cb46514610148578063e985e9c51461015b578063f242432a1461016e57600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100e0578063156e29f614610100575b600080fd5b6100aa6100a5366004610b05565b610181565b6040519081526020015b60405180910390f35b6100d06100cb366004610b48565b6101a9565b60405190151581526020016100b4565b6100f36100ee366004610b6c565b6101f9565b6040516100b49190610bcb565b61011361010e366004610bde565b61028d565b005b610113610123366004610d5b565b6102b8565b61013b610136366004610e05565b610324565b6040516100b49190610f01565b610113610156366004610f14565b6103f1565b6100d0610169366004610f50565b610400565b61011361017c366004610f83565b61042e565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806101da57506001600160e01b031982166303a24d0760e21b145b806101a357506301ffc9a760e01b6001600160e01b03198316146101a3565b60606002805461020890610fe8565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610fe8565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b50505050509050919050565b6102b383838360405180604001604052806002815260200161060f60f31b81525061048d565b505050565b336001600160a01b03861681148015906102d957506102d78682610400565b155b1561030f5760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b61031c86868686866104ea565b505050505050565b606081518351146103555781518351604051635b05999160e01b815260048101929092526024820152604401610306565b6000835167ffffffffffffffff81111561037157610371610c11565b60405190808252806020026020018201604052801561039a578160200160208202803683370190505b50905060005b84518110156103e9576020808202860101516103c490602080840287010151610181565b8282815181106103d6576103d6611022565b60209081029190910101526001016103a0565b509392505050565b6103fc338383610551565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b038616811480159061044f575061044d8682610400565b155b156104805760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610306565b61031c86868686866105e7565b6001600160a01b0384166104b757604051632bfa23e760e11b815260006004820152602401610306565b6040805160018082526020820186905281830190815260608201859052608082019092529061031c600087848487610675565b6001600160a01b03841661051457604051632bfa23e760e11b815260006004820152602401610306565b6001600160a01b03851661053d57604051626a0d4560e21b815260006004820152602401610306565b61054a8585858585610675565b5050505050565b6001600160a01b03821661057a5760405162ced3e160e81b815260006004820152602401610306565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661061157604051632bfa23e760e11b815260006004820152602401610306565b6001600160a01b03851661063a57604051626a0d4560e21b815260006004820152602401610306565b6040805160018082526020820186905281830190815260608201859052608082019092529061066c8787848487610675565b50505050505050565b610681858585856106c8565b6001600160a01b0384161561054a57825133906001036106ba57602084810151908401516106b38389898585896108dc565b505061031c565b61031c818787878787610a00565b80518251146106f75781518151604051635b05999160e01b815260048101929092526024820152604401610306565b3360005b83518110156107fd576020818102858101820151908501909101516001600160a01b038816156107ae576000828152602081815260408083206001600160a01b038c16845290915290205481811015610787576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610306565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156107f3576000828152602081815260408083206001600160a01b038b168452909152812080548392906107ed908490611038565b90915550505b50506001016106fb565b50825160010361087e5760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161086f929190918252602082015260400190565b60405180910390a4505061054a565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516108cd929190611059565b60405180910390a45050505050565b6001600160a01b0384163b1561031c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906109209089908990889088908890600401611087565b6020604051808303816000875af192505050801561095b575060408051601f3d908101601f19168201909252610958918101906110cc565b60015b6109c4573d808015610989576040519150601f19603f3d011682016040523d82523d6000602084013e61098e565b606091505b5080516000036109bc57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610306565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461066c57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610306565b6001600160a01b0384163b1561031c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a4490899089908890889088906004016110e9565b6020604051808303816000875af1925050508015610a7f575060408051601f3d908101601f19168201909252610a7c918101906110cc565b60015b610aad573d808015610989576040519150601f19603f3d011682016040523d82523d6000602084013e61098e565b6001600160e01b0319811663bc197c8160e01b1461066c57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610306565b80356001600160a01b0381168114610b0057600080fd5b919050565b60008060408385031215610b1857600080fd5b610b2183610ae9565b946020939093013593505050565b6001600160e01b031981168114610b4557600080fd5b50565b600060208284031215610b5a57600080fd5b8135610b6581610b2f565b9392505050565b600060208284031215610b7e57600080fd5b5035919050565b6000815180845260005b81811015610bab57602081850181015186830182015201610b8f565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610b656020830184610b85565b600080600060608486031215610bf357600080fd5b610bfc84610ae9565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c5057610c50610c11565b604052919050565b600067ffffffffffffffff821115610c7257610c72610c11565b5060051b60200190565b600082601f830112610c8d57600080fd5b81356020610ca2610c9d83610c58565b610c27565b8083825260208201915060208460051b870101935086841115610cc457600080fd5b602086015b84811015610ce05780358352918301918301610cc9565b509695505050505050565b600082601f830112610cfc57600080fd5b813567ffffffffffffffff811115610d1657610d16610c11565b610d29601f8201601f1916602001610c27565b818152846020838601011115610d3e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d7357600080fd5b610d7c86610ae9565b9450610d8a60208701610ae9565b9350604086013567ffffffffffffffff80821115610da757600080fd5b610db389838a01610c7c565b94506060880135915080821115610dc957600080fd5b610dd589838a01610c7c565b93506080880135915080821115610deb57600080fd5b50610df888828901610ceb565b9150509295509295909350565b60008060408385031215610e1857600080fd5b823567ffffffffffffffff80821115610e3057600080fd5b818501915085601f830112610e4457600080fd5b81356020610e54610c9d83610c58565b82815260059290921b84018101918181019089841115610e7357600080fd5b948201945b83861015610e9857610e8986610ae9565b82529482019490820190610e78565b96505086013592505080821115610eae57600080fd5b50610ebb85828601610c7c565b9150509250929050565b60008151808452602080850194506020840160005b83811015610ef657815187529582019590820190600101610eda565b509495945050505050565b602081526000610b656020830184610ec5565b60008060408385031215610f2757600080fd5b610f3083610ae9565b915060208301358015158114610f4557600080fd5b809150509250929050565b60008060408385031215610f6357600080fd5b610f6c83610ae9565b9150610f7a60208401610ae9565b90509250929050565b600080600080600060a08688031215610f9b57600080fd5b610fa486610ae9565b9450610fb260208701610ae9565b93506040860135925060608601359150608086013567ffffffffffffffff811115610fdc57600080fd5b610df888828901610ceb565b600181811c90821680610ffc57607f821691505b60208210810361101c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156101a357634e487b7160e01b600052601160045260246000fd5b60408152600061106c6040830185610ec5565b828103602084015261107e8185610ec5565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110c190830184610b85565b979650505050505050565b6000602082840312156110de57600080fd5b8151610b6581610b2f565b6001600160a01b0386811682528516602082015260a06040820181905260009061111590830186610ec5565b82810360608401526111278186610ec5565b9050828103608084015261113b8185610b85565b9897505050505050505056fea26469706673582212208ac2e9740ba79611762983bff00f7a7c2c6fbb661512908a54df62f39b37d73e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x1DA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1A3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x208 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x234 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x281 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x256 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x281 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x264 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x60F PUSH1 0xF3 SHL DUP2 MSTORE POP PUSH2 0x48D JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2D9 JUMPI POP PUSH2 0x2D7 DUP7 DUP3 PUSH2 0x400 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31C DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4EA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x355 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371 JUMPI PUSH2 0x371 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x3C4 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x181 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D6 JUMPI PUSH2 0x3D6 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3FC CALLER DUP4 DUP4 PUSH2 0x551 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x44F JUMPI POP PUSH2 0x44D DUP7 DUP3 PUSH2 0x400 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x306 JUMP JUMPDEST PUSH2 0x31C DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x31C PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH2 0x54A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x675 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x66C DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x675 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x681 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x54A JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x6BA JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x6B3 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x8DC JUMP JUMPDEST POP POP PUSH2 0x31C JUMP JUMPDEST PUSH2 0x31C DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA00 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x6F7 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x306 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7ED SWAP1 DUP5 SWAP1 PUSH2 0x1038 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x6FB JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x87E JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x86F SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x54A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8CD SWAP3 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x920 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x95B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x958 SWAP2 DUP2 ADD SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9C4 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x98E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA44 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA7F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA7C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAAD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x98E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x306 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB21 DUP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB65 DUP2 PUSH2 0xB2F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB8F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBFC DUP5 PUSH2 0xAE9 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC50 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC72 PUSH2 0xC11 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA2 PUSH2 0xC9D DUP4 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCE0 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCC9 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD16 JUMPI PUSH2 0xD16 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xD29 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xC27 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP7 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 POP PUSH2 0xD8A PUSH1 0x20 DUP8 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB3 DUP10 DUP4 DUP11 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD5 DUP10 DUP4 DUP11 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF8 DUP9 DUP3 DUP10 ADD PUSH2 0xCEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE54 PUSH2 0xC9D DUP4 PUSH2 0xC58 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xE98 JUMPI PUSH2 0xE89 DUP7 PUSH2 0xAE9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE78 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEBB DUP6 DUP3 DUP7 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEDA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB65 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6C DUP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF7A PUSH1 0x20 DUP5 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA4 DUP7 PUSH2 0xAE9 JUMP JUMPDEST SWAP5 POP PUSH2 0xFB2 PUSH1 0x20 DUP8 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF8 DUP9 DUP3 DUP10 ADD PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x101C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x106C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEC5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x107E DUP2 DUP6 PUSH2 0xEC5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10C1 SWAP1 DUP4 ADD DUP5 PUSH2 0xB85 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB65 DUP2 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1115 SWAP1 DUP4 ADD DUP7 PUSH2 0xEC5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1127 DUP2 DUP7 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x113B DUP2 DUP6 PUSH2 0xB85 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xC2 0xE9 PUSH21 0xBA79611762983BFF00F7A7C2C6FBB661512908A54 0xDF PUSH3 0xF39B37 0xD7 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "72476:285:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57734:132;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;57734:132:0;;;;;;;;56867:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;56867:305:0;1019:187:1;57571:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;72652:107::-;;;;;;:::i;:::-;;:::i;:::-;;59501:429;;;;;;:::i;:::-;;:::i;58023:552::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;58643:144::-;;;;;;:::i;:::-;;:::i;58854:157::-;;;;;;:::i;:::-;;:::i;59078:351::-;;;;;;:::i;:::-;;:::i;57734:132::-;57811:7;57837:13;;;;;;;;;;;-1:-1:-1;;;;;57837:22:0;;;;;;;;;;57734:132;;;;;:::o;56867:305::-;56969:4;-1:-1:-1;;;;;;57004:41:0;;-1:-1:-1;;;57004:41:0;;:109;;-1:-1:-1;;;;;;;57061:52:0;;-1:-1:-1;;;57061:52:0;57004:109;:161;;;-1:-1:-1;;;;;;;;;;47735:40:0;;;57129:36;47636:146;57571:103;57631:13;57663:4;57656:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57571:103;;;:::o;72652:107::-;72722:30;72728:3;72733;72738:7;72722:30;;;;;;;;;;;;;-1:-1:-1;;;72722:30:0;;;:5;:30::i;:::-;72652:107;;;:::o;59501:429::-;34750:10;-1:-1:-1;;;;;59738:14:0;;;;;;;:49;;;59757:30;59774:4;59780:6;59757:16;:30::i;:::-;59756:31;59738:49;59734:129;;;59810:42;;-1:-1:-1;;;59810:42:0;;-1:-1:-1;;;;;8836:15:1;;;59810:42:0;;;8818:34:1;8888:15;;8868:18;;;8861:43;8753:18;;59810:42:0;;;;;;;;59734:129;59872:51;59895:4;59901:2;59905:3;59910:6;59918:4;59872:22;:51::i;:::-;59685:245;59501:429;;;;;:::o;58023:552::-;58147:16;58198:3;:10;58179:8;:15;:29;58175:121;;58257:10;;58269:15;;58231:54;;-1:-1:-1;;;58231:54:0;;;;;9089:25:1;;;;9130:18;;;9123:34;9062:18;;58231:54:0;8915:248:1;58175:121:0;58306:30;58353:8;:15;58339:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58339:30:0;;58306:63;;58385:9;58380:158;58404:8;:15;58400:1;:19;58380:158;;;33954:4;33945:14;;;33925:35;;;33919:42;58459:68;;33954:4;33945:14;;;33925:35;;;33919:42;57734:132;:::i;58459:68::-;58440:13;58454:1;58440:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;58421:3;;58380:158;;;-1:-1:-1;58555:13:0;58023:552;-1:-1:-1;;;58023:552:0:o;58643:144::-;58728:52;34750:10;58761:8;58771;58728:18;:52::i;:::-;58643:144;;:::o;58854:157::-;-1:-1:-1;;;;;58967:27:0;;;58944:4;58967:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;58854:157::o;59078:351::-;34750:10;-1:-1:-1;;;;;59244:14:0;;;;;;;:49;;;59263:30;59280:4;59286:6;59263:16;:30::i;:::-;59262:31;59244:49;59240:129;;;59316:42;;-1:-1:-1;;;59316:42:0;;-1:-1:-1;;;;;8836:15:1;;;59316:42:0;;;8818:34:1;8888:15;;8868:18;;;8861:43;8753:18;;59316:42:0;8606:304:1;59240:129:0;59378:44;59396:4;59402:2;59406;59410:5;59417:4;59378:17;:44::i;66233:346::-;-1:-1:-1;;;;;66329:16:0;;66325:88;;66368:34;;-1:-1:-1;;;66368:34:0;;66399:1;66368:34;;;9446:51:1;9419:18;;66368:34:0;9300:203:1;66325:88:0;71861:4;71855:11;;71931:1;71916:17;;;72062:4;72050:17;;72043:35;;;72179:17;;;72209;;;71675:23;72246:17;;72239:35;;;72382:17;;;72369:31;;;71855:11;66511:61;-1:-1:-1;66550:2:0;71855:11;72179:17;66567:4;66511:26;:61::i;64502:445::-;-1:-1:-1;;;;;64695:16:0;;64691:88;;64734:34;;-1:-1:-1;;;64734:34:0;;64765:1;64734:34;;;9446:51:1;9419:18;;64734:34:0;9300:203:1;64691:88:0;-1:-1:-1;;;;;64792:18:0;;64788:88;;64833:32;;-1:-1:-1;;;64833:32:0;;64862:1;64833:32;;;9446:51:1;9419:18;;64833:32:0;9300:203:1;64788:88:0;64885:55;64912:4;64918:2;64922:3;64927:6;64935:4;64885:26;:55::i;:::-;64502:445;;;;;:::o;68755:315::-;-1:-1:-1;;;;;68862:22:0;;68858:94;;68907:34;;-1:-1:-1;;;68907:34:0;;68938:1;68907:34;;;9446:51:1;9419:18;;68907:34:0;9300:203:1;68858:94:0;-1:-1:-1;;;;;68961:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;68961:46:0;;;;;;;;;;69022:41;;1159::1;;;69022::0;;1132:18:1;69022:41:0;;;;;;;68755:315;;;:::o;63638:463::-;-1:-1:-1;;;;;63760:16:0;;63756:88;;63799:34;;-1:-1:-1;;;63799:34:0;;63830:1;63799:34;;;9446:51:1;9419:18;;63799:34:0;9300:203:1;63756:88:0;-1:-1:-1;;;;;63857:18:0;;63853:88;;63898:32;;-1:-1:-1;;;63898:32:0;;63927:1;63898:32;;;9446:51:1;9419:18;;63898:32:0;9300:203:1;63853:88:0;71861:4;71855:11;;71931:1;71916:17;;;72062:4;72050:17;;72043:35;;;72179:17;;;72209;;;71675:23;72246:17;;72239:35;;;72382:17;;;72369:31;;;71855:11;64039:55;64066:4;64072:2;71855:11;72179:17;64089:4;64039:26;:55::i;:::-;63746:355;;63638:463;;;;;:::o;62491:690::-;62692:30;62700:4;62706:2;62710:3;62715:6;62692:7;:30::i;:::-;-1:-1:-1;;;;;62736:16:0;;;62732:443;;62817:10;;34750;;62831:1;62817:15;62813:352;;33954:4;33925:35;;;33919:42;33925:35;;;33919:42;62970:67;63001:8;63011:4;63017:2;33919:42;;63032:4;62970:30;:67::i;:::-;62834:218;;62813:352;;;63076:74;63112:8;63122:4;63128:2;63132:3;63137:6;63145:4;63076:35;:74::i;60631:1281::-;60766:6;:13;60752:3;:10;:27;60748:117;;60828:10;;60840:13;;60802:52;;-1:-1:-1;;;60802:52:0;;;;;9089:25:1;;;;9130:18;;;9123:34;9062:18;;60802:52:0;8915:248:1;60748:117:0;34750:10;60875:16;60917:691;60941:3;:10;60937:1;:14;60917:691;;;33954:4;33945:14;;;33925:35;;;;;33919:42;33925:35;;;;;;33919:42;-1:-1:-1;;;;;61087:18:0;;;61083:420;;61125:19;61147:13;;;;;;;;;;;-1:-1:-1;;;;;61147:19:0;;;;;;;;;;61188;;;61184:129;;;61238:56;;-1:-1:-1;;;61238:56:0;;-1:-1:-1;;;;;9757:32:1;;61238:56:0;;;9739:51:1;9806:18;;;9799:34;;;9849:18;;;9842:34;;;9892:18;;;9885:34;;;9711:19;;61238:56:0;9508:417:1;61184:129:0;61429:9;:13;;;;;;;;;;;-1:-1:-1;;;;;61429:19:0;;;;;;;;;61451;;;;61429:41;;61083:420;-1:-1:-1;;;;;61521:16:0;;;61517:81;;61557:9;:13;;;;;;;;;;;-1:-1:-1;;;;;61557:17:0;;;;;;;;;:26;;61578:5;;61557:9;:26;;61578:5;;61557:26;:::i;:::-;;;;-1:-1:-1;;61517:81:0;-1:-1:-1;;60953:3:0;;60917:691;;;;61622:3;:10;61636:1;61622:15;61618:288;;33954:4;33925:35;;33919:42;61653:10;;33954:4;33925:35;;33919:42;61653:38;;-1:-1:-1;61799:2:0;-1:-1:-1;;;;;61768:45:0;61793:4;-1:-1:-1;;;;;61768:45:0;61783:8;-1:-1:-1;;;;;61768:45:0;;61803:2;61807:5;61768:45;;;;;;9089:25:1;;;9145:2;9130:18;;9123:34;9077:2;9062:18;;8915:248;61768:45:0;;;;;;;;61639:185;;61618:288;;;61879:2;-1:-1:-1;;;;;61849:46:0;61873:4;-1:-1:-1;;;;;61849:46:0;61863:8;-1:-1:-1;;;;;61849:46:0;;61883:3;61888:6;61849:46;;;;;;;:::i;:::-;;;;;;;;60738:1174;60631:1281;;;;:::o;69248:974::-;-1:-1:-1;;;;;69454:14:0;;;:18;69450:766;;69492:71;;-1:-1:-1;;;69492:71:0;;-1:-1:-1;;;;;69492:38:0;;;;;:71;;69531:8;;69541:4;;69547:2;;69551:5;;69558:4;;69492:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;69492:71:0;;;;;;;;-1:-1:-1;;69492:71:0;;;;;;;;;;;;:::i;:::-;;;69488:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;69847:6;:13;69864:1;69847:18;69843:349;;69951:26;;-1:-1:-1;;;69951:26:0;;-1:-1:-1;;;;;9464:32:1;;69951:26:0;;;9446:51:1;9419:18;;69951:26:0;9300:203:1;69843:349:0;70144:6;70138:13;70129:6;70125:2;70121:15;70114:38;69488:718;-1:-1:-1;;;;;;69612:55:0;;-1:-1:-1;;;69612:55:0;69608:174;;69737:26;;-1:-1:-1;;;69737:26:0;;-1:-1:-1;;;;;9464:32:1;;69737:26:0;;;9446:51:1;9419:18;;69737:26:0;9300:203:1;70410:1041:0;-1:-1:-1;;;;;70641:14:0;;;:18;70637:808;;70679:78;;-1:-1:-1;;;70679:78:0;;-1:-1:-1;;;;;70679:43:0;;;;;:78;;70723:8;;70733:4;;70739:3;;70744:6;;70752:4;;70679:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;70679:78:0;;;;;;;;-1:-1:-1;;70679:78:0;;;;;;;;;;;;:::i;:::-;;;70675:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;70836:60:0;;-1:-1:-1;;;70836:60:0;70832:179;;70966:26;;-1:-1:-1;;;70966:26:0;;-1:-1:-1;;;;;9464:32:1;;70966:26:0;;;9446:51:1;9419:18;;70966:26:0;9300:203:1;14:173;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:1:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:322::-;2126:6;2134;2142;2195:2;2183:9;2174:7;2170:23;2166:32;2163:52;;;2211:1;2208;2201:12;2163:52;2234:29;2253:9;2234:29;:::i;:::-;2224:39;2310:2;2295:18;;2282:32;;-1:-1:-1;2361:2:1;2346:18;;;2333:32;;2049:322;-1:-1:-1;;;2049:322:1:o;2376:127::-;2437:10;2432:3;2428:20;2425:1;2418:31;2468:4;2465:1;2458:15;2492:4;2489:1;2482:15;2508:275;2579:2;2573:9;2644:2;2625:13;;-1:-1:-1;;2621:27:1;2609:40;;2679:18;2664:34;;2700:22;;;2661:62;2658:88;;;2726:18;;:::i;:::-;2762:2;2755:22;2508:275;;-1:-1:-1;2508:275:1:o;2788:183::-;2848:4;2881:18;2873:6;2870:30;2867:56;;;2903:18;;:::i;:::-;-1:-1:-1;2948:1:1;2944:14;2960:4;2940:25;;2788:183::o;2976:668::-;3030:5;3083:3;3076:4;3068:6;3064:17;3060:27;3050:55;;3101:1;3098;3091:12;3050:55;3137:6;3124:20;3163:4;3187:60;3203:43;3243:2;3203:43;:::i;:::-;3187:60;:::i;:::-;3269:3;3293:2;3288:3;3281:15;3321:4;3316:3;3312:14;3305:21;;3378:4;3372:2;3369:1;3365:10;3357:6;3353:23;3349:34;3335:48;;3406:3;3398:6;3395:15;3392:35;;;3423:1;3420;3413:12;3392:35;3459:4;3451:6;3447:17;3473:142;3489:6;3484:3;3481:15;3473:142;;;3555:17;;3543:30;;3593:12;;;;3506;;3473:142;;;-1:-1:-1;3633:5:1;2976:668;-1:-1:-1;;;;;;2976:668:1:o;3649:530::-;3691:5;3744:3;3737:4;3729:6;3725:17;3721:27;3711:55;;3762:1;3759;3752:12;3711:55;3798:6;3785:20;3824:18;3820:2;3817:26;3814:52;;;3846:18;;:::i;:::-;3890:55;3933:2;3914:13;;-1:-1:-1;;3910:27:1;3939:4;3906:38;3890:55;:::i;:::-;3970:2;3961:7;3954:19;4016:3;4009:4;4004:2;3996:6;3992:15;3988:26;3985:35;3982:55;;;4033:1;4030;4023:12;3982:55;4098:2;4091:4;4083:6;4079:17;4072:4;4063:7;4059:18;4046:55;4146:1;4121:16;;;4139:4;4117:27;4110:38;;;;4125:7;3649:530;-1:-1:-1;;;3649:530:1:o;4184:943::-;4338:6;4346;4354;4362;4370;4423:3;4411:9;4402:7;4398:23;4394:33;4391:53;;;4440:1;4437;4430:12;4391:53;4463:29;4482:9;4463:29;:::i;:::-;4453:39;;4511:38;4545:2;4534:9;4530:18;4511:38;:::i;:::-;4501:48;;4600:2;4589:9;4585:18;4572:32;4623:18;4664:2;4656:6;4653:14;4650:34;;;4680:1;4677;4670:12;4650:34;4703:61;4756:7;4747:6;4736:9;4732:22;4703:61;:::i;:::-;4693:71;;4817:2;4806:9;4802:18;4789:32;4773:48;;4846:2;4836:8;4833:16;4830:36;;;4862:1;4859;4852:12;4830:36;4885:63;4940:7;4929:8;4918:9;4914:24;4885:63;:::i;:::-;4875:73;;5001:3;4990:9;4986:19;4973:33;4957:49;;5031:2;5021:8;5018:16;5015:36;;;5047:1;5044;5037:12;5015:36;;5070:51;5113:7;5102:8;5091:9;5087:24;5070:51;:::i;:::-;5060:61;;;4184:943;;;;;;;;:::o;5132:1146::-;5250:6;5258;5311:2;5299:9;5290:7;5286:23;5282:32;5279:52;;;5327:1;5324;5317:12;5279:52;5367:9;5354:23;5396:18;5437:2;5429:6;5426:14;5423:34;;;5453:1;5450;5443:12;5423:34;5491:6;5480:9;5476:22;5466:32;;5536:7;5529:4;5525:2;5521:13;5517:27;5507:55;;5558:1;5555;5548:12;5507:55;5594:2;5581:16;5616:4;5640:60;5656:43;5696:2;5656:43;:::i;5640:60::-;5734:15;;;5816:1;5812:10;;;;5804:19;;5800:28;;;5765:12;;;;5840:19;;;5837:39;;;5872:1;5869;5862:12;5837:39;5896:11;;;;5916:148;5932:6;5927:3;5924:15;5916:148;;;5998:23;6017:3;5998:23;:::i;:::-;5986:36;;5949:12;;;;6042;;;;5916:148;;;6083:5;-1:-1:-1;;6126:18:1;;6113:32;;-1:-1:-1;;6157:16:1;;;6154:36;;;6186:1;6183;6176:12;6154:36;;6209:63;6264:7;6253:8;6242:9;6238:24;6209:63;:::i;:::-;6199:73;;;5132:1146;;;;;:::o;6283:439::-;6336:3;6374:5;6368:12;6401:6;6396:3;6389:19;6427:4;6456;6451:3;6447:14;6440:21;;6495:4;6488:5;6484:16;6518:1;6528:169;6542:6;6539:1;6536:13;6528:169;;;6603:13;;6591:26;;6637:12;;;;6672:15;;;;6564:1;6557:9;6528:169;;;-1:-1:-1;6713:3:1;;6283:439;-1:-1:-1;;;;;6283:439:1:o;6727:261::-;6906:2;6895:9;6888:21;6869:4;6926:56;6978:2;6967:9;6963:18;6955:6;6926:56;:::i;6993:347::-;7058:6;7066;7119:2;7107:9;7098:7;7094:23;7090:32;7087:52;;;7135:1;7132;7125:12;7087:52;7158:29;7177:9;7158:29;:::i;:::-;7148:39;;7237:2;7226:9;7222:18;7209:32;7284:5;7277:13;7270:21;7263:5;7260:32;7250:60;;7306:1;7303;7296:12;7250:60;7329:5;7319:15;;;6993:347;;;;;:::o;7345:260::-;7413:6;7421;7474:2;7462:9;7453:7;7449:23;7445:32;7442:52;;;7490:1;7487;7480:12;7442:52;7513:29;7532:9;7513:29;:::i;:::-;7503:39;;7561:38;7595:2;7584:9;7580:18;7561:38;:::i;:::-;7551:48;;7345:260;;;;;:::o;7610:606::-;7714:6;7722;7730;7738;7746;7799:3;7787:9;7778:7;7774:23;7770:33;7767:53;;;7816:1;7813;7806:12;7767:53;7839:29;7858:9;7839:29;:::i;:::-;7829:39;;7887:38;7921:2;7910:9;7906:18;7887:38;:::i;:::-;7877:48;;7972:2;7961:9;7957:18;7944:32;7934:42;;8023:2;8012:9;8008:18;7995:32;7985:42;;8078:3;8067:9;8063:19;8050:33;8106:18;8098:6;8095:30;8092:50;;;8138:1;8135;8128:12;8092:50;8161:49;8202:7;8193:6;8182:9;8178:22;8161:49;:::i;8221:380::-;8300:1;8296:12;;;;8343;;;8364:61;;8418:4;8410:6;8406:17;8396:27;;8364:61;8471:2;8463:6;8460:14;8440:18;8437:38;8434:161;;8517:10;8512:3;8508:20;8505:1;8498:31;8552:4;8549:1;8542:15;8580:4;8577:1;8570:15;8434:161;;8221:380;;;:::o;9168:127::-;9229:10;9224:3;9220:20;9217:1;9210:31;9260:4;9257:1;9250:15;9284:4;9281:1;9274:15;9930:222;9995:9;;;10016:10;;;10013:133;;;10068:10;10063:3;10059:20;10056:1;10049:31;10103:4;10100:1;10093:15;10131:4;10128:1;10121:15;10157:465;10414:2;10403:9;10396:21;10377:4;10440:56;10492:2;10481:9;10477:18;10469:6;10440:56;:::i;:::-;10544:9;10536:6;10532:22;10527:2;10516:9;10512:18;10505:50;10572:44;10609:6;10601;10572:44;:::i;:::-;10564:52;10157:465;-1:-1:-1;;;;;10157:465:1:o;10627:561::-;-1:-1:-1;;;;;10924:15:1;;;10906:34;;10976:15;;10971:2;10956:18;;10949:43;11023:2;11008:18;;11001:34;;;11066:2;11051:18;;11044:34;;;10886:3;11109;11094:19;;11087:32;;;10849:4;;11136:46;;11162:19;;11154:6;11136:46;:::i;:::-;11128:54;10627:561;-1:-1:-1;;;;;;;10627:561:1:o;11193:249::-;11262:6;11315:2;11303:9;11294:7;11290:23;11286:32;11283:52;;;11331:1;11328;11321:12;11283:52;11363:9;11357:16;11382:30;11406:5;11382:30;:::i;11447:827::-;-1:-1:-1;;;;;11844:15:1;;;11826:34;;11896:15;;11891:2;11876:18;;11869:43;11806:3;11943:2;11928:18;;11921:31;;;11769:4;;11975:57;;12012:19;;12004:6;11975:57;:::i;:::-;12080:9;12072:6;12068:22;12063:2;12052:9;12048:18;12041:50;12114:44;12151:6;12143;12114:44;:::i;:::-;12100:58;;12207:9;12199:6;12195:22;12189:3;12178:9;12174:19;12167:51;12235:33;12261:6;12253;12235:33;:::i;:::-;12227:41;11447:827;-1:-1:-1;;;;;;;;11447:827:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "895400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2637",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26703",
								"supportsInterface(bytes4)": "555",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72476,
									"end": 72761,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72530,
									"end": 72646,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6D6F636B555249"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56780,
									"end": 56793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56780,
									"end": 56787,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 56780,
									"end": 56793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 56780,
									"end": 56793,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 56780,
									"end": 56793,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56738,
									"end": 56800,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 72560,
									"end": 72570,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 72572,
									"end": 72573,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72575,
									"end": 72583,
									"name": "PUSH",
									"source": 0,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 72554,
									"end": 72559,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72554,
									"end": 72559,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 72554,
									"end": 72590,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 72614,
									"end": 72617,
									"name": "PUSH",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 72620,
									"end": 72621,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72623,
									"end": 72632,
									"name": "PUSH",
									"source": 0,
									"value": "16345785D8A0000"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 72600,
									"end": 72605,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72600,
									"end": 72605,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 72600,
									"end": 72639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "109"
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65769,
									"end": 65855,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 65769,
									"end": 65855,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65835,
									"end": 65839,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 65835,
									"end": 65848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 65842,
									"end": 65848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65835,
									"end": 65839,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65835,
									"end": 65848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 65835,
									"end": 65848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65835,
									"end": 65848,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 65835,
									"end": 65848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65835,
									"end": 65848,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65769,
									"end": 65855,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65769,
									"end": 65855,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66233,
									"end": 66579,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 66233,
									"end": 66579,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 66329,
									"end": 66345,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 66329,
									"end": 66345,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 66325,
									"end": 66413,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 66325,
									"end": 66413,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2BFA23E7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66399,
									"end": 66400,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 66368,
									"end": 66402,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66325,
									"end": 66413,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 66325,
									"end": 66413,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 71861,
									"end": 71865,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 71855,
									"end": 71866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71855,
									"end": 71866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 71931,
									"end": 71932,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 71916,
									"end": 71933,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71916,
									"end": 71933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 71916,
									"end": 71933,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72062,
									"end": 72066,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72050,
									"end": 72067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72050,
									"end": 72067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72043,
									"end": 72078,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 72043,
									"end": 72078,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72043,
									"end": 72078,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72179,
									"end": 72196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72179,
									"end": 72196,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72179,
									"end": 72196,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72209,
									"end": 72226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72209,
									"end": 72226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72209,
									"end": 72226,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 71675,
									"end": 71698,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 72246,
									"end": 72263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72246,
									"end": 72263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72239,
									"end": 72274,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 72239,
									"end": 72274,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72239,
									"end": 72274,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72382,
									"end": 72399,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 72382,
									"end": 72399,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72382,
									"end": 72399,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72369,
									"end": 72400,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72369,
									"end": 72400,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 72369,
									"end": 72400,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 71855,
									"end": 71866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 66511,
									"end": 66572,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 66550,
									"end": 66552,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 71855,
									"end": 71866,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 72179,
									"end": 72196,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 66567,
									"end": 66571,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 66511,
									"end": 66537,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 66511,
									"end": 66572,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66511,
									"end": 66572,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 66511,
									"end": 66572,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66315,
									"end": 66579,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66315,
									"end": 66579,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66233,
									"end": 66579,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66233,
									"end": 66579,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66233,
									"end": 66579,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66233,
									"end": 66579,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66233,
									"end": 66579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62491,
									"end": 63181,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 62491,
									"end": 63181,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62692,
									"end": 62722,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 62700,
									"end": 62704,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 62706,
									"end": 62708,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 62710,
									"end": 62713,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 62715,
									"end": 62721,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 62692,
									"end": 62699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 62692,
									"end": 62722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62692,
									"end": 62722,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 62692,
									"end": 62722,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 62736,
									"end": 62752,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 62736,
									"end": 62752,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62736,
									"end": 62752,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62732,
									"end": 63175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 62732,
									"end": 63175,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62817,
									"end": 62827,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62817,
									"end": 62827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34750,
									"end": 34760,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 34750,
									"end": 34760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62831,
									"end": 62832,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62817,
									"end": 62832,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 62813,
									"end": 63165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 62813,
									"end": 63165,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33555,
									"end": 33559,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62970,
									"end": 63037,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 63001,
									"end": 63009,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 63011,
									"end": 63015,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 63017,
									"end": 63019,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 63032,
									"end": 63036,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 62970,
									"end": 63000,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 62970,
									"end": 63037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62970,
									"end": 63037,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 62970,
									"end": 63037,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62834,
									"end": 63052,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62834,
									"end": 63052,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62813,
									"end": 63165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 62813,
									"end": 63165,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62813,
									"end": 63165,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 62813,
									"end": 63165,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63076,
									"end": 63150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 63112,
									"end": 63120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 63122,
									"end": 63126,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 63128,
									"end": 63130,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 63132,
									"end": 63135,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 63137,
									"end": 63143,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 63145,
									"end": 63149,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 63076,
									"end": 63111,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 63076,
									"end": 63150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62732,
									"end": 63175,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 62732,
									"end": 63175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62491,
									"end": 63181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62491,
									"end": 63181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62491,
									"end": 63181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62491,
									"end": 63181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62491,
									"end": 63181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62491,
									"end": 63181,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60631,
									"end": 61912,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 60631,
									"end": 61912,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60766,
									"end": 60772,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60766,
									"end": 60779,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60752,
									"end": 60755,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60752,
									"end": 60762,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60752,
									"end": 60779,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60748,
									"end": 60865,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60748,
									"end": 60865,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60828,
									"end": 60838,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60828,
									"end": 60838,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60840,
									"end": 60853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60840,
									"end": 60853,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5B059991"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3108,
									"end": 3133,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3133,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3167,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3149,
									"end": 3167,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3142,
									"end": 3176,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3081,
									"end": 3099,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3081,
									"end": 3099,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 60802,
									"end": 60854,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2934,
									"end": 3182,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 60748,
									"end": 60865,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60748,
									"end": 60865,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34750,
									"end": 34760,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 60875,
									"end": 60891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60941,
									"end": 60944,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 60941,
									"end": 60951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60937,
									"end": 60938,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60937,
									"end": 60951,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33555,
									"end": 33559,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33546,
									"end": 33560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33546,
									"end": 33560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33546,
									"end": 33560,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61087,
									"end": 61105,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 61087,
									"end": 61105,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61087,
									"end": 61105,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61083,
									"end": 61503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 61083,
									"end": 61503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61125,
									"end": 61144,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61160,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 61147,
									"end": 61166,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 61188,
									"end": 61207,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61188,
									"end": 61207,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61188,
									"end": 61207,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 61184,
									"end": 61313,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61184,
									"end": 61313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 61184,
									"end": 61313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3DEE4C5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3436,
									"end": 3468,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3468,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3418,
									"end": 3469,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3485,
									"end": 3503,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3485,
									"end": 3503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3485,
									"end": 3503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3478,
									"end": 3512,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3478,
									"end": 3512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3478,
									"end": 3512,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3528,
									"end": 3546,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3521,
									"end": 3555,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3521,
									"end": 3555,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3521,
									"end": 3555,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3589,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3571,
									"end": 3589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3589,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3564,
									"end": 3598,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3564,
									"end": 3598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3564,
									"end": 3598,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3390,
									"end": 3409,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 61238,
									"end": 61294,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3187,
									"end": 3604,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 61184,
									"end": 61313,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 61184,
									"end": 61313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61438,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61442,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "DUP14",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61448,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 61451,
									"end": 61470,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61451,
									"end": 61470,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61451,
									"end": 61470,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61451,
									"end": 61470,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61470,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61429,
									"end": 61470,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 61083,
									"end": 61503,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 61083,
									"end": 61503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61521,
									"end": 61537,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 61521,
									"end": 61537,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61521,
									"end": 61537,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61517,
									"end": 61598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 61517,
									"end": 61598,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61566,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61570,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61574,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 61578,
									"end": 61583,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 61578,
									"end": 61583,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61566,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61578,
									"end": 61583,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 61578,
									"end": 61583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 61557,
									"end": 61583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61557,
									"end": 61583,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 61517,
									"end": 61598,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 61517,
									"end": 61598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 60953,
									"end": 60956,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60953,
									"end": 60956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60917,
									"end": 61608,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61622,
									"end": 61625,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61622,
									"end": 61632,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61636,
									"end": 61637,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61622,
									"end": 61637,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 61618,
									"end": 61906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 61618,
									"end": 61906,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33555,
									"end": 33559,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61653,
									"end": 61663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61653,
									"end": 61663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 33555,
									"end": 33559,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 33526,
									"end": 33561,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 33520,
									"end": 33562,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61653,
									"end": 61691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61653,
									"end": 61691,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 61799,
									"end": 61801,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61793,
									"end": 61797,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61783,
									"end": 61791,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "PUSH",
									"source": 0,
									"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
								},
								{
									"begin": 61803,
									"end": 61805,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 61807,
									"end": 61812,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3108,
									"end": 3133,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3133,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3164,
									"end": 3166,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3149,
									"end": 3167,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3149,
									"end": 3167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3142,
									"end": 3176,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3096,
									"end": 3098,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3081,
									"end": 3099,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3081,
									"end": 3099,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3182,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61768,
									"end": 61813,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 61639,
									"end": 61824,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61639,
									"end": 61824,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61618,
									"end": 61906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 61618,
									"end": 61906,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 61618,
									"end": 61906,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 61618,
									"end": 61906,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61879,
									"end": 61881,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61873,
									"end": 61877,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61863,
									"end": 61871,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "PUSH",
									"source": 0,
									"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
								},
								{
									"begin": 61883,
									"end": 61886,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 61888,
									"end": 61894,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 61849,
									"end": 61895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61849,
									"end": 61895,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 60738,
									"end": 61912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60631,
									"end": 61912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60631,
									"end": 61912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60631,
									"end": 61912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60631,
									"end": 61912,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60631,
									"end": 61912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 69454,
									"end": 69468,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 69454,
									"end": 69468,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 69454,
									"end": 69468,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 69454,
									"end": 69472,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69450,
									"end": 70216,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 69450,
									"end": 70216,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F23A6E61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 69492,
									"end": 69530,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69530,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69530,
									"name": "PUSH",
									"source": 0,
									"value": "F23A6E61"
								},
								{
									"begin": 69492,
									"end": 69530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69531,
									"end": 69539,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 69531,
									"end": 69539,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69541,
									"end": 69545,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 69541,
									"end": 69545,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69547,
									"end": 69549,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 69547,
									"end": 69549,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69551,
									"end": 69556,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 69551,
									"end": 69556,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69558,
									"end": 69562,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 69558,
									"end": 69562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 69492,
									"end": 69563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 69492,
									"end": 69563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 69492,
									"end": 69563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "tag",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "tag",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69847,
									"end": 69853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69847,
									"end": 69860,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69864,
									"end": 69865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69847,
									"end": 69865,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 69843,
									"end": 70192,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 69843,
									"end": 70192,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2BFA23E7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2890,
									"end": 2922,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2922,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 69951,
									"end": 69977,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2726,
									"end": 2929,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 69843,
									"end": 70192,
									"name": "tag",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 69843,
									"end": 70192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70144,
									"end": 70150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70138,
									"end": 70151,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70129,
									"end": 70135,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70125,
									"end": 70127,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70121,
									"end": 70136,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70114,
									"end": 70152,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 69488,
									"end": 70206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 69612,
									"end": 69667,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69612,
									"end": 69667,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F23A6E61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 69612,
									"end": 69667,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 69608,
									"end": 69782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "82"
								},
								{
									"begin": 69608,
									"end": 69782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2BFA23E7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2890,
									"end": 2922,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2922,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 69737,
									"end": 69763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2726,
									"end": 2929,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 69608,
									"end": 69782,
									"name": "tag",
									"source": 0,
									"value": "82"
								},
								{
									"begin": 69608,
									"end": 69782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69564,
									"end": 69796,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69248,
									"end": 70222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70410,
									"end": 71451,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 70410,
									"end": 71451,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 70641,
									"end": 70655,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 70641,
									"end": 70655,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 70641,
									"end": 70655,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 70641,
									"end": 70659,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70637,
									"end": 71445,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 70637,
									"end": 71445,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BC197C81"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 70679,
									"end": 70722,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70722,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70722,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70722,
									"name": "PUSH",
									"source": 0,
									"value": "BC197C81"
								},
								{
									"begin": 70679,
									"end": 70722,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "86"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70723,
									"end": 70731,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 70723,
									"end": 70731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70733,
									"end": 70737,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 70733,
									"end": 70737,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70739,
									"end": 70742,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 70739,
									"end": 70742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70744,
									"end": 70750,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 70744,
									"end": 70750,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70752,
									"end": 70756,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 70752,
									"end": 70756,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "87"
								},
								{
									"begin": 70679,
									"end": 70757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "tag",
									"source": 0,
									"value": "86"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "88"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "89"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 70679,
									"end": 70757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "tag",
									"source": 0,
									"value": "89"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "tag",
									"source": 0,
									"value": "88"
								},
								{
									"begin": 70679,
									"end": 70757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "90"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "tag",
									"source": 0,
									"value": "90"
								},
								{
									"begin": 70675,
									"end": 71435,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 70836,
									"end": 70896,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70836,
									"end": 70896,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BC197C81"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 70836,
									"end": 70896,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 70832,
									"end": 71011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "82"
								},
								{
									"begin": 70832,
									"end": 71011,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2BFA23E7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2890,
									"end": 2922,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2922,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 70966,
									"end": 70992,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2726,
									"end": 2929,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 824,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 825,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 860,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 868,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 921,
									"end": 931,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 917,
									"end": 936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 914,
									"end": 915,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 910,
									"end": 937,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 904,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 969,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 967,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 954,
									"end": 974,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 951,
									"end": 998,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 951,
									"end": 998,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 992,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 951,
									"end": 998,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1042,
									"end": 1045,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1050,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1031,
									"end": 1051,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1029,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1120,
									"end": 1122,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1110,
									"end": 1123,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1135,
									"end": 1148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1551,
									"end": 1569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1667,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 1630,
									"end": 1668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1628,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1580,
									"end": 1677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2597,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1334,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1349,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1350,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1365,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1969,
									"end": 1976,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 1967,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1977,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2078,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2118,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2225,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2210,
									"end": 2217,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2226,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2363,
									"end": 2364,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2375,
									"end": 2378,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2355,
									"end": 2379,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2351,
									"end": 2388,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2389,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2332,
									"end": 2390,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2452,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2453,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1376,
									"end": 2721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3831,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3609,
									"end": 3831,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3683,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3683,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3705,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3705,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3692,
									"end": 3825,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3692,
									"end": 3825,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 3692,
									"end": 3825,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3757,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3742,
									"end": 3745,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3738,
									"end": 3758,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3736,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3728,
									"end": 3759,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3782,
									"end": 3786,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3779,
									"end": 3780,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3772,
									"end": 3787,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3692,
									"end": 3825,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 3692,
									"end": 3825,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3831,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3831,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3836,
									"end": 4275,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3836,
									"end": 4275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3889,
									"end": 3892,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3927,
									"end": 3932,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3921,
									"end": 3933,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3954,
									"end": 3960,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3949,
									"end": 3952,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3942,
									"end": 3961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3980,
									"end": 3984,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4004,
									"end": 4007,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4014,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3993,
									"end": 4014,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3993,
									"end": 4014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4048,
									"end": 4052,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4041,
									"end": 4046,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4037,
									"end": 4053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4071,
									"end": 4072,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4095,
									"end": 4101,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4092,
									"end": 4093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4089,
									"end": 4102,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4156,
									"end": 4169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4156,
									"end": 4169,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4170,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4170,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4190,
									"end": 4202,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 4190,
									"end": 4202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4190,
									"end": 4202,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4190,
									"end": 4202,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 4225,
									"end": 4240,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4225,
									"end": 4240,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4225,
									"end": 4240,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4225,
									"end": 4240,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4117,
									"end": 4118,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4110,
									"end": 4119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 4081,
									"end": 4250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4266,
									"end": 4269,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4269,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 3836,
									"end": 4275,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3836,
									"end": 4275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4280,
									"end": 4745,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 4280,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4537,
									"end": 4539,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4526,
									"end": 4535,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4519,
									"end": 4540,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4500,
									"end": 4504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4563,
									"end": 4619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 4615,
									"end": 4617,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4604,
									"end": 4613,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4600,
									"end": 4618,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4592,
									"end": 4598,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4563,
									"end": 4619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 4563,
									"end": 4619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4563,
									"end": 4619,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 4563,
									"end": 4619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4676,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4659,
									"end": 4665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4655,
									"end": 4677,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4650,
									"end": 4652,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4639,
									"end": 4648,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4635,
									"end": 4653,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4628,
									"end": 4678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4695,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 4732,
									"end": 4738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4724,
									"end": 4730,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4695,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 4695,
									"end": 4739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4695,
									"end": 4739,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 4695,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4739,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 4280,
									"end": 4745,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4280,
									"end": 4745,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4750,
									"end": 5172,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4750,
									"end": 5172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4791,
									"end": 4794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4829,
									"end": 4834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 4835,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4856,
									"end": 4862,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4851,
									"end": 4854,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4844,
									"end": 4863,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4881,
									"end": 4882,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4905,
									"end": 4911,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4902,
									"end": 4903,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4899,
									"end": 4912,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4967,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5023,
									"end": 5036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5023,
									"end": 5036,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5023,
									"end": 5036,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5019,
									"end": 5041,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5019,
									"end": 5041,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5013,
									"end": 5042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4995,
									"end": 5006,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4995,
									"end": 5006,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4995,
									"end": 5006,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4991,
									"end": 5011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4991,
									"end": 5011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4984,
									"end": 5043,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4920,
									"end": 4932,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 4891,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4895,
									"end": 4898,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5098,
									"end": 5099,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5091,
									"end": 5095,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5082,
									"end": 5088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5077,
									"end": 5080,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5073,
									"end": 5089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5096,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5100,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5161,
									"end": 5165,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5154,
									"end": 5156,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5150,
									"end": 5157,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5147,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5137,
									"end": 5143,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5133,
									"end": 5148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5129,
									"end": 5158,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5124,
									"end": 5127,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 5159,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5116,
									"end": 5166,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5109,
									"end": 5166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5109,
									"end": 5166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5109,
									"end": 5166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4750,
									"end": 5172,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4750,
									"end": 5172,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4750,
									"end": 5172,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4750,
									"end": 5172,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4750,
									"end": 5172,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5737,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 5177,
									"end": 5737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5474,
									"end": 5489,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5489,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5474,
									"end": 5489,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5456,
									"end": 5490,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5456,
									"end": 5490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5521,
									"end": 5523,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5506,
									"end": 5524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5506,
									"end": 5524,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5499,
									"end": 5542,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5573,
									"end": 5575,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5558,
									"end": 5576,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5558,
									"end": 5576,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5551,
									"end": 5585,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5551,
									"end": 5585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5551,
									"end": 5585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5616,
									"end": 5618,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5601,
									"end": 5619,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5601,
									"end": 5619,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5436,
									"end": 5439,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 5659,
									"end": 5662,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5644,
									"end": 5663,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5644,
									"end": 5663,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5637,
									"end": 5669,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5637,
									"end": 5669,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5637,
									"end": 5669,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5399,
									"end": 5403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5399,
									"end": 5403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5686,
									"end": 5731,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5686,
									"end": 5731,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5711,
									"end": 5730,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5711,
									"end": 5730,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5703,
									"end": 5709,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5686,
									"end": 5731,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 5686,
									"end": 5731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5686,
									"end": 5731,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5686,
									"end": 5731,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5678,
									"end": 5731,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 5177,
									"end": 5737,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5177,
									"end": 5737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5742,
									"end": 6032,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 5742,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5864,
									"end": 5866,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5852,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5843,
									"end": 5850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5839,
									"end": 5862,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5835,
									"end": 5867,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 5884,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 5884,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 5832,
									"end": 5884,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5880,
									"end": 5881,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5877,
									"end": 5878,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5870,
									"end": 5882,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 5884,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 5832,
									"end": 5884,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5906,
									"end": 5922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5906,
									"end": 5922,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5951,
									"end": 5983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5951,
									"end": 5983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5941,
									"end": 5984,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5941,
									"end": 5984,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5931,
									"end": 6002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5931,
									"end": 6002,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5995,
									"end": 5996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 6000,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5931,
									"end": 6002,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5931,
									"end": 6002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6021,
									"end": 6026,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5742,
									"end": 6032,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5742,
									"end": 6032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6037,
									"end": 6863,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 6037,
									"end": 6863,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6434,
									"end": 6449,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6434,
									"end": 6449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6434,
									"end": 6449,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6416,
									"end": 6450,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6416,
									"end": 6450,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6486,
									"end": 6501,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6486,
									"end": 6501,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6481,
									"end": 6483,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6466,
									"end": 6484,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6484,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6459,
									"end": 6502,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 6533,
									"end": 6535,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6518,
									"end": 6536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6518,
									"end": 6536,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6542,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6359,
									"end": 6363,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6359,
									"end": 6363,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6565,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 6565,
									"end": 6622,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6602,
									"end": 6621,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6602,
									"end": 6621,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6594,
									"end": 6600,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6565,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 6565,
									"end": 6622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6565,
									"end": 6622,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 6565,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6670,
									"end": 6679,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6662,
									"end": 6668,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6658,
									"end": 6680,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6653,
									"end": 6655,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6642,
									"end": 6651,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6638,
									"end": 6656,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6631,
									"end": 6681,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6704,
									"end": 6748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6733,
									"end": 6739,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6704,
									"end": 6748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 6704,
									"end": 6748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6704,
									"end": 6748,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 6704,
									"end": 6748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6748,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6748,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6797,
									"end": 6806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6789,
									"end": 6795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6785,
									"end": 6807,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6779,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 6768,
									"end": 6777,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6764,
									"end": 6783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6757,
									"end": 6808,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6825,
									"end": 6857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6850,
									"end": 6856,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6842,
									"end": 6848,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6825,
									"end": 6857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 6825,
									"end": 6857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6825,
									"end": 6857,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6825,
									"end": 6857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6817,
									"end": 6857,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 6037,
									"end": 6863,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6037,
									"end": 6863,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6037,
									"end": 6863,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 6037,
									"end": 6863,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72476,
									"end": 72761,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ac2e9740ba79611762983bff00f7a7c2c6fbb661512908a54df62f39b37d73e64736f6c63430008170033",
									".code": [
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "156E29F6"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72476,
											"end": 72761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 57734,
											"end": 57866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57734,
											"end": 57866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 56867,
											"end": 57172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 56867,
											"end": 57172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 57571,
											"end": 57674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 57571,
											"end": 57674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 57571,
											"end": 57674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 72652,
											"end": 72759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 72652,
											"end": 72759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 59501,
											"end": 59930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 59501,
											"end": 59930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 58023,
											"end": 58575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 58023,
											"end": 58575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 58023,
											"end": 58575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 58643,
											"end": 58787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 58643,
											"end": 58787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 58854,
											"end": 59011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 58854,
											"end": 59011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 59078,
											"end": 59429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 59078,
											"end": 59429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57811,
											"end": 57818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57837,
											"end": 57859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 56867,
											"end": 57172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56969,
											"end": 56973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 57004,
											"end": 57045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57004,
											"end": 57045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57004,
											"end": 57045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57004,
											"end": 57045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57004,
											"end": 57113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57004,
											"end": 57113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 57061,
											"end": 57113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57061,
											"end": 57113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57061,
											"end": 57113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57004,
											"end": 57113,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57004,
											"end": 57113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57004,
											"end": 57165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57004,
											"end": 57165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 57004,
											"end": 57165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47735,
											"end": 47775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47735,
											"end": 47775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47735,
											"end": 47775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57129,
											"end": 57165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 47636,
											"end": 47782,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57631,
											"end": 57644,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57663,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 57656,
											"end": 57667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 57656,
											"end": 57667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57656,
											"end": 57667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 72728,
											"end": 72731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72733,
											"end": 72736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72738,
											"end": 72745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 72722,
											"end": 72752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 72722,
											"end": 72752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72652,
											"end": 72759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59738,
											"end": 59752,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59752,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 59738,
											"end": 59787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59757,
											"end": 59787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 59774,
											"end": 59778,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59780,
											"end": 59786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59757,
											"end": 59773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 59757,
											"end": 59787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59757,
											"end": 59787,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 59757,
											"end": 59787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59756,
											"end": 59787,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59738,
											"end": 59787,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 59738,
											"end": 59787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59734,
											"end": 59863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59734,
											"end": 59863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 59734,
											"end": 59863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8818,
											"end": 8852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8903,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59810,
											"end": 59852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59734,
											"end": 59863,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 59734,
											"end": 59863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59872,
											"end": 59923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 59895,
											"end": 59899,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59901,
											"end": 59903,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59905,
											"end": 59908,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59910,
											"end": 59916,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59918,
											"end": 59922,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59872,
											"end": 59894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 59872,
											"end": 59923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59872,
											"end": 59923,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 59872,
											"end": 59923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59685,
											"end": 59930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59501,
											"end": 59930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58147,
											"end": 58163,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58198,
											"end": 58201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58198,
											"end": 58208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58175,
											"end": 58296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58175,
											"end": 58296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58257,
											"end": 58267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58257,
											"end": 58267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58269,
											"end": 58284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58269,
											"end": 58284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58231,
											"end": 58285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8915,
											"end": 9163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58175,
											"end": 58296,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58175,
											"end": 58296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 58336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58353,
											"end": 58361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58353,
											"end": 58368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 58339,
											"end": 58369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58339,
											"end": 58369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 58369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 58369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58385,
											"end": 58394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58412,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58400,
											"end": 58401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58400,
											"end": 58419,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 58459,
											"end": 58527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57734,
											"end": 57866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58527,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 58459,
											"end": 58527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58454,
											"end": 58455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 58440,
											"end": 58456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58440,
											"end": 58527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58421,
											"end": 58424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58421,
											"end": 58424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 58380,
											"end": 58538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58555,
											"end": 58568,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58023,
											"end": 58575,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58023,
											"end": 58575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58728,
											"end": 58780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58761,
											"end": 58769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58771,
											"end": 58779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58728,
											"end": 58746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 58728,
											"end": 58780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58728,
											"end": 58780,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 58728,
											"end": 58780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58643,
											"end": 58787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 58854,
											"end": 59011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58944,
											"end": 58948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 58994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58967,
											"end": 59004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 59078,
											"end": 59429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59244,
											"end": 59258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59244,
											"end": 59293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59263,
											"end": 59293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 59280,
											"end": 59284,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59263,
											"end": 59279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 59263,
											"end": 59293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59263,
											"end": 59293,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 59263,
											"end": 59293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59262,
											"end": 59293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59244,
											"end": 59293,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59244,
											"end": 59293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59240,
											"end": 59369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59240,
											"end": 59369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59240,
											"end": 59369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8818,
											"end": 8852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8903,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59316,
											"end": 59358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8606,
											"end": 8910,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59240,
											"end": 59369,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59240,
											"end": 59369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59378,
											"end": 59422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 59396,
											"end": 59400,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59402,
											"end": 59404,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59406,
											"end": 59408,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59415,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59417,
											"end": 59421,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59378,
											"end": 59395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 59378,
											"end": 59422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66233,
											"end": 66579,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 66233,
											"end": 66579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 66329,
											"end": 66345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 66329,
											"end": 66345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 66325,
											"end": 66413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 66325,
											"end": 66413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66399,
											"end": 66400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 66368,
											"end": 66402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 66325,
											"end": 66413,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 66325,
											"end": 66413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71861,
											"end": 71865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71931,
											"end": 71932,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71916,
											"end": 71933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71916,
											"end": 71933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71916,
											"end": 71933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72062,
											"end": 72066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72050,
											"end": 72067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72050,
											"end": 72067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72043,
											"end": 72078,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 72043,
											"end": 72078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72043,
											"end": 72078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72209,
											"end": 72226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72209,
											"end": 72226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72209,
											"end": 72226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71675,
											"end": 71698,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 72246,
											"end": 72263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72246,
											"end": 72263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72382,
											"end": 72399,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72382,
											"end": 72399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72382,
											"end": 72399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72369,
											"end": 72400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72369,
											"end": 72400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72369,
											"end": 72400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66511,
											"end": 66572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 66550,
											"end": 66552,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 66567,
											"end": 66571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 66511,
											"end": 66537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 66511,
											"end": 66572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 64502,
											"end": 64947,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 64502,
											"end": 64947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 64695,
											"end": 64711,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64695,
											"end": 64711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64691,
											"end": 64779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 64691,
											"end": 64779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64765,
											"end": 64766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 64734,
											"end": 64768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 64691,
											"end": 64779,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 64691,
											"end": 64779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 64792,
											"end": 64810,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64792,
											"end": 64810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 64788,
											"end": 64876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 64788,
											"end": 64876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64862,
											"end": 64863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 64833,
											"end": 64865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 64788,
											"end": 64876,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 64788,
											"end": 64876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64885,
											"end": 64940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 64912,
											"end": 64916,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64918,
											"end": 64920,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64922,
											"end": 64925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64927,
											"end": 64933,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64935,
											"end": 64939,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 64885,
											"end": 64911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 64885,
											"end": 64940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 64885,
											"end": 64940,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 64885,
											"end": 64940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64502,
											"end": 64947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64502,
											"end": 64947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64502,
											"end": 64947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64502,
											"end": 64947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64502,
											"end": 64947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64502,
											"end": 64947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68755,
											"end": 69070,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 68755,
											"end": 69070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68862,
											"end": 68884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68862,
											"end": 68884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68858,
											"end": 68952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 68858,
											"end": 68952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CED3E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68938,
											"end": 68939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 68907,
											"end": 68941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 68858,
											"end": 68952,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 68858,
											"end": 68952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68979,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 68996,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68961,
											"end": 69007,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69022,
											"end": 69063,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 68755,
											"end": 69070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68755,
											"end": 69070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68755,
											"end": 69070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68755,
											"end": 69070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63638,
											"end": 64101,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 63638,
											"end": 64101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 63760,
											"end": 63776,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63760,
											"end": 63776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63756,
											"end": 63844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 63756,
											"end": 63844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63830,
											"end": 63831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63799,
											"end": 63833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 63756,
											"end": 63844,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 63756,
											"end": 63844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 63857,
											"end": 63875,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 63857,
											"end": 63875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 63853,
											"end": 63941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 63853,
											"end": 63941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63927,
											"end": 63928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63898,
											"end": 63930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 63853,
											"end": 63941,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 63853,
											"end": 63941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71861,
											"end": 71865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71931,
											"end": 71932,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71916,
											"end": 71933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71916,
											"end": 71933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71916,
											"end": 71933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72062,
											"end": 72066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72050,
											"end": 72067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72050,
											"end": 72067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72043,
											"end": 72078,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 72043,
											"end": 72078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72043,
											"end": 72078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72209,
											"end": 72226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72209,
											"end": 72226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72209,
											"end": 72226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71675,
											"end": 71698,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 72246,
											"end": 72263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72246,
											"end": 72263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72382,
											"end": 72399,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72382,
											"end": 72399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72382,
											"end": 72399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72369,
											"end": 72400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72369,
											"end": 72400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72369,
											"end": 72400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64039,
											"end": 64094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 64066,
											"end": 64070,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 64072,
											"end": 64074,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 71855,
											"end": 71866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 72179,
											"end": 72196,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64089,
											"end": 64093,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 64039,
											"end": 64065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 64039,
											"end": 64094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 64039,
											"end": 64094,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 64039,
											"end": 64094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63746,
											"end": 64101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63746,
											"end": 64101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63638,
											"end": 64101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63638,
											"end": 64101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63638,
											"end": 64101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63638,
											"end": 64101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63638,
											"end": 64101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63638,
											"end": 64101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62491,
											"end": 63181,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 62491,
											"end": 63181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62692,
											"end": 62722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 62700,
											"end": 62704,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62706,
											"end": 62708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62710,
											"end": 62713,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62715,
											"end": 62721,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62692,
											"end": 62699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 62692,
											"end": 62722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62692,
											"end": 62722,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 62692,
											"end": 62722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62736,
											"end": 62752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62736,
											"end": 62752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62736,
											"end": 62752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62732,
											"end": 63175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 62732,
											"end": 63175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62817,
											"end": 62827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62817,
											"end": 62827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62831,
											"end": 62832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62817,
											"end": 62832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62813,
											"end": 63165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 62813,
											"end": 63165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62970,
											"end": 63037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 63001,
											"end": 63009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63011,
											"end": 63015,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 63017,
											"end": 63019,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 63032,
											"end": 63036,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 62970,
											"end": 63000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 62970,
											"end": 63037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62970,
											"end": 63037,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 62970,
											"end": 63037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 63052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62834,
											"end": 63052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62813,
											"end": 63165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 62813,
											"end": 63165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62813,
											"end": 63165,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 62813,
											"end": 63165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63076,
											"end": 63150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 63112,
											"end": 63120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63122,
											"end": 63126,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63128,
											"end": 63130,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63132,
											"end": 63135,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63137,
											"end": 63143,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63145,
											"end": 63149,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 63076,
											"end": 63111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 63076,
											"end": 63150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60631,
											"end": 61912,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 60631,
											"end": 61912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60766,
											"end": 60772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60766,
											"end": 60779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60752,
											"end": 60755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60752,
											"end": 60762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60752,
											"end": 60779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60748,
											"end": 60865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60748,
											"end": 60865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60828,
											"end": 60838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60828,
											"end": 60838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60840,
											"end": 60853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60840,
											"end": 60853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60802,
											"end": 60854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8915,
											"end": 9163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 60748,
											"end": 60865,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 60748,
											"end": 60865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60875,
											"end": 60891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60941,
											"end": 60944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60941,
											"end": 60951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60937,
											"end": 60938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60937,
											"end": 60951,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33945,
											"end": 33959,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61087,
											"end": 61105,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61083,
											"end": 61503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 61083,
											"end": 61503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61125,
											"end": 61144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61160,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61147,
											"end": 61166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61188,
											"end": 61207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61188,
											"end": 61207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61188,
											"end": 61207,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61184,
											"end": 61313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61184,
											"end": 61313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 61184,
											"end": 61313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DEE4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9789,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9789,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9730,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9711,
											"end": 9730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61238,
											"end": 61294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9508,
											"end": 9925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61184,
											"end": 61313,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 61184,
											"end": 61313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61442,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61448,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61451,
											"end": 61470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61451,
											"end": 61470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61451,
											"end": 61470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61451,
											"end": 61470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61429,
											"end": 61470,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61083,
											"end": 61503,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 61083,
											"end": 61503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61521,
											"end": 61537,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 61521,
											"end": 61537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61521,
											"end": 61537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61517,
											"end": 61598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 61517,
											"end": 61598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61578,
											"end": 61583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61578,
											"end": 61583,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61578,
											"end": 61583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61578,
											"end": 61583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 61557,
											"end": 61583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61557,
											"end": 61583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61517,
											"end": 61598,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 61517,
											"end": 61598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60953,
											"end": 60956,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60953,
											"end": 60956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60917,
											"end": 61608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61622,
											"end": 61625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61622,
											"end": 61632,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61636,
											"end": 61637,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61622,
											"end": 61637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61618,
											"end": 61906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 61618,
											"end": 61906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61653,
											"end": 61663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61653,
											"end": 61663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33925,
											"end": 33960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33919,
											"end": 33961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61653,
											"end": 61691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61653,
											"end": 61691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61799,
											"end": 61801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61793,
											"end": 61797,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61783,
											"end": 61791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 61803,
											"end": 61805,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61807,
											"end": 61812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9145,
											"end": 9147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 9163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61768,
											"end": 61813,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 61639,
											"end": 61824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61639,
											"end": 61824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61618,
											"end": 61906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 61618,
											"end": 61906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61618,
											"end": 61906,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 61618,
											"end": 61906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61879,
											"end": 61881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61873,
											"end": 61877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61863,
											"end": 61871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 61883,
											"end": 61886,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61888,
											"end": 61894,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 61849,
											"end": 61895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61849,
											"end": 61895,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 60738,
											"end": 61912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60631,
											"end": 61912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60631,
											"end": 61912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60631,
											"end": 61912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60631,
											"end": 61912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60631,
											"end": 61912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69248,
											"end": 70222,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 69248,
											"end": 70222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69454,
											"end": 69468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69454,
											"end": 69468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69454,
											"end": 69468,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 69454,
											"end": 69472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69450,
											"end": 70216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 69450,
											"end": 70216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69492,
											"end": 69530,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69530,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 69492,
											"end": 69530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69531,
											"end": 69539,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 69531,
											"end": 69539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69541,
											"end": 69545,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 69541,
											"end": 69545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69547,
											"end": 69549,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 69547,
											"end": 69549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69551,
											"end": 69556,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 69551,
											"end": 69556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69558,
											"end": 69562,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 69558,
											"end": 69562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 69492,
											"end": 69563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 69492,
											"end": 69563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 69492,
											"end": 69563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69847,
											"end": 69853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69847,
											"end": 69860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69864,
											"end": 69865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69847,
											"end": 69865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69843,
											"end": 70192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 69843,
											"end": 70192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 69951,
											"end": 69977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 69843,
											"end": 70192,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 69843,
											"end": 70192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70144,
											"end": 70150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70138,
											"end": 70151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70129,
											"end": 70135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70125,
											"end": 70127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 70121,
											"end": 70136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70114,
											"end": 70152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 69488,
											"end": 70206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69612,
											"end": 69667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69612,
											"end": 69667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 69612,
											"end": 69667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69608,
											"end": 69782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 69608,
											"end": 69782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 69737,
											"end": 69763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 70410,
											"end": 71451,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 70410,
											"end": 71451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 70641,
											"end": 70655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70641,
											"end": 70655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70641,
											"end": 70655,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 70641,
											"end": 70659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70637,
											"end": 71445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 70637,
											"end": 71445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 70679,
											"end": 70722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70722,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 70679,
											"end": 70722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70723,
											"end": 70731,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 70723,
											"end": 70731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70733,
											"end": 70737,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 70733,
											"end": 70737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70739,
											"end": 70742,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 70739,
											"end": 70742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70750,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70752,
											"end": 70756,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 70752,
											"end": 70756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 70679,
											"end": 70757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 70679,
											"end": 70757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 70679,
											"end": 70757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 70675,
											"end": 71435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 70836,
											"end": 70896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70836,
											"end": 70896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 70836,
											"end": 70896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70832,
											"end": 71011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 70832,
											"end": 71011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 70966,
											"end": 70992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9300,
											"end": 9503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2371,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2049,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2234,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2263,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2314,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2314,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2364,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2365,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2376,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2432,
											"end": 2435,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2428,
											"end": 2448,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2489,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2783,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2508,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2646,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2625,
											"end": 2638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2621,
											"end": 2648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2698,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2722,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2723,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2746,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2658,
											"end": 2746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2726,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2971,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2788,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2900,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2923,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2867,
											"end": 2923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2903,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2903,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2976,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3068,
											"end": 3074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3087,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3103,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3144,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3203,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3243,
											"end": 3245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3203,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3246,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3203,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3187,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3326,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3365,
											"end": 3375,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3363,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3383,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3425,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3392,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3496,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3473,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3633,
											"end": 3638,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3644,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 3644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 4179,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3649,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3741,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3748,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3711,
											"end": 3766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 3764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3766,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3711,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3843,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3814,
											"end": 3866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 3937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3890,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3945,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3890,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 3973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4020,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4037,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3982,
											"end": 4037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4035,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4037,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3982,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4101,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4132,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 4179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4427,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4391,
											"end": 4444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4442,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4444,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4391,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4463,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4492,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4511,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4549,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4511,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4604,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4664,
											"end": 4666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4667,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4756,
											"end": 4763,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 4745,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4703,
											"end": 4764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4764,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4703,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4764,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4817,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4806,
											"end": 4815,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4802,
											"end": 4820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4821,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4830,
											"end": 4866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4866,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4830,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4927,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4885,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4948,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5004,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5006,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 5006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 5006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5034,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5015,
											"end": 5051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5051,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5015,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5113,
											"end": 5120,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5100,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5070,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5070,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 5127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 6278,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5132,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5297,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5314,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5279,
											"end": 5331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5331,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5279,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5377,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5440,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5457,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5423,
											"end": 5457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5423,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5533,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5544,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5507,
											"end": 5562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5560,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5562,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5507,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5597,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5656,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5656,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5700,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5640,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5817,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5812,
											"end": 5822,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5822,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5822,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5823,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5859,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5859,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5837,
											"end": 5876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5862,
											"end": 5874,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5876,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5837,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5907,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5907,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5932,
											"end": 5938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5930,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 5939,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6017,
											"end": 6020,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5998,
											"end": 6021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5916,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6083,
											"end": 6088,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6126,
											"end": 6144,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6145,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6145,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6157,
											"end": 6173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6173,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6190,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6154,
											"end": 6190,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6188,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6190,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6154,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6264,
											"end": 6271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6251,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6209,
											"end": 6272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6272,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6209,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 6278,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 6278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 6278,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 6278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 6278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6722,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6283,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6461,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6488,
											"end": 6493,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6549,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6616,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6617,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6528,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6713,
											"end": 6716,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6713,
											"end": 6716,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6722,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6283,
											"end": 6722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6727,
											"end": 6988,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6727,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6926,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6967,
											"end": 6976,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 6961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6926,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7340,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6993,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7058,
											"end": 7064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7105,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7117,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7122,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7139,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7087,
											"end": 7139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7132,
											"end": 7133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7139,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7087,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7177,
											"end": 7186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7158,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7187,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7158,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7241,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7290,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7250,
											"end": 7310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7310,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7250,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7605,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7345,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7474,
											"end": 7476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7460,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7472,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7477,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7494,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7442,
											"end": 7494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7492,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7494,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7442,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7532,
											"end": 7541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7513,
											"end": 7542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7595,
											"end": 7597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7561,
											"end": 7599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7599,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7561,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 8216,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7610,
											"end": 8216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7787,
											"end": 7796,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7785,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7774,
											"end": 7797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7770,
											"end": 7803,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7767,
											"end": 7820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 7814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7820,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7767,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7858,
											"end": 7867,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7839,
											"end": 7868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7868,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7839,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 7868,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 7868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7921,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7887,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7925,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7887,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7925,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7972,
											"end": 7974,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 7976,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8025,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7995,
											"end": 8027,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8067,
											"end": 8076,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8098,
											"end": 8104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8125,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8142,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8092,
											"end": 8142,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8140,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8142,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8092,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 8202,
											"end": 8209,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8161,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8601,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 8221,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8301,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8296,
											"end": 8308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8308,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8355,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8410,
											"end": 8416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8406,
											"end": 8423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8364,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8474,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8437,
											"end": 8475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8434,
											"end": 8595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8517,
											"end": 8527,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8508,
											"end": 8528,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8505,
											"end": 8506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8498,
											"end": 8529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8556,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8549,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8542,
											"end": 8557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8577,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8595,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8434,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9168,
											"end": 9295,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 9168,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9239,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9224,
											"end": 9227,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9220,
											"end": 9240,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9210,
											"end": 9241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9264,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9257,
											"end": 9258,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9250,
											"end": 9265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9288,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9289,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 10152,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9930,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10026,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10013,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10068,
											"end": 10078,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10059,
											"end": 10079,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10107,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10100,
											"end": 10101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10093,
											"end": 10108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10121,
											"end": 10136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10622,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10157,
											"end": 10622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10377,
											"end": 10381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 10492,
											"end": 10494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10490,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10475,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10440,
											"end": 10496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10496,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 10440,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10532,
											"end": 10554,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10527,
											"end": 10529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10516,
											"end": 10525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10512,
											"end": 10530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10505,
											"end": 10555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10609,
											"end": 10615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10601,
											"end": 10607,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10572,
											"end": 10616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10616,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10572,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10564,
											"end": 10616,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10622,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10157,
											"end": 10622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 11188,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10627,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10906,
											"end": 10940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10906,
											"end": 10940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10976,
											"end": 10991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10976,
											"end": 10991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10971,
											"end": 10973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11023,
											"end": 11025,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11008,
											"end": 11026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11068,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11051,
											"end": 11069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11044,
											"end": 11078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10889,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 11109,
											"end": 11112,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11136,
											"end": 11182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11181,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11160,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 11136,
											"end": 11182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11182,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11136,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11182,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 11188,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 11188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11193,
											"end": 11442,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11193,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11262,
											"end": 11268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11303,
											"end": 11312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11294,
											"end": 11301,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11286,
											"end": 11318,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11283,
											"end": 11335,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11283,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11283,
											"end": 11335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11321,
											"end": 11333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11283,
											"end": 11335,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11283,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 11406,
											"end": 11411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 11382,
											"end": 11412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11447,
											"end": 12274,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 11447,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11844,
											"end": 11859,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11844,
											"end": 11859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11844,
											"end": 11859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11896,
											"end": 11911,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11896,
											"end": 11911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11869,
											"end": 11912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11806,
											"end": 11809,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 11943,
											"end": 11945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11928,
											"end": 11946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11928,
											"end": 11946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11769,
											"end": 11773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11975,
											"end": 12032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12010,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 11975,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11975,
											"end": 12032,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11975,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12080,
											"end": 12089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12072,
											"end": 12078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12068,
											"end": 12090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12063,
											"end": 12065,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12052,
											"end": 12061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12041,
											"end": 12091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12114,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 12151,
											"end": 12157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12143,
											"end": 12149,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12114,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 12114,
											"end": 12158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12114,
											"end": 12158,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 12114,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12195,
											"end": 12217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12178,
											"end": 12187,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12261,
											"end": 12267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12253,
											"end": 12259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 12235,
											"end": 12268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12268,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12235,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12227,
											"end": 12268,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 11447,
											"end": 12274,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11447,
											"end": 12274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"src/MockToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"mockERC1155Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2341,
								"contract": "src/MockToken_flattened.sol:mockERC1155Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2347,
								"contract": "src/MockToken_flattened.sol:mockERC1155Token",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2349,
								"contract": "src/MockToken_flattened.sol:mockERC1155Token",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"mockERC20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/MockToken_flattened.sol\":72763:73068  contract mockERC20Token is ERC20(\"CDBC\", \"CDBC\") {... */\n  mstore(0x40, 0x80)\n    /* \"src/MockToken_flattened.sol\":72848:72974  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/MockToken_flattened.sol\":36700:36813  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x43444243)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n  swap1\n    /* \"src/MockToken_flattened.sol\":36766:36771  _name */\n  0x03\n    /* \"src/MockToken_flattened.sol\":36766:36779  _name = name_ */\n  tag_5\n    /* \"src/MockToken_flattened.sol\":36700:36813  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"src/MockToken_flattened.sol\":36766:36771  _name */\n  dup3\n    /* \"src/MockToken_flattened.sol\":36766:36779  _name = name_ */\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"src/MockToken_flattened.sol\":36789:36796  _symbol */\n  0x04\n    /* \"src/MockToken_flattened.sol\":36789:36806  _symbol = symbol_ */\n  tag_7\n    /* \"src/MockToken_flattened.sol\":36799:36806  symbol_ */\n  dup3\n    /* \"src/MockToken_flattened.sol\":36789:36796  _symbol */\n  dup3\n    /* \"src/MockToken_flattened.sol\":36789:36806  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"src/MockToken_flattened.sol\":72877:72892  Log(msg.sender) */\n  mload(0x40)\n    /* \"src/MockToken_flattened.sol\":72881:72891  msg.sender */\n  caller\n    /* \"#utility.yul\":2872:2923   */\n  dup2\n  mstore\n    /* \"src/MockToken_flattened.sol\":72877:72892  Log(msg.sender) */\n  0xb8a00d6d8ca1be30bfec34d8f97e55f0f0fd9eeb7fb46e030516363d4cfe1ad6\n  swap2\n  pop\n    /* \"#utility.yul\":2860:2862   */\n  0x20\n    /* \"#utility.yul\":2845:2863   */\n  add\n    /* \"src/MockToken_flattened.sol\":72877:72892  Log(msg.sender) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"src/MockToken_flattened.sol\":72902:72929  _mint(msg.sender, 10 ether) */\n  tag_11\n    /* \"src/MockToken_flattened.sol\":72908:72918  msg.sender */\n  caller\n    /* \"src/MockToken_flattened.sol\":72920:72928  10 ether */\n  0x8ac7230489e80000\n    /* \"src/MockToken_flattened.sol\":72902:72907  _mint */\n  tag_12\n    /* \"src/MockToken_flattened.sol\":72902:72929  _mint(msg.sender, 10 ether) */\n  jump\t// in\ntag_11:\n    /* \"src/MockToken_flattened.sol\":72939:72967  _mint(address(101), 2 ether) */\n  tag_13\n    /* \"src/MockToken_flattened.sol\":72953:72956  101 */\n  0x65\n    /* \"src/MockToken_flattened.sol\":72959:72966  2 ether */\n  0x1bc16d674ec80000\n    /* \"src/MockToken_flattened.sol\":72939:72944  _mint */\n  tag_12\n    /* \"src/MockToken_flattened.sol\":72939:72967  _mint(address(101), 2 ether) */\n  jump\t// in\ntag_13:\n    /* \"src/MockToken_flattened.sol\":72763:73068  contract mockERC20Token is ERC20(\"CDBC\", \"CDBC\") {... */\n  jump(tag_37)\n    /* \"src/MockToken_flattened.sol\":42525:42733  function _mint(address account, uint256 value) internal {... */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":42595:42616  account == address(0) */\n  dup3\n  and\n    /* \"src/MockToken_flattened.sol\":42591:42682  if (account == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"src/MockToken_flattened.sol\":42639:42671  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"src/MockToken_flattened.sol\":42668:42669  0 */\n  0x00\n    /* \"src/MockToken_flattened.sol\":42639:42671  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2872:2923   */\n  mstore\n    /* \"#utility.yul\":2845:2863   */\n  0x24\n  add\n    /* \"src/MockToken_flattened.sol\":42639:42671  ERC20InvalidReceiver(address(0)) */\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/MockToken_flattened.sol\":42591:42682  if (account == address(0)) {... */\ntag_16:\n    /* \"src/MockToken_flattened.sol\":42691:42726  _update(address(0), account, value) */\n  tag_18\n    /* \"src/MockToken_flattened.sol\":42707:42708  0 */\n  0x00\n    /* \"src/MockToken_flattened.sol\":42711:42718  account */\n  dup4\n    /* \"src/MockToken_flattened.sol\":42720:42725  value */\n  dup4\n    /* \"src/MockToken_flattened.sol\":42691:42698  _update */\n  tag_19\n    /* \"src/MockToken_flattened.sol\":42691:42726  _update(address(0), account, value) */\n  jump\t// in\ntag_18:\n    /* \"src/MockToken_flattened.sol\":42525:42733  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/MockToken_flattened.sol\":41075:42182  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":41164:41182  from == address(0) */\n  dup4\n  and\n    /* \"src/MockToken_flattened.sol\":41160:41700  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"src/MockToken_flattened.sol\":41316:41321  value */\n  dup1\n    /* \"src/MockToken_flattened.sol\":41300:41312  _totalSupply */\n  0x02\n  0x00\n    /* \"src/MockToken_flattened.sol\":41300:41321  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"src/MockToken_flattened.sol\":41160:41700  if (from == address(0)) {... */\n  tag_24\n  swap1\n  pop\n  jump\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":41374:41389  _balances[from] */\n  dup4\n  and\n    /* \"src/MockToken_flattened.sol\":41352:41371  uint256 fromBalance */\n  0x00\n    /* \"src/MockToken_flattened.sol\":41374:41389  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"src/MockToken_flattened.sol\":41407:41426  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"src/MockToken_flattened.sol\":41403:41518  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"src/MockToken_flattened.sol\":41453:41503  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3381:3413   */\n  dup6\n  and\n    /* \"src/MockToken_flattened.sol\":41453:41503  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3363:3414   */\n  mstore\n    /* \"#utility.yul\":3430:3448   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3423:3457   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3473:3491   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3466:3500   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3336:3354   */\n  0x64\n  add\n    /* \"src/MockToken_flattened.sol\":41453:41503  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_17\n    /* \"#utility.yul\":3161:3506   */\n  jump\n    /* \"src/MockToken_flattened.sol\":41403:41518  if (fromBalance < value) {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":41638:41653  _balances[from] */\n  dup5\n  and\n    /* \"src/MockToken_flattened.sol\":41638:41647  _balances */\n  0x00\n    /* \"src/MockToken_flattened.sol\":41638:41653  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"src/MockToken_flattened.sol\":41656:41675  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"src/MockToken_flattened.sol\":41638:41675  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"src/MockToken_flattened.sol\":41160:41700  if (from == address(0)) {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":41714:41730  to == address(0) */\n  dup3\n  and\n    /* \"src/MockToken_flattened.sol\":41710:42135  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"src/MockToken_flattened.sol\":41877:41889  _totalSupply */\n  0x02\n    /* \"src/MockToken_flattened.sol\":41877:41898  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"src/MockToken_flattened.sol\":41710:42135  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":42088:42101  _balances[to] */\n  dup3\n  and\n    /* \"src/MockToken_flattened.sol\":42088:42097  _balances */\n  0x00\n    /* \"src/MockToken_flattened.sol\":42088:42101  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"src/MockToken_flattened.sol\":42088:42110  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"src/MockToken_flattened.sol\":41710:42135  if (to == address(0)) {... */\ntag_29:\n    /* \"src/MockToken_flattened.sol\":42165:42167  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\n  and\n    /* \"src/MockToken_flattened.sol\":42159:42163  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"src/MockToken_flattened.sol\":42169:42174  value */\n  dup4\n    /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n    /* \"#utility.yul\":3657:3682   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3645:3647   */\n  0x20\n    /* \"#utility.yul\":3630:3648   */\n  add\n  swap1\n    /* \"#utility.yul\":3511:3688   */\n  jump\n    /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"src/MockToken_flattened.sol\":41075:42182  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_32:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_33:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_40:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_41:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1200   */\ntag_35:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1194   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":819:824   */\n  dup2\n    /* \"#utility.yul\":816:817   */\n  0x00\n    /* \"#utility.yul\":809:825   */\n  mstore\n    /* \"#utility.yul\":863:867   */\n  0x20\n    /* \"#utility.yul\":860:861   */\n  0x00\n    /* \"#utility.yul\":850:868   */\n  keccak256\n    /* \"#utility.yul\":933:935   */\n  0x1f\n    /* \"#utility.yul\":921:931   */\n  dup6\n    /* \"#utility.yul\":917:936   */\n  add\n    /* \"#utility.yul\":914:915   */\n  0x05\n    /* \"#utility.yul\":910:937   */\n  shr\n    /* \"#utility.yul\":904:908   */\n  dup2\n    /* \"#utility.yul\":900:938   */\n  add\n    /* \"#utility.yul\":969:973   */\n  0x20\n    /* \"#utility.yul\":957:967   */\n  dup7\n    /* \"#utility.yul\":954:974   */\n  lt\n    /* \"#utility.yul\":951:998   */\n  iszero\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":992:996   */\n  dup1\n    /* \"#utility.yul\":951:998   */\ntag_45:\n    /* \"#utility.yul\":1047:1049   */\n  0x1f\n    /* \"#utility.yul\":1042:1045   */\n  dup6\n    /* \"#utility.yul\":1038:1050   */\n  add\n    /* \"#utility.yul\":1035:1036   */\n  0x05\n    /* \"#utility.yul\":1031:1051   */\n  shr\n    /* \"#utility.yul\":1025:1029   */\n  dup3\n    /* \"#utility.yul\":1021:1052   */\n  add\n    /* \"#utility.yul\":1011:1052   */\n  swap2\n  pop\n    /* \"#utility.yul\":1102:1184   */\ntag_46:\n    /* \"#utility.yul\":1120:1122   */\n  dup2\n    /* \"#utility.yul\":1113:1118   */\n  dup2\n    /* \"#utility.yul\":1110:1123   */\n  lt\n    /* \"#utility.yul\":1102:1184   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1165:1182   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1146:1147   */\n  0x01\n    /* \"#utility.yul\":1135:1148   */\n  add\n    /* \"#utility.yul\":1102:1184   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1106:1109   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1194   */\ntag_44:\n    /* \"#utility.yul\":657:1200   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1376:2721   */\ntag_6:\n    /* \"#utility.yul\":1496:1506   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1518:1548   */\n  dup2\n  gt\n    /* \"#utility.yul\":1515:1571   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1551:1569   */\n  tag_52\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1580:1677   */\n  tag_53\n    /* \"#utility.yul\":1670:1676   */\n  dup2\n    /* \"#utility.yul\":1630:1668   */\n  tag_54\n    /* \"#utility.yul\":1662:1666   */\n  dup5\n    /* \"#utility.yul\":1656:1667   */\n  sload\n    /* \"#utility.yul\":1630:1668   */\n  tag_33\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1624:1628   */\n  dup5\n    /* \"#utility.yul\":1580:1677   */\n  tag_35\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1732:1736   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1789:1791   */\n  0x1f\n    /* \"#utility.yul\":1778:1792   */\n  dup4\n  gt\n    /* \"#utility.yul\":1806:1807   */\n  0x01\n    /* \"#utility.yul\":1801:2464   */\n  dup2\n  eq\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2508:2509   */\n  0x00\n    /* \"#utility.yul\":2525:2531   */\n  dup5\n    /* \"#utility.yul\":2522:2611   */\n  iszero\n  tag_57\n  jumpi\n  pop\n    /* \"#utility.yul\":2577:2596   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2571:2597   */\n  mload\n    /* \"#utility.yul\":2522:2611   */\ntag_57:\n  not(0x00)\n    /* \"#utility.yul\":1333:1334   */\n  0x03\n    /* \"#utility.yul\":1329:1340   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1325:1349   */\n  shr\n    /* \"#utility.yul\":1321:1350   */\n  not\n    /* \"#utility.yul\":1311:1351   */\n  and\n    /* \"#utility.yul\":1357:1358   */\n  0x01\n    /* \"#utility.yul\":1353:1364   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1308:1365   */\n  or\n    /* \"#utility.yul\":2624:2705   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1771:2715   */\n  jump(tag_48)\n    /* \"#utility.yul\":1801:2464   */\ntag_56:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1837:1857   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1955:2191   */\ntag_60:\n    /* \"#utility.yul\":1969:1976   */\n  dup3\n    /* \"#utility.yul\":1966:1967   */\n  dup2\n    /* \"#utility.yul\":1963:1977   */\n  lt\n    /* \"#utility.yul\":1955:2191   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2058:2077   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2052:2078   */\n  mload\n    /* \"#utility.yul\":2037:2079   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2150:2177   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2118:2119   */\n  0x01\n    /* \"#utility.yul\":2106:2120   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1985:2004   */\n  dup5\n  add\n    /* \"#utility.yul\":1955:2191   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":1959:1962   */\n  pop\n    /* \"#utility.yul\":2219:2225   */\n  dup6\n    /* \"#utility.yul\":2210:2217   */\n  dup3\n    /* \"#utility.yul\":2207:2226   */\n  lt\n    /* \"#utility.yul\":2204:2405   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2280:2299   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2274:2300   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2363:2364   */\n  0x03\n    /* \"#utility.yul\":2359:2373   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2375:2378   */\n  0xf8\n    /* \"#utility.yul\":2355:2379   */\n  and\n    /* \"#utility.yul\":2351:2388   */\n  shr\n    /* \"#utility.yul\":2347:2389   */\n  not\n    /* \"#utility.yul\":2332:2390   */\n  and\n    /* \"#utility.yul\":2317:2391   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2204:2405   */\ntag_63:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2451:2452   */\n  0x01\n    /* \"#utility.yul\":2435:2449   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2431:2453   */\n  add\n    /* \"#utility.yul\":2418:2454   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1376:2721   */\n  jump\t// out\n    /* \"#utility.yul\":2934:3156   */\ntag_23:\n    /* \"#utility.yul\":2999:3008   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3020:3030   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3017:3150   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3072:3082   */\n  0x4e487b71\n    /* \"#utility.yul\":3067:3070   */\n  0xe0\n    /* \"#utility.yul\":3063:3083   */\n  shl\n    /* \"#utility.yul\":3060:3061   */\n  0x00\n    /* \"#utility.yul\":3053:3084   */\n  mstore\n    /* \"#utility.yul\":3107:3111   */\n  0x11\n    /* \"#utility.yul\":3104:3105   */\n  0x04\n    /* \"#utility.yul\":3097:3112   */\n  mstore\n    /* \"#utility.yul\":3135:3139   */\n  0x24\n    /* \"#utility.yul\":3132:3133   */\n  0x00\n    /* \"#utility.yul\":3125:3140   */\n  revert\n    /* \"#utility.yul\":3017:3150   */\ntag_66:\n    /* \"#utility.yul\":2934:3156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3511:3688   */\ntag_37:\n    /* \"src/MockToken_flattened.sol\":72763:73068  contract mockERC20Token is ERC20(\"CDBC\", \"CDBC\") {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/MockToken_flattened.sol\":72763:73068  contract mockERC20Token is ERC20(\"CDBC\", \"CDBC\") {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/MockToken_flattened.sol\":36878:36967  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/MockToken_flattened.sol\":39097:39283  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"src/MockToken_flattened.sol\":39097:39283  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"src/MockToken_flattened.sol\":37948:38045  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"src/MockToken_flattened.sol\":38026:38038  _totalSupply */\n      sload(0x02)\n        /* \"src/MockToken_flattened.sol\":37948:38045  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"src/MockToken_flattened.sol\":37948:38045  function totalSupply() public view virtual returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"src/MockToken_flattened.sol\":39843:40087  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":37806:37888  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"src/MockToken_flattened.sol\":37879:37881  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"src/MockToken_flattened.sol\":37806:37888  function decimals() public view virtual returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"src/MockToken_flattened.sol\":72980:73066  function mint(address _to, uint _amount) external {... */\n    tag_8:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"src/MockToken_flattened.sol\":38103:38219  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_24\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":38194:38212  _balances[account] */\n      and\n        /* \"src/MockToken_flattened.sol\":38168:38175  uint256 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":38194:38212  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"src/MockToken_flattened.sol\":38103:38219  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/MockToken_flattened.sol\":37080:37173  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_14\n      tag_46\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":38414:38592  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_18\n      tag_49\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":38650:38790  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_24\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":38756:38774  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"src/MockToken_flattened.sol\":38730:38737  uint256 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":38756:38774  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":38756:38767  _allowances */\n      0x01\n        /* \"src/MockToken_flattened.sol\":38756:38774  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/MockToken_flattened.sol\":38756:38783  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"src/MockToken_flattened.sol\":38650:38790  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/MockToken_flattened.sol\":36878:36967  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"src/MockToken_flattened.sol\":36923:36936  string memory */\n      0x60\n        /* \"src/MockToken_flattened.sol\":36955:36960  _name */\n      0x03\n        /* \"src/MockToken_flattened.sol\":36948:36960  return _name */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/MockToken_flattened.sol\":36878:36967  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":39097:39283  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"src/MockToken_flattened.sol\":39170:39174  bool */\n      0x00\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n        /* \"src/MockToken_flattened.sol\":39224:39255  _approve(owner, spender, value) */\n      tag_67\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      dup2\n        /* \"src/MockToken_flattened.sol\":39240:39247  spender */\n      dup6\n        /* \"src/MockToken_flattened.sol\":39249:39254  value */\n      dup6\n        /* \"src/MockToken_flattened.sol\":39224:39232  _approve */\n      tag_68\n        /* \"src/MockToken_flattened.sol\":39224:39255  _approve(owner, spender, value) */\n      jump\t// in\n    tag_67:\n        /* \"src/MockToken_flattened.sol\":39272:39276  true */\n      0x01\n        /* \"src/MockToken_flattened.sol\":39265:39276  return true */\n      swap2\n      pop\n      pop\n        /* \"src/MockToken_flattened.sol\":39097:39283  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":39843:40087  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"src/MockToken_flattened.sol\":39930:39934  bool */\n      0x00\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n        /* \"src/MockToken_flattened.sol\":39986:40023  _spendAllowance(from, spender, value) */\n      tag_72\n        /* \"src/MockToken_flattened.sol\":40002:40006  from */\n      dup6\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      dup3\n        /* \"src/MockToken_flattened.sol\":40017:40022  value */\n      dup6\n        /* \"src/MockToken_flattened.sol\":39986:40001  _spendAllowance */\n      tag_73\n        /* \"src/MockToken_flattened.sol\":39986:40023  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_72:\n        /* \"src/MockToken_flattened.sol\":40033:40059  _transfer(from, to, value) */\n      tag_74\n        /* \"src/MockToken_flattened.sol\":40043:40047  from */\n      dup6\n        /* \"src/MockToken_flattened.sol\":40049:40051  to */\n      dup6\n        /* \"src/MockToken_flattened.sol\":40053:40058  value */\n      dup6\n        /* \"src/MockToken_flattened.sol\":40033:40042  _transfer */\n      tag_75\n        /* \"src/MockToken_flattened.sol\":40033:40059  _transfer(from, to, value) */\n      jump\t// in\n    tag_74:\n      pop\n        /* \"src/MockToken_flattened.sol\":40076:40080  true */\n      0x01\n      swap5\n        /* \"src/MockToken_flattened.sol\":39843:40087  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":72980:73066  function mint(address _to, uint _amount) external {... */\n    tag_39:\n        /* \"src/MockToken_flattened.sol\":73040:73059  _mint(_to, _amount) */\n      tag_78\n        /* \"src/MockToken_flattened.sol\":73046:73049  _to */\n      dup3\n        /* \"src/MockToken_flattened.sol\":73051:73058  _amount */\n      dup3\n        /* \"src/MockToken_flattened.sol\":73040:73045  _mint */\n      tag_79\n        /* \"src/MockToken_flattened.sol\":73040:73059  _mint(_to, _amount) */\n      jump\t// in\n    tag_78:\n        /* \"src/MockToken_flattened.sol\":72980:73066  function mint(address _to, uint _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":37080:37173  function symbol() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"src/MockToken_flattened.sol\":37127:37140  string memory */\n      0x60\n        /* \"src/MockToken_flattened.sol\":37159:37166  _symbol */\n      0x04\n        /* \"src/MockToken_flattened.sol\":37152:37166  return _symbol */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":38414:38592  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"src/MockToken_flattened.sol\":38483:38487  bool */\n      0x00\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      caller\n        /* \"src/MockToken_flattened.sol\":38537:38564  _transfer(owner, to, value) */\n      tag_67\n        /* \"src/MockToken_flattened.sol\":34750:34760  msg.sender */\n      dup2\n        /* \"src/MockToken_flattened.sol\":38554:38556  to */\n      dup6\n        /* \"src/MockToken_flattened.sol\":38558:38563  value */\n      dup6\n        /* \"src/MockToken_flattened.sol\":38537:38546  _transfer */\n      tag_75\n        /* \"src/MockToken_flattened.sol\":38537:38564  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":43793:43921  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_68:\n        /* \"src/MockToken_flattened.sol\":43877:43914  _approve(owner, spender, value, true) */\n      tag_93\n        /* \"src/MockToken_flattened.sol\":43886:43891  owner */\n      dup4\n        /* \"src/MockToken_flattened.sol\":43893:43900  spender */\n      dup4\n        /* \"src/MockToken_flattened.sol\":43902:43907  value */\n      dup4\n        /* \"src/MockToken_flattened.sol\":43909:43913  true */\n      0x01\n        /* \"src/MockToken_flattened.sol\":43877:43885  _approve */\n      tag_94\n        /* \"src/MockToken_flattened.sol\":43877:43914  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_93:\n        /* \"src/MockToken_flattened.sol\":43793:43921  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":45467:45944  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":38756:38774  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"src/MockToken_flattened.sol\":45566:45590  uint256 currentAllowance */\n      0x00\n        /* \"src/MockToken_flattened.sol\":38756:38774  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":38756:38767  _allowances */\n      0x01\n        /* \"src/MockToken_flattened.sol\":38756:38774  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/MockToken_flattened.sol\":38756:38783  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/MockToken_flattened.sol\":45632:45669  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"src/MockToken_flattened.sol\":45628:45938  if (currentAllowance != type(uint256).max) {... */\n      tag_101\n      jumpi\n        /* \"src/MockToken_flattened.sol\":45708:45713  value */\n      dup2\n        /* \"src/MockToken_flattened.sol\":45689:45705  currentAllowance */\n      dup2\n        /* \"src/MockToken_flattened.sol\":45689:45713  currentAllowance < value */\n      lt\n        /* \"src/MockToken_flattened.sol\":45685:45815  if (currentAllowance < value) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"src/MockToken_flattened.sol\":45740:45800  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2961:2993   */\n      dup5\n      and\n        /* \"src/MockToken_flattened.sol\":45740:45800  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2943:2994   */\n      mstore\n        /* \"#utility.yul\":3010:3028   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3003:3037   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3053:3071   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3046:3080   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2916:2934   */\n      0x64\n      add\n        /* \"src/MockToken_flattened.sol\":45740:45800  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/MockToken_flattened.sol\":45685:45815  if (currentAllowance < value) {... */\n    tag_98:\n        /* \"src/MockToken_flattened.sol\":45856:45913  _approve(owner, spender, currentAllowance - value, false) */\n      tag_101\n        /* \"src/MockToken_flattened.sol\":45865:45870  owner */\n      dup5\n        /* \"src/MockToken_flattened.sol\":45872:45879  spender */\n      dup5\n        /* \"src/MockToken_flattened.sol\":45900:45905  value */\n      dup5\n        /* \"src/MockToken_flattened.sol\":45881:45897  currentAllowance */\n      dup5\n        /* \"src/MockToken_flattened.sol\":45881:45905  currentAllowance - value */\n      sub\n        /* \"src/MockToken_flattened.sol\":45907:45912  false */\n      0x00\n        /* \"src/MockToken_flattened.sol\":45856:45864  _approve */\n      tag_94\n        /* \"src/MockToken_flattened.sol\":45856:45913  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_101:\n        /* \"src/MockToken_flattened.sol\":45556:45944  {... */\n      pop\n        /* \"src/MockToken_flattened.sol\":45467:45944  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":40460:40760  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":40543:40561  from == address(0) */\n      dup4\n      and\n        /* \"src/MockToken_flattened.sol\":40539:40625  if (from == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"src/MockToken_flattened.sol\":40584:40614  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":40611:40612  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":40584:40614  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":40584:40614  ERC20InvalidSender(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"src/MockToken_flattened.sol\":40539:40625  if (from == address(0)) {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":40638:40654  to == address(0) */\n      dup3\n      and\n        /* \"src/MockToken_flattened.sol\":40634:40720  if (to == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"src/MockToken_flattened.sol\":40677:40709  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":40706:40707  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":40677:40709  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":40677:40709  ERC20InvalidReceiver(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"src/MockToken_flattened.sol\":40634:40720  if (to == address(0)) {... */\n    tag_106:\n        /* \"src/MockToken_flattened.sol\":40729:40753  _update(from, to, value) */\n      tag_93\n        /* \"src/MockToken_flattened.sol\":40737:40741  from */\n      dup4\n        /* \"src/MockToken_flattened.sol\":40743:40745  to */\n      dup4\n        /* \"src/MockToken_flattened.sol\":40747:40752  value */\n      dup4\n        /* \"src/MockToken_flattened.sol\":40729:40736  _update */\n      tag_109\n        /* \"src/MockToken_flattened.sol\":40729:40753  _update(from, to, value) */\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":42525:42733  function _mint(address account, uint256 value) internal {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":42595:42616  account == address(0) */\n      dup3\n      and\n        /* \"src/MockToken_flattened.sol\":42591:42682  if (account == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"src/MockToken_flattened.sol\":42639:42671  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":42668:42669  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":42639:42671  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":42639:42671  ERC20InvalidReceiver(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"src/MockToken_flattened.sol\":42591:42682  if (account == address(0)) {... */\n    tag_111:\n        /* \"src/MockToken_flattened.sol\":42691:42726  _update(address(0), account, value) */\n      tag_78\n        /* \"src/MockToken_flattened.sol\":42707:42708  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":42711:42718  account */\n      dup4\n        /* \"src/MockToken_flattened.sol\":42720:42725  value */\n      dup4\n        /* \"src/MockToken_flattened.sol\":42691:42698  _update */\n      tag_109\n        /* \"src/MockToken_flattened.sol\":42691:42726  _update(address(0), account, value) */\n      jump\t// in\n        /* \"src/MockToken_flattened.sol\":44753:45185  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":44865:44884  owner == address(0) */\n      dup5\n      and\n        /* \"src/MockToken_flattened.sol\":44861:44950  if (owner == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"src/MockToken_flattened.sol\":44907:44939  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":44936:44937  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":44907:44939  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":44907:44939  ERC20InvalidApprover(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"src/MockToken_flattened.sol\":44861:44950  if (owner == address(0)) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":44963:44984  spender == address(0) */\n      dup4\n      and\n        /* \"src/MockToken_flattened.sol\":44959:45049  if (spender == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"src/MockToken_flattened.sol\":45007:45038  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":45035:45036  0 */\n      0x00\n        /* \"src/MockToken_flattened.sol\":45007:45038  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"src/MockToken_flattened.sol\":45007:45038  ERC20InvalidSpender(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"src/MockToken_flattened.sol\":44959:45049  if (spender == address(0)) {... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":45058:45076  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/MockToken_flattened.sol\":45058:45069  _allowances */\n      0x01\n        /* \"src/MockToken_flattened.sol\":45058:45076  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/MockToken_flattened.sol\":45058:45085  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"src/MockToken_flattened.sol\":45058:45093  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"src/MockToken_flattened.sol\":45103:45179  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_101\n      jumpi\n        /* \"src/MockToken_flattened.sol\":45153:45160  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":45137:45168  Approval(owner, spender, value) */\n      and\n        /* \"src/MockToken_flattened.sol\":45146:45151  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":45137:45168  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"src/MockToken_flattened.sol\":45162:45167  value */\n      dup5\n        /* \"src/MockToken_flattened.sol\":45137:45168  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_120\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"src/MockToken_flattened.sol\":45137:45168  Approval(owner, spender, value) */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/MockToken_flattened.sol\":44753:45185  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/MockToken_flattened.sol\":41075:42182  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":41164:41182  from == address(0) */\n      dup4\n      and\n        /* \"src/MockToken_flattened.sol\":41160:41700  if (from == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"src/MockToken_flattened.sol\":41316:41321  value */\n      dup1\n        /* \"src/MockToken_flattened.sol\":41300:41312  _totalSupply */\n      0x02\n      0x00\n        /* \"src/MockToken_flattened.sol\":41300:41321  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/MockToken_flattened.sol\":41160:41700  if (from == address(0)) {... */\n      tag_125\n      swap1\n      pop\n      jump\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":41374:41389  _balances[from] */\n      dup4\n      and\n        /* \"src/MockToken_flattened.sol\":41352:41371  uint256 fromBalance */\n      0x00\n        /* \"src/MockToken_flattened.sol\":41374:41389  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/MockToken_flattened.sol\":41407:41426  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"src/MockToken_flattened.sol\":41403:41518  if (fromBalance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"src/MockToken_flattened.sol\":41453:41503  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2961:2993   */\n      dup6\n      and\n        /* \"src/MockToken_flattened.sol\":41453:41503  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2943:2994   */\n      mstore\n        /* \"#utility.yul\":3010:3028   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3003:3037   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3053:3071   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3046:3080   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2916:2934   */\n      0x64\n      add\n        /* \"src/MockToken_flattened.sol\":41453:41503  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_99\n        /* \"#utility.yul\":2741:3086   */\n      jump\n        /* \"src/MockToken_flattened.sol\":41403:41518  if (fromBalance < value) {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":41638:41653  _balances[from] */\n      dup5\n      and\n        /* \"src/MockToken_flattened.sol\":41638:41647  _balances */\n      0x00\n        /* \"src/MockToken_flattened.sol\":41638:41653  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/MockToken_flattened.sol\":41656:41675  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"src/MockToken_flattened.sol\":41638:41675  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"src/MockToken_flattened.sol\":41160:41700  if (from == address(0)) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":41714:41730  to == address(0) */\n      dup3\n      and\n        /* \"src/MockToken_flattened.sol\":41710:42135  if (to == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"src/MockToken_flattened.sol\":41877:41889  _totalSupply */\n      0x02\n        /* \"src/MockToken_flattened.sol\":41877:41898  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"src/MockToken_flattened.sol\":41710:42135  if (to == address(0)) {... */\n      jump(tag_129)\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":42088:42101  _balances[to] */\n      dup3\n      and\n        /* \"src/MockToken_flattened.sol\":42088:42097  _balances */\n      0x00\n        /* \"src/MockToken_flattened.sol\":42088:42101  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/MockToken_flattened.sol\":42088:42110  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"src/MockToken_flattened.sol\":41710:42135  if (to == address(0)) {... */\n    tag_129:\n        /* \"src/MockToken_flattened.sol\":42165:42167  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\n      and\n        /* \"src/MockToken_flattened.sol\":42159:42163  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/MockToken_flattened.sol\":42169:42174  value */\n      dup4\n        /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\n      mload(0x40)\n      tag_130\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"src/MockToken_flattened.sol\":42150:42175  Transfer(from, to, value) */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/MockToken_flattened.sol\":41075:42182  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_17:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_134:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_134)\n    tag_136:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_131:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_138:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_20:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_140:\n        /* \"#utility.yul\":913:942   */\n      tag_141\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_131\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_30:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_145:\n        /* \"#utility.yul\":1563:1592   */\n      tag_146\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_131\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_147\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_131\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_42:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_150:\n        /* \"#utility.yul\":2051:2080   */\n      tag_151\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_131\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_54:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_153:\n        /* \"#utility.yul\":2259:2288   */\n      tag_154\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_131\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_155\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_131\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_59:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_157:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_158:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3299:3521   */\n    tag_124:\n        /* \"#utility.yul\":3364:3373   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3385:3395   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3382:3515   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":3437:3447   */\n      0x4e487b71\n        /* \"#utility.yul\":3432:3435   */\n      0xe0\n        /* \"#utility.yul\":3428:3448   */\n      shl\n        /* \"#utility.yul\":3425:3426   */\n      0x00\n        /* \"#utility.yul\":3418:3449   */\n      mstore\n        /* \"#utility.yul\":3472:3476   */\n      0x11\n        /* \"#utility.yul\":3469:3470   */\n      0x04\n        /* \"#utility.yul\":3462:3477   */\n      mstore\n        /* \"#utility.yul\":3500:3504   */\n      0x24\n        /* \"#utility.yul\":3497:3498   */\n      0x00\n        /* \"#utility.yul\":3490:3505   */\n      revert\n\n    auxdata: 0xa2646970667358221220837a12b758e5c4db63a13487b813c95bf6eae258edd8f3e3f47e870ac691bb6864736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1648": {
									"entryPoint": null,
									"id": 1648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3425": {
									"entryPoint": null,
									"id": 3425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1951": {
									"entryPoint": 194,
									"id": 1951,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_1918": {
									"entryPoint": 260,
									"id": 1918,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3690:1",
										"nodeType": "YulBlock",
										"src": "0:3690:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:462:1",
													"nodeType": "YulBlock",
													"src": "738:462:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:423:1",
																"nodeType": "YulBlock",
																"src": "771:423:1",
																"statements": [
																	{
																		"nativeSrc": "785:11:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "795:1:1",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "789:2:1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "816:1:1",
																					"nodeType": "YulLiteral",
																					"src": "816:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "819:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "819:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "809:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nativeSrc": "809:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "809:16:1"
																		},
																		"nativeSrc": "809:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "809:16:1"
																	},
																	{
																		"nativeSrc": "838:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "838:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "860:1:1",
																					"nodeType": "YulLiteral",
																					"src": "860:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "863:4:1",
																					"nodeType": "YulLiteral",
																					"src": "863:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "850:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "850:9:1"
																			},
																			"nativeSrc": "850:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "850:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "842:4:1",
																				"nodeType": "YulTypedName",
																				"src": "842:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "881:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "881:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "904:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "904:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "914:1:1",
																							"nodeType": "YulLiteral",
																							"src": "914:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "921:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "921:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "933:2:1",
																									"nodeType": "YulLiteral",
																									"src": "933:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "917:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "917:3:1"
																							},
																							"nativeSrc": "917:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "917:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "910:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "910:3:1"
																					},
																					"nativeSrc": "910:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "910:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "900:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "900:3:1"
																			},
																			"nativeSrc": "900:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "900:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "885:11:1",
																				"nodeType": "YulTypedName",
																				"src": "885:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "975:23:1",
																			"nodeType": "YulBlock",
																			"src": "975:23:1",
																			"statements": [
																				{
																					"nativeSrc": "977:19:1",
																					"nodeType": "YulAssignment",
																					"src": "977:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "992:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "992:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "977:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "977:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "957:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "957:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "969:4:1",
																					"nodeType": "YulLiteral",
																					"src": "969:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "954:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "954:2:1"
																			},
																			"nativeSrc": "954:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "954:20:1"
																		},
																		"nativeSrc": "951:47:1",
																		"nodeType": "YulIf",
																		"src": "951:47:1"
																	},
																	{
																		"nativeSrc": "1011:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1011:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1025:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1025:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1035:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1035:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1042:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1042:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1047:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1047:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1038:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1038:3:1"
																							},
																							"nativeSrc": "1038:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1038:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1031:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1031:3:1"
																					},
																					"nativeSrc": "1031:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1031:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1021:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1021:3:1"
																			},
																			"nativeSrc": "1021:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1021:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1015:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1015:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1065:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1065:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1078:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1069:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1069:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1163:21:1",
																			"nodeType": "YulBlock",
																			"src": "1163:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1172:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1172:5:1"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "1179:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "1179:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1165:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1165:6:1"
																						},
																						"nativeSrc": "1165:17:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1165:17:1"
																					},
																					"nativeSrc": "1165:17:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1165:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1113:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1113:5:1"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1120:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1120:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1110:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1110:2:1"
																			},
																			"nativeSrc": "1110:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1110:13:1"
																		},
																		"nativeSrc": "1102:82:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1124:26:1",
																			"nodeType": "YulBlock",
																			"src": "1124:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1126:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1126:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1139:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1139:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1146:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1146:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1135:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1135:3:1"
																						},
																						"nativeSrc": "1135:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1135:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1126:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1126:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1106:3:1",
																			"nodeType": "YulBlock",
																			"src": "1106:3:1",
																			"statements": []
																		},
																		"src": "1102:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:446:1",
															"nodeType": "YulIf",
															"src": "748:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:543:1"
											},
											{
												"body": {
													"nativeSrc": "1290:81:1",
													"nodeType": "YulBlock",
													"src": "1290:81:1",
													"statements": [
														{
															"nativeSrc": "1300:65:1",
															"nodeType": "YulAssignment",
															"src": "1300:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1315:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1315:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1333:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1333:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1336:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1336:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1329:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1329:3:1"
																								},
																								"nativeSrc": "1329:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1329:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1346:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1346:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1342:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1342:3:1"
																								},
																								"nativeSrc": "1342:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1342:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1325:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1325:3:1"
																						},
																						"nativeSrc": "1325:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1325:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1321:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1321:3:1"
																				},
																				"nativeSrc": "1321:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1321:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1311:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:1"
																		},
																		"nativeSrc": "1311:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1357:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1357:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1360:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1360:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1353:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:1"
																		},
																		"nativeSrc": "1353:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1308:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:1"
																},
																"nativeSrc": "1308:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1308:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1300:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1300:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1205:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1267:4:1",
														"nodeType": "YulTypedName",
														"src": "1267:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1273:3:1",
														"nodeType": "YulTypedName",
														"src": "1273:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1281:4:1",
														"nodeType": "YulTypedName",
														"src": "1281:4:1",
														"type": ""
													}
												],
												"src": "1205:166:1"
											},
											{
												"body": {
													"nativeSrc": "1472:1249:1",
													"nodeType": "YulBlock",
													"src": "1472:1249:1",
													"statements": [
														{
															"nativeSrc": "1482:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1482:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1502:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1502:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1496:5:1"
																},
																"nativeSrc": "1496:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1496:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1486:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1486:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1549:22:1",
																"nodeType": "YulBlock",
																"src": "1549:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1551:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1551:16:1"
																			},
																			"nativeSrc": "1551:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1551:18:1"
																		},
																		"nativeSrc": "1551:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1551:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1521:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1537:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1537:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1541:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1541:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1533:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1533:3:1"
																				},
																				"nativeSrc": "1533:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1533:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1545:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1545:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1529:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:1"
																		},
																		"nativeSrc": "1529:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1518:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1518:2:1"
																},
																"nativeSrc": "1518:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1518:30:1"
															},
															"nativeSrc": "1515:56:1",
															"nodeType": "YulIf",
															"src": "1515:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1624:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1662:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1662:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1656:5:1"
																				},
																				"nativeSrc": "1656:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1656:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1630:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:25:1"
																		},
																		"nativeSrc": "1630:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1670:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1580:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1580:43:1"
																},
																"nativeSrc": "1580:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1580:97:1"
															},
															"nativeSrc": "1580:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1580:97:1"
														},
														{
															"nativeSrc": "1686:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1686:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1703:1:1",
																"nodeType": "YulLiteral",
																"src": "1703:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1690:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1690:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1713:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1713:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1732:4:1",
																"nodeType": "YulLiteral",
																"src": "1732:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1717:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1717:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1745:17:1",
															"nodeType": "YulAssignment",
															"src": "1745:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1758:4:1",
																"nodeType": "YulLiteral",
																"src": "1758:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1745:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1745:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1808:656:1",
																		"nodeType": "YulBlock",
																		"src": "1808:656:1",
																		"statements": [
																			{
																				"nativeSrc": "1822:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1822:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1841:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1841:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1853:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1853:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1849:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1849:3:1"
																							},
																							"nativeSrc": "1849:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1849:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1837:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1837:3:1"
																					},
																					"nativeSrc": "1837:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1837:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1826:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1826:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1870:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1870:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1914:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1914:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1884:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1884:29:1"
																					},
																					"nativeSrc": "1884:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1884:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1874:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1874:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1932:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1932:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1941:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1936:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1936:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2019:172:1",
																					"nodeType": "YulBlock",
																					"src": "2019:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2044:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2044:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2062:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2062:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2067:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2067:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2058:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2058:3:1"
																												},
																												"nativeSrc": "2058:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2058:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2052:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2052:5:1"
																										},
																										"nativeSrc": "2052:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2052:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2037:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2037:6:1"
																								},
																								"nativeSrc": "2037:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2037:42:1"
																							},
																							"nativeSrc": "2037:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2037:42:1"
																						},
																						{
																							"nativeSrc": "2096:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2096:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2110:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2110:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2118:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2118:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2106:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2106:3:1"
																								},
																								"nativeSrc": "2106:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2106:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2096:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2096:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2137:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2137:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2154:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2154:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2165:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2165:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2150:3:1"
																								},
																								"nativeSrc": "2150:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2150:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2137:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2137:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1966:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1966:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1969:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1969:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1963:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1963:2:1"
																					},
																					"nativeSrc": "1963:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1963:14:1"
																				},
																				"nativeSrc": "1955:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1978:28:1",
																					"nodeType": "YulBlock",
																					"src": "1978:28:1",
																					"statements": [
																						{
																							"nativeSrc": "1980:24:1",
																							"nodeType": "YulAssignment",
																							"src": "1980:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1989:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1989:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1992:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "1992:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1985:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1985:3:1"
																								},
																								"nativeSrc": "1985:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1985:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1980:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1980:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1959:3:1",
																					"nodeType": "YulBlock",
																					"src": "1959:3:1",
																					"statements": []
																				},
																				"src": "1955:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2239:166:1",
																					"nodeType": "YulBlock",
																					"src": "2239:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2257:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2257:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2284:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2284:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2289:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2289:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2280:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2280:3:1"
																										},
																										"nativeSrc": "2280:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2280:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2274:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2274:5:1"
																								},
																								"nativeSrc": "2274:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2274:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2261:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2261:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2324:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2324:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2336:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2336:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2363:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2363:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2366:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2366:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2359:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2359:3:1"
																																		},
																																		"nativeSrc": "2359:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2359:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2375:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2375:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2355:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2355:3:1"
																																},
																																"nativeSrc": "2355:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2355:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2385:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2385:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2381:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2381:3:1"
																																},
																																"nativeSrc": "2381:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2381:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2351:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2351:3:1"
																														},
																														"nativeSrc": "2351:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2351:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2347:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2347:3:1"
																												},
																												"nativeSrc": "2347:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2347:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2332:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2332:3:1"
																										},
																										"nativeSrc": "2332:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2332:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2317:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2317:6:1"
																								},
																								"nativeSrc": "2317:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2317:74:1"
																							},
																							"nativeSrc": "2317:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2317:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2210:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2210:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2219:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2219:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2207:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2207:2:1"
																					},
																					"nativeSrc": "2207:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2207:19:1"
																				},
																				"nativeSrc": "2204:201:1",
																				"nodeType": "YulIf",
																				"src": "2204:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2425:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2425:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2439:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2439:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2442:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2442:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2435:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2435:3:1"
																									},
																									"nativeSrc": "2435:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2435:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2451:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2451:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2431:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2431:3:1"
																							},
																							"nativeSrc": "2431:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2431:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2418:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2418:6:1"
																					},
																					"nativeSrc": "2418:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2418:36:1"
																				},
																				"nativeSrc": "2418:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2418:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1801:663:1",
																	"nodeType": "YulCase",
																	"src": "1801:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1806:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1806:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2481:234:1",
																		"nodeType": "YulBlock",
																		"src": "2481:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2495:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2495:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2508:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2508:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2499:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2499:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2544:67:1",
																					"nodeType": "YulBlock",
																					"src": "2544:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2562:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2562:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2581:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2581:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2586:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2586:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2577:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2577:3:1"
																										},
																										"nativeSrc": "2577:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2577:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2571:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								},
																								"nativeSrc": "2571:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2571:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2562:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2562:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2525:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2525:6:1"
																				},
																				"nativeSrc": "2522:89:1",
																				"nodeType": "YulIf",
																				"src": "2522:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2631:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2631:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2690:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2690:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2697:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2697:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2637:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2637:52:1"
																							},
																							"nativeSrc": "2637:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2637:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2624:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2624:6:1"
																					},
																					"nativeSrc": "2624:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2624:81:1"
																				},
																				"nativeSrc": "2624:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2624:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2473:242:1",
																	"nodeType": "YulCase",
																	"src": "2473:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1781:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1781:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1789:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1778:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:1"
																},
																"nativeSrc": "1778:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1778:14:1"
															},
															"nativeSrc": "1771:944:1",
															"nodeType": "YulSwitch",
															"src": "1771:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1376:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1457:4:1",
														"nodeType": "YulTypedName",
														"src": "1457:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1463:3:1",
														"nodeType": "YulTypedName",
														"src": "1463:3:1",
														"type": ""
													}
												],
												"src": "1376:1345:1"
											},
											{
												"body": {
													"nativeSrc": "2827:102:1",
													"nodeType": "YulBlock",
													"src": "2827:102:1",
													"statements": [
														{
															"nativeSrc": "2837:26:1",
															"nodeType": "YulAssignment",
															"src": "2837:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2849:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2849:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:1"
																},
																"nativeSrc": "2845:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2845:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2837:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2837:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2879:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2879:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2894:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2910:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2910:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2915:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2915:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2906:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2906:3:1"
																						},
																						"nativeSrc": "2906:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2906:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2919:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2919:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2902:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2902:3:1"
																				},
																				"nativeSrc": "2902:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2902:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2890:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2890:3:1"
																		},
																		"nativeSrc": "2890:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2890:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2872:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:1"
																},
																"nativeSrc": "2872:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2872:51:1"
															},
															"nativeSrc": "2872:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2872:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2726:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2796:9:1",
														"nodeType": "YulTypedName",
														"src": "2796:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2807:6:1",
														"nodeType": "YulTypedName",
														"src": "2807:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2818:4:1",
														"nodeType": "YulTypedName",
														"src": "2818:4:1",
														"type": ""
													}
												],
												"src": "2726:203:1"
											},
											{
												"body": {
													"nativeSrc": "2982:174:1",
													"nodeType": "YulBlock",
													"src": "2982:174:1",
													"statements": [
														{
															"nativeSrc": "2992:16:1",
															"nodeType": "YulAssignment",
															"src": "2992:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3003:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3003:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3006:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3006:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2999:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2999:3:1"
																},
																"nativeSrc": "2999:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2999:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2992:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3039:111:1",
																"nodeType": "YulBlock",
																"src": "3039:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3060:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3067:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3067:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3072:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3072:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3063:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3063:3:1"
																					},
																					"nativeSrc": "3063:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3063:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3053:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3053:6:1"
																			},
																			"nativeSrc": "3053:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3053:31:1"
																		},
																		"nativeSrc": "3053:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3104:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3104:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3107:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3107:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3097:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3097:6:1"
																			},
																			"nativeSrc": "3097:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3097:15:1"
																		},
																		"nativeSrc": "3097:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3097:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3132:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3135:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3135:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3125:6:1"
																			},
																			"nativeSrc": "3125:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3125:15:1"
																		},
																		"nativeSrc": "3125:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3125:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3023:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3023:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3026:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3026:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3020:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3020:2:1"
																},
																"nativeSrc": "3020:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3020:10:1"
															},
															"nativeSrc": "3017:133:1",
															"nodeType": "YulIf",
															"src": "3017:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2934:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2965:1:1",
														"nodeType": "YulTypedName",
														"src": "2965:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2968:1:1",
														"nodeType": "YulTypedName",
														"src": "2968:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2974:3:1",
														"nodeType": "YulTypedName",
														"src": "2974:3:1",
														"type": ""
													}
												],
												"src": "2934:222:1"
											},
											{
												"body": {
													"nativeSrc": "3318:188:1",
													"nodeType": "YulBlock",
													"src": "3318:188:1",
													"statements": [
														{
															"nativeSrc": "3328:26:1",
															"nodeType": "YulAssignment",
															"src": "3328:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3340:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3351:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3336:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3336:3:1"
																},
																"nativeSrc": "3336:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3336:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3328:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3328:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3370:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3385:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3385:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3401:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3401:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3406:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3406:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3397:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3397:3:1"
																						},
																						"nativeSrc": "3397:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3397:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3410:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3410:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3393:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3393:3:1"
																				},
																				"nativeSrc": "3393:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3393:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3381:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3381:3:1"
																		},
																		"nativeSrc": "3381:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3381:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3363:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3363:6:1"
																},
																"nativeSrc": "3363:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3363:51:1"
															},
															"nativeSrc": "3363:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3363:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3434:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3445:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3445:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3430:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:1"
																		},
																		"nativeSrc": "3430:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3430:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3450:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3423:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:1"
																},
																"nativeSrc": "3423:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3423:34:1"
															},
															"nativeSrc": "3423:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3423:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3477:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3488:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3488:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:1"
																		},
																		"nativeSrc": "3473:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3473:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3493:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3493:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:1"
																},
																"nativeSrc": "3466:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3466:34:1"
															},
															"nativeSrc": "3466:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3466:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3161:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3271:9:1",
														"nodeType": "YulTypedName",
														"src": "3271:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3282:6:1",
														"nodeType": "YulTypedName",
														"src": "3282:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3290:6:1",
														"nodeType": "YulTypedName",
														"src": "3290:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3298:6:1",
														"nodeType": "YulTypedName",
														"src": "3298:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3309:4:1",
														"nodeType": "YulTypedName",
														"src": "3309:4:1",
														"type": ""
													}
												],
												"src": "3161:345:1"
											},
											{
												"body": {
													"nativeSrc": "3612:76:1",
													"nodeType": "YulBlock",
													"src": "3612:76:1",
													"statements": [
														{
															"nativeSrc": "3622:26:1",
															"nodeType": "YulAssignment",
															"src": "3622:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3634:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3634:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3645:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3630:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3630:3:1"
																},
																"nativeSrc": "3630:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3630:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3622:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3622:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3664:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3664:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3675:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3675:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:1"
																},
																"nativeSrc": "3657:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3657:25:1"
															},
															"nativeSrc": "3657:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3657:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3511:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3581:9:1",
														"nodeType": "YulTypedName",
														"src": "3581:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3592:6:1",
														"nodeType": "YulTypedName",
														"src": "3592:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3603:4:1",
														"nodeType": "YulTypedName",
														"src": "3603:4:1",
														"type": ""
													}
												],
												"src": "3511:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040805180820182526004808252634344424360e01b60208084018290528451808601909552918452908301529060036200004e8382620002de565b5060046200005d8282620002de565b50506040513381527fb8a00d6d8ca1be30bfec34d8f97e55f0f0fd9eeb7fb46e030516363d4cfe1ad6915060200160405180910390a1620000a733678ac7230489e80000620000c2565b620000bc6065671bc16d674ec80000620000c2565b620003d2565b6001600160a01b038216620000f25760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620001006000838362000104565b5050565b6001600160a01b03831662000133578060026000828254620001279190620003aa565b90915550620001a79050565b6001600160a01b03831660009081526020819052604090205481811015620001885760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000e9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001c557600280548290039055620001e4565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022a91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026257607f821691505b6020821081036200028357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d9576000816000526020600020601f850160051c81016020861015620002b45750805b601f850160051c820191505b81811015620002d557828155600101620002c0565b5050505b505050565b81516001600160401b03811115620002fa57620002fa62000237565b62000312816200030b84546200024d565b8462000289565b602080601f8311600181146200034a5760008415620003315750858301515b600019600386901b1c1916600185901b178555620002d5565b600085815260208120601f198616915b828110156200037b578886015182559484019460019091019084016200035a565b50858210156200039a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003cc57634e487b7160e01b600052601160045260246000fd5b92915050565b61078580620003e26000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105ce565b60405180910390f35b6100d46100cf366004610639565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610663565b610256565b604051601281526020016100b8565b61012b610126366004610639565b61027a565b005b6100e861013b36600461069f565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610639565b610297565b6100e861017f3660046106c1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f4565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f4565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033a565b506001949350505050565b6102848282610399565b5050565b6060600480546101b9906106f4565b60003361024a81858561033a565b6102b283838360016103cf565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610334578181101561032557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610334848484840360006103cf565b50505050565b6001600160a01b03831661036457604051634b637e8f60e11b81526000600482015260240161031c565b6001600160a01b03821661038e5760405163ec442f0560e01b81526000600482015260240161031c565b6102b28383836104a4565b6001600160a01b0382166103c35760405163ec442f0560e01b81526000600482015260240161031c565b610284600083836104a4565b6001600160a01b0384166103f95760405163e602df0560e01b81526000600482015260240161031c565b6001600160a01b03831661042357604051634a1406b160e11b81526000600482015260240161031c565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049691815260200190565b60405180910390a350505050565b6001600160a01b0383166104cf5780600260008282546104c4919061072e565b909155506105419050565b6001600160a01b038316600090815260208190526040902054818110156105225760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055d5760028054829003905561057c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c191815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156105fc578581018301518582016040015282016105e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063457600080fd5b919050565b6000806040838503121561064c57600080fd5b6106558361061d565b946020939093013593505050565b60008060006060848603121561067857600080fd5b6106818461061d565b925061068f6020850161061d565b9150604084013590509250925092565b6000602082840312156106b157600080fd5b6106ba8261061d565b9392505050565b600080604083850312156106d457600080fd5b6106dd8361061d565b91506106eb6020840161061d565b90509250929050565b600181811c9082168061070857607f821691505b60208210810361072857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea2646970667358221220837a12b758e5c4db63a13487b813c95bf6eae258edd8f3e3f47e870ac691bb6864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x43444243 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP1 PUSH1 0x3 PUSH3 0x4E DUP4 DUP3 PUSH3 0x2DE JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x5D DUP3 DUP3 PUSH3 0x2DE JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0xB8A00D6D8CA1BE30BFEC34D8F97E55F0F0FD9EEB7FB46E030516363D4CFE1AD6 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH3 0xA7 CALLER PUSH8 0x8AC7230489E80000 PUSH3 0xC2 JUMP JUMPDEST PUSH3 0xBC PUSH1 0x65 PUSH8 0x1BC16D674EC80000 PUSH3 0xC2 JUMP JUMPDEST PUSH3 0x3D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xF2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x100 PUSH1 0x0 DUP4 DUP4 PUSH3 0x104 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x133 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x127 SWAP2 SWAP1 PUSH3 0x3AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x1A7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x188 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1C5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x22A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x262 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x283 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2D9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2B4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2D5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2FA JUMPI PUSH3 0x2FA PUSH3 0x237 JUMP JUMPDEST PUSH3 0x312 DUP2 PUSH3 0x30B DUP5 SLOAD PUSH3 0x24D JUMP JUMPDEST DUP5 PUSH3 0x289 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x34A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x331 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2D5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x37B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x35A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x39A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x3CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x785 DUP1 PUSH3 0x3E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x288 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x232 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x207 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x232 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x215 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x264 DUP6 DUP3 DUP6 PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x26F DUP6 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284 DUP3 DUP3 PUSH2 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x334 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x334 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x284 PUSH1 0x0 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x334 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x541 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x655 DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x681 DUP5 PUSH2 0x61D JUMP JUMPDEST SWAP3 POP PUSH2 0x68F PUSH1 0x20 DUP6 ADD PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH2 0x6EB PUSH1 0x20 DUP5 ADD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x708 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x728 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 PUSH27 0x12B758E5C4DB63A13487B813C95BF6EAE258EDD8F3E3F47E870AC6 SWAP2 0xBB PUSH9 0x64736F6C6343000817 STOP CALLER ",
							"sourceMap": "72763:305:0:-:0;;;72848:126;;;;;;;;;-1:-1:-1;36700:113:0;;;;;;;;;;;;-1:-1:-1;;;36700:113:0;;;;;;;;;;;;;;;;;;;;;;;36766:5;:13;36700:113;36766:5;:13;:::i;:::-;-1:-1:-1;36789:7:0;:17;36799:7;36789;:17;:::i;:::-;-1:-1:-1;;72877:15:0;;72881:10;2872:51:1;;72877:15:0;;-1:-1:-1;2860:2:1;2845:18;72877:15:0;;;;;;;72902:27;72908:10;72920:8;72902:5;:27::i;:::-;72939:28;72953:3;72959:7;72939:5;:28::i;:::-;72763:305;;42525:208;-1:-1:-1;;;;;42595:21:0;;42591:91;;42639:32;;-1:-1:-1;;;42639:32:0;;42668:1;42639:32;;;2872:51:1;2845:18;;42639:32:0;;;;;;;;42591:91;42691:35;42707:1;42711:7;42720:5;42691:7;:35::i;:::-;42525:208;;:::o;41075:1107::-;-1:-1:-1;;;;;41164:18:0;;41160:540;;41316:5;41300:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;41160:540:0;;-1:-1:-1;41160:540:0;;-1:-1:-1;;;;;41374:15:0;;41352:19;41374:15;;;;;;;;;;;41407:19;;;41403:115;;;41453:50;;-1:-1:-1;;;41453:50:0;;-1:-1:-1;;;;;3381:32:1;;41453:50:0;;;3363:51:1;3430:18;;;3423:34;;;3473:18;;;3466:34;;;3336:18;;41453:50:0;3161:345:1;41403:115:0;-1:-1:-1;;;;;41638:15:0;;:9;:15;;;;;;;;;;41656:19;;;;41638:37;;41160:540;-1:-1:-1;;;;;41714:16:0;;41710:425;;41877:12;:21;;;;;;;41710:425;;;-1:-1:-1;;;;;42088:13:0;;:9;:13;;;;;;;;;;:22;;;;;;41710:425;42165:2;-1:-1:-1;;;;;42150:25:0;42159:4;-1:-1:-1;;;;;42150:25:0;;42169:5;42150:25;;;;3657::1;;3645:2;3630:18;;3511:177;42150:25:0;;;;;;;;41075:1107;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:1;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:1;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:1;;;2571:26;2522:89;-1:-1:-1;;1333:1:1;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:1;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:1;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:1;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:1:o;2934:222::-;2999:9;;;3020:10;;;3017:133;;;3072:10;3067:3;3063:20;3060:1;3053:31;3107:4;3104:1;3097:15;3135:4;3132:1;3125:15;3017:133;2934:222;;;;:::o;3511:177::-;72763:305:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_2002": {
									"entryPoint": 677,
									"id": 2002,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2062": {
									"entryPoint": 975,
									"id": 2062,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1951": {
									"entryPoint": 921,
									"id": 1951,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1587": {
									"entryPoint": null,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_2110": {
									"entryPoint": 695,
									"id": 2110,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1841": {
									"entryPoint": 826,
									"id": 1841,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1918": {
									"entryPoint": 1188,
									"id": 1918,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1738": {
									"entryPoint": null,
									"id": 1738,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1762": {
									"entryPoint": 572,
									"id": 1762,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1697": {
									"entryPoint": null,
									"id": 1697,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1675": {
									"entryPoint": null,
									"id": 1675,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_3438": {
									"entryPoint": 634,
									"id": 3438,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_1657": {
									"entryPoint": 426,
									"id": 1657,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_1666": {
									"entryPoint": 648,
									"id": 1666,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1684": {
									"entryPoint": null,
									"id": 1684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1794": {
									"entryPoint": 598,
									"id": 1794,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1721": {
									"entryPoint": 663,
									"id": 1721,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3523:1",
										"nodeType": "YulBlock",
										"src": "0:3523:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:1",
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nativeSrc": "145:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:1",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:21:1",
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nativeSrc": "166:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nativeSrc": "196:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nativeSrc": "210:13:1",
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nativeSrc": "239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nativeSrc": "232:34:1",
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nativeSrc": "232:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nativeSrc": "275:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:1",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:1",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:1",
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nativeSrc": "369:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:1",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nativeSrc": "365:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nativeSrc": "403:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nativeSrc": "399:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nativeSrc": "393:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nativeSrc": "358:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nativeSrc": "358:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nativeSrc": "302:13:1",
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nativeSrc": "294:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:1",
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nativeSrc": "318:15:1",
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nativeSrc": "323:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:1",
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nativeSrc": "454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nativeSrc": "450:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nativeSrc": "443:42:1",
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nativeSrc": "443:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nativeSrc": "494:62:1",
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:1",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nativeSrc": "525:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:1",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nativeSrc": "542:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nativeSrc": "521:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nativeSrc": "506:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:54:1",
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nativeSrc": "616:124:1",
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nativeSrc": "626:29:1",
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nativeSrc": "635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:1",
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nativeSrc": "720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nativeSrc": "720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:1",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:1",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nativeSrc": "699:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:1",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nativeSrc": "695:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nativeSrc": "684:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nativeSrc": "674:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:50:1",
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nativeSrc": "664:70:1",
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:1",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:1",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nativeSrc": "832:167:1",
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:1",
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:1",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nativeSrc": "880:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nativeSrc": "880:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nativeSrc": "849:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nativeSrc": "845:32:1",
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nativeSrc": "842:52:1",
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nativeSrc": "903:39:1",
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nativeSrc": "913:29:1",
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nativeSrc": "951:42:1",
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nativeSrc": "961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:1",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:1",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nativeSrc": "1099:92:1",
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nativeSrc": "1109:26:1",
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nativeSrc": "1117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nativeSrc": "1169:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nativeSrc": "1162:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nativeSrc": "1144:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nativeSrc": "1144:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:1",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:1",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:1",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nativeSrc": "1297:76:1",
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nativeSrc": "1307:26:1",
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nativeSrc": "1315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nativeSrc": "1342:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nativeSrc": "1342:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:1",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:1",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:1",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nativeSrc": "1482:224:1",
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:1",
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nativeSrc": "1499:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nativeSrc": "1495:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nativeSrc": "1492:52:1",
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nativeSrc": "1553:39:1",
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nativeSrc": "1563:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nativeSrc": "1601:48:1",
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nativeSrc": "1630:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nativeSrc": "1611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:42:1",
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nativeSrc": "1681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nativeSrc": "1668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:1",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:1",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:1",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:1",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nativeSrc": "1808:87:1",
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nativeSrc": "1818:26:1",
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nativeSrc": "1826:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nativeSrc": "1853:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nativeSrc": "1853:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:1",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:1",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:1",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nativeSrc": "1970:116:1",
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:1",
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nativeSrc": "2018:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nativeSrc": "2018:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nativeSrc": "1987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nativeSrc": "1980:52:1",
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nativeSrc": "2041:39:1",
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nativeSrc": "2051:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:1",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:1",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:1",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nativeSrc": "2178:173:1",
													"nodeType": "YulBlock",
													"src": "2178:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:1",
																"nodeType": "YulBlock",
																"src": "2224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:1"
																			},
																			"nativeSrc": "2226:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:1"
																		},
																		"nativeSrc": "2226:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:1"
																		},
																		"nativeSrc": "2195:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:1"
																},
																"nativeSrc": "2191:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"nativeSrc": "2188:52:1",
															"nodeType": "YulIf",
															"src": "2188:52:1"
														},
														{
															"nativeSrc": "2249:39:1",
															"nodeType": "YulAssignment",
															"src": "2249:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:1"
																},
																"nativeSrc": "2259:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																}
															]
														},
														{
															"nativeSrc": "2297:48:1",
															"nodeType": "YulAssignment",
															"src": "2297:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:1"
																		},
																		"nativeSrc": "2326:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:1"
																},
																"nativeSrc": "2307:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:1",
														"nodeType": "YulTypedName",
														"src": "2136:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:1",
														"nodeType": "YulTypedName",
														"src": "2147:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:1",
														"nodeType": "YulTypedName",
														"src": "2159:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:1",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"src": "2091:260:1"
											},
											{
												"body": {
													"nativeSrc": "2411:325:1",
													"nodeType": "YulBlock",
													"src": "2411:325:1",
													"statements": [
														{
															"nativeSrc": "2421:22:1",
															"nodeType": "YulAssignment",
															"src": "2421:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nativeSrc": "2431:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:1"
																}
															]
														},
														{
															"nativeSrc": "2452:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:1"
																},
																"nativeSrc": "2478:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:1",
																"nodeType": "YulBlock",
																"src": "2529:31:1",
																"statements": [
																	{
																		"nativeSrc": "2531:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:1"
																			},
																			"nativeSrc": "2541:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nativeSrc": "2502:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:1"
															},
															"nativeSrc": "2499:61:1",
															"nodeType": "YulIf",
															"src": "2499:61:1"
														},
														{
															"body": {
																"nativeSrc": "2619:111:1",
																"nodeType": "YulBlock",
																"src": "2619:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:1"
																					},
																					"nativeSrc": "2643:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:1"
																			},
																			"nativeSrc": "2633:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:1"
																		},
																		"nativeSrc": "2633:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:1"
																			},
																			"nativeSrc": "2677:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:1"
																		},
																		"nativeSrc": "2677:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:1"
																			},
																			"nativeSrc": "2705:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:1"
																		},
																		"nativeSrc": "2705:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:1"
																		},
																		"nativeSrc": "2595:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:1"
																},
																"nativeSrc": "2572:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:1"
															},
															"nativeSrc": "2569:161:1",
															"nodeType": "YulIf",
															"src": "2569:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:1",
														"nodeType": "YulTypedName",
														"src": "2391:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:1",
														"nodeType": "YulTypedName",
														"src": "2400:6:1",
														"type": ""
													}
												],
												"src": "2356:380:1"
											},
											{
												"body": {
													"nativeSrc": "2898:188:1",
													"nodeType": "YulBlock",
													"src": "2898:188:1",
													"statements": [
														{
															"nativeSrc": "2908:26:1",
															"nodeType": "YulAssignment",
															"src": "2908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2920:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2920:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2931:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2931:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2916:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2916:3:1"
																},
																"nativeSrc": "2916:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2908:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2950:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2950:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2965:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2981:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2981:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2986:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2986:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2977:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2977:3:1"
																						},
																						"nativeSrc": "2977:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2977:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2990:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2990:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2973:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2973:3:1"
																				},
																				"nativeSrc": "2973:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2973:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2961:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:1"
																		},
																		"nativeSrc": "2961:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2943:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:1"
																},
																"nativeSrc": "2943:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2943:51:1"
															},
															"nativeSrc": "2943:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2943:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3014:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3014:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3025:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3010:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:1"
																		},
																		"nativeSrc": "3010:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3030:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3030:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3003:6:1"
																},
																"nativeSrc": "3003:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3003:34:1"
															},
															"nativeSrc": "3003:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3003:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3057:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3057:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3068:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3068:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3053:3:1"
																		},
																		"nativeSrc": "3053:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3053:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3073:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3073:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3046:6:1"
																},
																"nativeSrc": "3046:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3046:34:1"
															},
															"nativeSrc": "3046:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3046:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2741:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2851:9:1",
														"nodeType": "YulTypedName",
														"src": "2851:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2862:6:1",
														"nodeType": "YulTypedName",
														"src": "2862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2870:6:1",
														"nodeType": "YulTypedName",
														"src": "2870:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2878:6:1",
														"nodeType": "YulTypedName",
														"src": "2878:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2889:4:1",
														"nodeType": "YulTypedName",
														"src": "2889:4:1",
														"type": ""
													}
												],
												"src": "2741:345:1"
											},
											{
												"body": {
													"nativeSrc": "3192:102:1",
													"nodeType": "YulBlock",
													"src": "3192:102:1",
													"statements": [
														{
															"nativeSrc": "3202:26:1",
															"nodeType": "YulAssignment",
															"src": "3202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3214:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3214:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3225:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3210:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:3:1"
																},
																"nativeSrc": "3210:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3210:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3202:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3202:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3244:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3259:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3259:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3275:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3275:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3280:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3280:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3271:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3271:3:1"
																						},
																						"nativeSrc": "3271:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3271:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3284:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3284:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3267:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3267:3:1"
																				},
																				"nativeSrc": "3267:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3267:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3255:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:1"
																		},
																		"nativeSrc": "3255:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3255:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3237:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:1"
																},
																"nativeSrc": "3237:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3237:51:1"
															},
															"nativeSrc": "3237:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3237:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3091:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3161:9:1",
														"nodeType": "YulTypedName",
														"src": "3161:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3172:6:1",
														"nodeType": "YulTypedName",
														"src": "3172:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3183:4:1",
														"nodeType": "YulTypedName",
														"src": "3183:4:1",
														"type": ""
													}
												],
												"src": "3091:203:1"
											},
											{
												"body": {
													"nativeSrc": "3347:174:1",
													"nodeType": "YulBlock",
													"src": "3347:174:1",
													"statements": [
														{
															"nativeSrc": "3357:16:1",
															"nodeType": "YulAssignment",
															"src": "3357:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3368:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3368:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3371:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3371:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3364:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:1"
																},
																"nativeSrc": "3364:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3364:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3357:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3404:111:1",
																"nodeType": "YulBlock",
																"src": "3404:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3425:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3425:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3432:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3432:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3437:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3437:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3428:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3428:3:1"
																					},
																					"nativeSrc": "3428:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3428:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3418:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3418:6:1"
																			},
																			"nativeSrc": "3418:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3418:31:1"
																		},
																		"nativeSrc": "3418:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3469:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3469:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3472:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3472:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3462:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3462:6:1"
																			},
																			"nativeSrc": "3462:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3462:15:1"
																		},
																		"nativeSrc": "3462:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3462:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3497:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3500:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3500:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3490:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:1"
																			},
																			"nativeSrc": "3490:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3490:15:1"
																		},
																		"nativeSrc": "3490:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3388:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3388:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3391:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3391:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3385:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3385:2:1"
																},
																"nativeSrc": "3385:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3385:10:1"
															},
															"nativeSrc": "3382:133:1",
															"nodeType": "YulIf",
															"src": "3382:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3299:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3330:1:1",
														"nodeType": "YulTypedName",
														"src": "3330:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3333:1:1",
														"nodeType": "YulTypedName",
														"src": "3333:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3339:3:1",
														"nodeType": "YulTypedName",
														"src": "3339:3:1",
														"type": ""
													}
												],
												"src": "3299:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105ce565b60405180910390f35b6100d46100cf366004610639565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610663565b610256565b604051601281526020016100b8565b61012b610126366004610639565b61027a565b005b6100e861013b36600461069f565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610639565b610297565b6100e861017f3660046106c1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f4565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f4565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033a565b506001949350505050565b6102848282610399565b5050565b6060600480546101b9906106f4565b60003361024a81858561033a565b6102b283838360016103cf565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610334578181101561032557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610334848484840360006103cf565b50505050565b6001600160a01b03831661036457604051634b637e8f60e11b81526000600482015260240161031c565b6001600160a01b03821661038e5760405163ec442f0560e01b81526000600482015260240161031c565b6102b28383836104a4565b6001600160a01b0382166103c35760405163ec442f0560e01b81526000600482015260240161031c565b610284600083836104a4565b6001600160a01b0384166103f95760405163e602df0560e01b81526000600482015260240161031c565b6001600160a01b03831661042357604051634a1406b160e11b81526000600482015260240161031c565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049691815260200190565b60405180910390a350505050565b6001600160a01b0383166104cf5780600260008282546104c4919061072e565b909155506105419050565b6001600160a01b038316600090815260208190526040902054818110156105225760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031c565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055d5760028054829003905561057c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c191815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156105fc578581018301518582016040015282016105e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063457600080fd5b919050565b6000806040838503121561064c57600080fd5b6106558361061d565b946020939093013593505050565b60008060006060848603121561067857600080fd5b6106818461061d565b925061068f6020850161061d565b9150604084013590509250925092565b6000602082840312156106b157600080fd5b6106ba8261061d565b9392505050565b600080604083850312156106d457600080fd5b6106dd8361061d565b91506106eb6020840161061d565b90509250929050565b600181811c9082168061070857607f821691505b60208210810361072857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea2646970667358221220837a12b758e5c4db63a13487b813c95bf6eae258edd8f3e3f47e870ac691bb6864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x288 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x232 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x207 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x232 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x215 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x264 DUP6 DUP3 DUP6 PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x26F DUP6 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284 DUP3 DUP3 PUSH2 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x33A JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x334 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x334 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH2 0x284 PUSH1 0x0 DUP4 DUP4 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x334 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4CF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x541 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x655 DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x681 DUP5 PUSH2 0x61D JUMP JUMPDEST SWAP3 POP PUSH2 0x68F PUSH1 0x20 DUP6 ADD PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH2 0x6EB PUSH1 0x20 DUP5 ADD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x708 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x728 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 PUSH27 0x12B758E5C4DB63A13487B813C95BF6EAE258EDD8F3E3F47E870AC6 SWAP2 0xBB PUSH9 0x64736F6C6343000817 STOP CALLER ",
							"sourceMap": "72763:305:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36878:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39097:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;39097:186:0;1004:187:1;37948:97:0;38026:12;;37948:97;;;1342:25:1;;;1330:2;1315:18;37948:97:0;1196:177:1;39843:244:0;;;;;;:::i;:::-;;:::i;37806:82::-;;;37879:2;1853:36:1;;1841:2;1826:18;37806:82:0;1711:184:1;72980:86:0;;;;;;:::i;:::-;;:::i;:::-;;38103:116;;;;;;:::i;:::-;-1:-1:-1;;;;;38194:18:0;38168:7;38194:18;;;;;;;;;;;;38103:116;37080:93;;;:::i;38414:178::-;;;;;;:::i;:::-;;:::i;38650:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;38756:18:0;;;38730:7;38756:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;38650:140;36878:89;36923:13;36955:5;36948:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36878:89;:::o;39097:186::-;39170:4;34750:10;39224:31;34750:10;39240:7;39249:5;39224:8;:31::i;:::-;39272:4;39265:11;;;39097:186;;;;;:::o;39843:244::-;39930:4;34750:10;39986:37;40002:4;34750:10;40017:5;39986:15;:37::i;:::-;40033:26;40043:4;40049:2;40053:5;40033:9;:26::i;:::-;-1:-1:-1;40076:4:0;;39843:244;-1:-1:-1;;;;39843:244:0:o;72980:86::-;73040:19;73046:3;73051:7;73040:5;:19::i;:::-;72980:86;;:::o;37080:93::-;37127:13;37159:7;37152:14;;;;;:::i;38414:178::-;38483:4;34750:10;38537:27;34750:10;38554:2;38558:5;38537:9;:27::i;43793:128::-;43877:37;43886:5;43893:7;43902:5;43909:4;43877:8;:37::i;:::-;43793:128;;;:::o;45467:477::-;-1:-1:-1;;;;;38756:18:0;;;45566:24;38756:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;45632:37:0;;45628:310;;45708:5;45689:16;:24;45685:130;;;45740:60;;-1:-1:-1;;;45740:60:0;;-1:-1:-1;;;;;2961:32:1;;45740:60:0;;;2943:51:1;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;45740:60:0;;;;;;;;45685:130;45856:57;45865:5;45872:7;45900:5;45881:16;:24;45907:5;45856:8;:57::i;:::-;45556:388;45467:477;;;:::o;40460:300::-;-1:-1:-1;;;;;40543:18:0;;40539:86;;40584:30;;-1:-1:-1;;;40584:30:0;;40611:1;40584:30;;;3237:51:1;3210:18;;40584:30:0;3091:203:1;40539:86:0;-1:-1:-1;;;;;40638:16:0;;40634:86;;40677:32;;-1:-1:-1;;;40677:32:0;;40706:1;40677:32;;;3237:51:1;3210:18;;40677:32:0;3091:203:1;40634:86:0;40729:24;40737:4;40743:2;40747:5;40729:7;:24::i;42525:208::-;-1:-1:-1;;;;;42595:21:0;;42591:91;;42639:32;;-1:-1:-1;;;42639:32:0;;42668:1;42639:32;;;3237:51:1;3210:18;;42639:32:0;3091:203:1;42591:91:0;42691:35;42707:1;42711:7;42720:5;42691:7;:35::i;44753:432::-;-1:-1:-1;;;;;44865:19:0;;44861:89;;44907:32;;-1:-1:-1;;;44907:32:0;;44936:1;44907:32;;;3237:51:1;3210:18;;44907:32:0;3091:203:1;44861:89:0;-1:-1:-1;;;;;44963:21:0;;44959:90;;45007:31;;-1:-1:-1;;;45007:31:0;;45035:1;45007:31;;;3237:51:1;3210:18;;45007:31:0;3091:203:1;44959:90:0;-1:-1:-1;;;;;45058:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;45103:76;;;;45153:7;-1:-1:-1;;;;;45137:31:0;45146:5;-1:-1:-1;;;;;45137:31:0;;45162:5;45137:31;;;;1342:25:1;;1330:2;1315:18;;1196:177;45137:31:0;;;;;;;;44753:432;;;;:::o;41075:1107::-;-1:-1:-1;;;;;41164:18:0;;41160:540;;41316:5;41300:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;41160:540:0;;-1:-1:-1;41160:540:0;;-1:-1:-1;;;;;41374:15:0;;41352:19;41374:15;;;;;;;;;;;41407:19;;;41403:115;;;41453:50;;-1:-1:-1;;;41453:50:0;;-1:-1:-1;;;;;2961:32:1;;41453:50:0;;;2943:51:1;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;41453:50:0;2741:345:1;41403:115:0;-1:-1:-1;;;;;41638:15:0;;:9;:15;;;;;;;;;;41656:19;;;;41638:37;;41160:540;-1:-1:-1;;;;;41714:16:0;;41710:425;;41877:12;:21;;;;;;;41710:425;;;-1:-1:-1;;;;;42088:13:0;;:9;:13;;;;;;;;;;:22;;;;;;41710:425;42165:2;-1:-1:-1;;;;;42150:25:0;42159:4;-1:-1:-1;;;;;42150:25:0;;42169:5;42150:25;;;;1342::1;;1330:2;1315:18;;1196:177;42150:25:0;;;;;;;;41075:1107;;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3299:222::-;3364:9;;;3385:10;;;3382:133;;;3437:10;3432:3;3428:20;3425:1;3418:31;3472:4;3469:1;3462:15;3500:4;3497:1;3490:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "385000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24739",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51288",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72763,
									"end": 73068,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72848,
									"end": 72974,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "43444243"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36766,
									"end": 36771,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 36766,
									"end": 36779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 36700,
									"end": 36813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 36766,
									"end": 36771,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36766,
									"end": 36779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 36766,
									"end": 36779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36766,
									"end": 36779,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 36766,
									"end": 36779,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36789,
									"end": 36796,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 36789,
									"end": 36806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 36799,
									"end": 36806,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36789,
									"end": 36796,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36789,
									"end": 36806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 36789,
									"end": 36806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36789,
									"end": 36806,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 36789,
									"end": 36806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72881,
									"end": 72891,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2923,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2872,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "PUSH",
									"source": 0,
									"value": "B8A00D6D8CA1BE30BFEC34D8F97E55F0F0FD9EEB7FB46E030516363D4CFE1AD6"
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2860,
									"end": 2862,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72877,
									"end": 72892,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 72902,
									"end": 72929,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 72908,
									"end": 72918,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 72920,
									"end": 72928,
									"name": "PUSH",
									"source": 0,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 72902,
									"end": 72907,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 72902,
									"end": 72929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72902,
									"end": 72929,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 72902,
									"end": 72929,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72939,
									"end": 72967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 72953,
									"end": 72956,
									"name": "PUSH",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 72959,
									"end": 72966,
									"name": "PUSH",
									"source": 0,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 72939,
									"end": 72944,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 72939,
									"end": 72967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72939,
									"end": 72967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 72939,
									"end": 72967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42525,
									"end": 42733,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 42525,
									"end": 42733,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 42595,
									"end": 42616,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42595,
									"end": 42616,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42591,
									"end": 42682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 42591,
									"end": 42682,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42668,
									"end": 42669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2872,
									"end": 2923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2845,
									"end": 2863,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42639,
									"end": 42671,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 42591,
									"end": 42682,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 42591,
									"end": 42682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42691,
									"end": 42726,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 42707,
									"end": 42708,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42711,
									"end": 42718,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 42720,
									"end": 42725,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 42691,
									"end": 42698,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 42691,
									"end": 42726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42691,
									"end": 42726,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 42691,
									"end": 42726,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42525,
									"end": 42733,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42525,
									"end": 42733,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42525,
									"end": 42733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41075,
									"end": 42182,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 41075,
									"end": 42182,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 41164,
									"end": 41182,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 41164,
									"end": 41182,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41316,
									"end": 41321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41312,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 41300,
									"end": 41312,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 41300,
									"end": 41321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 41300,
									"end": 41321,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 41352,
									"end": 41371,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 41374,
									"end": 41389,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 41407,
									"end": 41426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41407,
									"end": 41426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41407,
									"end": 41426,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 41403,
									"end": 41518,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 41403,
									"end": 41518,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 41403,
									"end": 41518,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3381,
									"end": 3413,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3381,
									"end": 3413,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3363,
									"end": 3414,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3430,
									"end": 3448,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3430,
									"end": 3448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3430,
									"end": 3448,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3457,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3457,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3491,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3473,
									"end": 3491,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3491,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3466,
									"end": 3500,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3466,
									"end": 3500,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3466,
									"end": 3500,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3354,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3336,
									"end": 3354,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 41453,
									"end": 41503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3161,
									"end": 3506,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 41403,
									"end": 41518,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 41403,
									"end": 41518,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41653,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 41656,
									"end": 41675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41656,
									"end": 41675,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41656,
									"end": 41675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41656,
									"end": 41675,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41638,
									"end": 41675,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 41160,
									"end": 41700,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 41714,
									"end": 41730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41714,
									"end": 41730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41877,
									"end": 41889,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 41877,
									"end": 41898,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41877,
									"end": 41898,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 41877,
									"end": 41898,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41877,
									"end": 41898,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41877,
									"end": 41898,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 41877,
									"end": 41898,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 41877,
									"end": 41898,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42101,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42110,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42110,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42110,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42088,
									"end": 42110,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 41710,
									"end": 42135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42165,
									"end": 42167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42159,
									"end": 42163,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 42169,
									"end": 42174,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3657,
									"end": 3682,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3682,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 3647,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3630,
									"end": 3648,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3630,
									"end": 3648,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3688,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42150,
									"end": 42175,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 41075,
									"end": 42182,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41075,
									"end": 42182,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41075,
									"end": 42182,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 41075,
									"end": 42182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 824,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 825,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 860,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 868,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 921,
									"end": 931,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 917,
									"end": 936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 914,
									"end": 915,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 910,
									"end": 937,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 904,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 969,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 967,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 954,
									"end": 974,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 951,
									"end": 998,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 951,
									"end": 998,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 992,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 951,
									"end": 998,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1042,
									"end": 1045,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1050,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1031,
									"end": 1051,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1029,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1120,
									"end": 1122,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1110,
									"end": 1123,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1135,
									"end": 1148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1551,
									"end": 1569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1667,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1630,
									"end": 1668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1628,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1580,
									"end": 1677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2597,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1334,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1349,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 1350,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1365,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1969,
									"end": 1976,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 1967,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1977,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2078,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2118,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2225,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2210,
									"end": 2217,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2226,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2363,
									"end": 2364,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2375,
									"end": 2378,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2355,
									"end": 2379,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2351,
									"end": 2388,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2389,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2332,
									"end": 2390,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2452,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2453,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1376,
									"end": 2721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3156,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2934,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2999,
									"end": 3008,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2999,
									"end": 3008,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2999,
									"end": 3008,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3030,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3030,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3150,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3017,
									"end": 3150,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3082,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3067,
									"end": 3070,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3063,
									"end": 3083,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3053,
									"end": 3084,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3107,
									"end": 3111,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3104,
									"end": 3105,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3097,
									"end": 3112,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3139,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3132,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3125,
									"end": 3140,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3150,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3017,
									"end": 3150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3156,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3156,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 3156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3688,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3511,
									"end": 3688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72763,
									"end": 73068,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220837a12b758e5c4db63a13487b813c95bf6eae258edd8f3e3f47e870ac691bb6864736f6c63430008170033",
									".code": [
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 73068,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 36878,
											"end": 36967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 36878,
											"end": 36967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39097,
											"end": 39283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39097,
											"end": 39283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37948,
											"end": 38045,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37948,
											"end": 38045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38026,
											"end": 38038,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38026,
											"end": 38038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37948,
											"end": 38045,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37948,
											"end": 38045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37948,
											"end": 38045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37948,
											"end": 38045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37948,
											"end": 38045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 39843,
											"end": 40087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 39843,
											"end": 40087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37806,
											"end": 37888,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37806,
											"end": 37888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37806,
											"end": 37888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37806,
											"end": 37888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37879,
											"end": 37881,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37806,
											"end": 37888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72980,
											"end": 73066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 72980,
											"end": 73066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 38103,
											"end": 38219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38168,
											"end": 38175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38194,
											"end": 38212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38103,
											"end": 38219,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37080,
											"end": 37173,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 37080,
											"end": 37173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37080,
											"end": 37173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37080,
											"end": 37173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37080,
											"end": 37173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38414,
											"end": 38592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38414,
											"end": 38592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 38650,
											"end": 38790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38730,
											"end": 38737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38650,
											"end": 38790,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36923,
											"end": 36936,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36955,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 36948,
											"end": 36960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 36948,
											"end": 36960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36878,
											"end": 36967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39170,
											"end": 39174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39240,
											"end": 39247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39249,
											"end": 39254,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 39224,
											"end": 39255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39255,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 39224,
											"end": 39255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39272,
											"end": 39276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39265,
											"end": 39276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39265,
											"end": 39276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39265,
											"end": 39276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39097,
											"end": 39283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39930,
											"end": 39934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39986,
											"end": 40023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 40002,
											"end": 40006,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40017,
											"end": 40022,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39986,
											"end": 40001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 39986,
											"end": 40023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39986,
											"end": 40023,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 39986,
											"end": 40023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40033,
											"end": 40059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 40043,
											"end": 40047,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40049,
											"end": 40051,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40053,
											"end": 40058,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40033,
											"end": 40042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40033,
											"end": 40059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40033,
											"end": 40059,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 40033,
											"end": 40059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40076,
											"end": 40080,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40076,
											"end": 40080,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39843,
											"end": 40087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39843,
											"end": 40087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73040,
											"end": 73059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 73046,
											"end": 73049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73040,
											"end": 73045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 73040,
											"end": 73059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73040,
											"end": 73059,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 73040,
											"end": 73059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72980,
											"end": 73066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37080,
											"end": 37173,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37080,
											"end": 37173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37127,
											"end": 37140,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37159,
											"end": 37166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37152,
											"end": 37166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37152,
											"end": 37166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37152,
											"end": 37166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 37152,
											"end": 37166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37152,
											"end": 37166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 37152,
											"end": 37166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38414,
											"end": 38592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38483,
											"end": 38487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38537,
											"end": 38564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 34750,
											"end": 34760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38554,
											"end": 38556,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38558,
											"end": 38563,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38537,
											"end": 38546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38537,
											"end": 38564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43793,
											"end": 43921,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 43793,
											"end": 43921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43877,
											"end": 43914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 43886,
											"end": 43891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43893,
											"end": 43900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43902,
											"end": 43907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43909,
											"end": 43913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43877,
											"end": 43885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 43877,
											"end": 43914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43877,
											"end": 43914,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 43877,
											"end": 43914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43793,
											"end": 43921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43793,
											"end": 43921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43793,
											"end": 43921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43793,
											"end": 43921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45467,
											"end": 45944,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 45467,
											"end": 45944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45566,
											"end": 45590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 45632,
											"end": 45669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45632,
											"end": 45669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45628,
											"end": 45938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 45628,
											"end": 45938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45708,
											"end": 45713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45689,
											"end": 45705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45689,
											"end": 45713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45685,
											"end": 45815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45685,
											"end": 45815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 45685,
											"end": 45815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45740,
											"end": 45800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45685,
											"end": 45815,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 45685,
											"end": 45815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45856,
											"end": 45913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 45865,
											"end": 45870,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45872,
											"end": 45879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45900,
											"end": 45905,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45881,
											"end": 45905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45907,
											"end": 45912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45856,
											"end": 45864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 45856,
											"end": 45913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45856,
											"end": 45913,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 45856,
											"end": 45913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45556,
											"end": 45944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45467,
											"end": 45944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45467,
											"end": 45944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45467,
											"end": 45944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45467,
											"end": 45944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40460,
											"end": 40760,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40460,
											"end": 40760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40543,
											"end": 40561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40543,
											"end": 40561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40539,
											"end": 40625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 40539,
											"end": 40625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40611,
											"end": 40612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40584,
											"end": 40614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40539,
											"end": 40625,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 40539,
											"end": 40625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40638,
											"end": 40654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40638,
											"end": 40654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40634,
											"end": 40720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40634,
											"end": 40720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40706,
											"end": 40707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40677,
											"end": 40709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40634,
											"end": 40720,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40634,
											"end": 40720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40729,
											"end": 40753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 40737,
											"end": 40741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40743,
											"end": 40745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40747,
											"end": 40752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40729,
											"end": 40736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40729,
											"end": 40753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42733,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 42525,
											"end": 42733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42595,
											"end": 42616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42595,
											"end": 42616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 42591,
											"end": 42682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42668,
											"end": 42669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42639,
											"end": 42671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42591,
											"end": 42682,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 42591,
											"end": 42682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42691,
											"end": 42726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 42707,
											"end": 42708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42711,
											"end": 42718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42720,
											"end": 42725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42691,
											"end": 42698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42691,
											"end": 42726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44753,
											"end": 45185,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 44753,
											"end": 45185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44865,
											"end": 44884,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44865,
											"end": 44884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44861,
											"end": 44950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 44861,
											"end": 44950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44936,
											"end": 44937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44907,
											"end": 44939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44861,
											"end": 44950,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 44861,
											"end": 44950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44963,
											"end": 44984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 44984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 44959,
											"end": 45049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45035,
											"end": 45036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45007,
											"end": 45038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44959,
											"end": 45049,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 44959,
											"end": 45049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45058,
											"end": 45093,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45103,
											"end": 45179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45103,
											"end": 45179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45103,
											"end": 45179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 45103,
											"end": 45179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45153,
											"end": 45160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45146,
											"end": 45151,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 45162,
											"end": 45167,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45137,
											"end": 45168,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 44753,
											"end": 45185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44753,
											"end": 45185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44753,
											"end": 45185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44753,
											"end": 45185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44753,
											"end": 45185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 42182,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 41075,
											"end": 42182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41164,
											"end": 41182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41164,
											"end": 41182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41316,
											"end": 41321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41312,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41300,
											"end": 41312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 41300,
											"end": 41321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41300,
											"end": 41321,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41352,
											"end": 41371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41407,
											"end": 41426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41407,
											"end": 41426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41407,
											"end": 41426,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41403,
											"end": 41518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41403,
											"end": 41518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 41403,
											"end": 41518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41453,
											"end": 41503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2741,
											"end": 3086,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41403,
											"end": 41518,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 41403,
											"end": 41518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41653,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41656,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41656,
											"end": 41675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41656,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41656,
											"end": 41675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41638,
											"end": 41675,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 41160,
											"end": 41700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41714,
											"end": 41730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41714,
											"end": 41730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41877,
											"end": 41889,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41877,
											"end": 41898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41877,
											"end": 41898,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41877,
											"end": 41898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41877,
											"end": 41898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41877,
											"end": 41898,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41877,
											"end": 41898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41877,
											"end": 41898,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42110,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 41710,
											"end": 42135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42165,
											"end": 42167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42159,
											"end": 42163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 42169,
											"end": 42174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 42182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 42182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 42182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 42182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3299,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3432,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3505,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"src/MockToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockToken_flattened.sol\":\"mockERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/MockToken_flattened.sol\":{\"keccak256\":\"0x13c0b9024a7062de520b5c74798b05cf4be2db64452c5bd9f10c3e52e9587362\",\"urls\":[\"bzz-raw://21dfa0cbadec223cd7b89543e11b7839f82537253d3c02aeedff7341fb13188e\",\"dweb:/ipfs/QmSWFxr421EVjTzCUfJSqqkAmVqXD7Ek7tJcjx6bDCtu9d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1619,
								"contract": "src/MockToken_flattened.sol:mockERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1625,
								"contract": "src/MockToken_flattened.sol:mockERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1627,
								"contract": "src/MockToken_flattened.sol:mockERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1629,
								"contract": "src/MockToken_flattened.sol:mockERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1631,
								"contract": "src/MockToken_flattened.sol:mockERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/MockToken_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/MockToken_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"src/MockToken_flattened.sol": {
				"ast": {
					"absolutePath": "src/MockToken_flattened.sol",
					"exportedSymbols": {
						"Arrays": [
							1576
						],
						"Context": [
							1605
						],
						"ERC1155": [
							3350
						],
						"ERC165": [
							2143
						],
						"ERC20": [
							2111
						],
						"IERC1155": [
							2302
						],
						"IERC1155Errors": [
							236
						],
						"IERC1155MetadataURI": [
							2315
						],
						"IERC1155Receiver": [
							2182
						],
						"IERC165": [
							2122
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							141
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							189
						],
						"Math": [
							1289
						],
						"StorageSlot": [
							1398
						],
						"mockERC1155Token": [
							3394
						],
						"mockERC20Token": [
							3439
						]
					},
					"id": 3440,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "146:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "172:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "253:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "266:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "435:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "444:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "482:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "466:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "494:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "486:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:57:0"
									},
									"src": "429:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "507:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "666:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "675:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "714:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "698:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "731:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "723:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:63:0"
									},
									"src": "660:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "744:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "823:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "834:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:9:0"
									},
									"scope": 77,
									"src": "814:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "875:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "960:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "978:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1010:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:9:0"
									},
									"scope": 77,
									"src": "951:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1025:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1252:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1269:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1261:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1281:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1273:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1306:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:6:0"
									},
									"scope": 77,
									"src": "1243:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1318:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1676:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2357:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2373:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2365:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2390:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2382:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2415:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:6:0"
									},
									"scope": 77,
									"src": "2348:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2427:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2738:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2773:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2765:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2785:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:6:0"
									},
									"scope": 77,
									"src": "2729:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "243:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3003:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3145:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3145:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3145:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3030:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3127:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3158:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3226:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3256:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:15:0"
									},
									"scope": 100,
									"src": "3217:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3277:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3347:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3353:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3379:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:15:0"
									},
									"scope": 100,
									"src": "3338:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3400:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3479:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3487:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3513:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3513:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3512:7:0"
									},
									"scope": 100,
									"src": "3470:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "3117:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3682:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3708:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "IERC20Errors",
							"nameLocation": "3858:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3877:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 111,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "4197:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4230:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4222:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4246:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4238:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4263:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4255:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:49:0"
									},
									"src": "4191:80:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4277:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 116,
									"name": "ERC20InvalidSender",
									"nameLocation": "4440:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4467:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:16:0"
									},
									"src": "4434:41:0"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "4481:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 121,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "4651:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4680:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "4672:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4671:18:0"
									},
									"src": "4645:45:0"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "4696:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 130,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "5052:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "5104:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5096:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5123:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5115:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5078:52:0"
									},
									"src": "5046:85:0"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "5137:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 135,
									"name": "ERC20InvalidApprover",
									"nameLocation": "5322:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5351:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5343:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5342:18:0"
									},
									"src": "5316:45:0"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "5367:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 140,
									"name": "ERC20InvalidSpender",
									"nameLocation": "5573:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5593:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:17:0"
									},
									"src": "5567:43:0"
								}
							],
							"scope": 3440,
							"src": "3848:1764:0",
							"usedErrors": [
								111,
								116,
								121,
								130,
								135,
								140
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 142,
								"nodeType": "StructuredDocumentation",
								"src": "5614:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC721Errors",
							"nameLocation": "5766:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "5786:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 147,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6016:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6043:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6034:15:0"
									},
									"src": "6010:40:0"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "6056:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 152,
									"name": "ERC721NonexistentToken",
									"nameLocation": "6199:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6230:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "6222:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6221:17:0"
									},
									"src": "6193:46:0"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "6245:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 161,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "6545:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6607:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6565:48:0"
									},
									"src": "6539:75:0"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "6620:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 166,
									"name": "ERC721InvalidSender",
									"nameLocation": "6783:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6811:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "6803:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6802:16:0"
									},
									"src": "6777:42:0"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "6825:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 171,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "6995:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7025:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "7017:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7016:18:0"
									},
									"src": "6989:46:0"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "7041:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 178,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "7299:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7334:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7326:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7352:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7344:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7325:35:0"
									},
									"src": "7293:68:0"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "7367:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 183,
									"name": "ERC721InvalidApprover",
									"nameLocation": "7552:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "7582:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "7574:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:18:0"
									},
									"src": "7546:46:0"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "7598:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 188,
									"name": "ERC721InvalidOperator",
									"nameLocation": "7806:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7836:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "7828:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7827:18:0"
									},
									"src": "7800:46:0"
								}
							],
							"scope": 3440,
							"src": "5756:2092:0",
							"usedErrors": [
								147,
								152,
								161,
								166,
								171,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "7850:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 236,
							"linearizedBaseContracts": [
								236
							],
							"name": "IERC1155Errors",
							"nameLocation": "8004:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "8025:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 201,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "8397:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8432:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8424:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "8448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "8465:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8457:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8481:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8423:66:0"
									},
									"src": "8391:99:0"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "8496:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 206,
									"name": "ERC1155InvalidSender",
									"nameLocation": "8659:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8688:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "8680:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8679:16:0"
									},
									"src": "8653:43:0"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "8702:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 211,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "8872:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8903:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8895:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8894:18:0"
									},
									"src": "8866:47:0"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "8919:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 218,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "9186:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9223:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "9215:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "9233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9214:33:0"
									},
									"src": "9180:68:0"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "9254:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 223,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "9439:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "9470:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9462:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9461:18:0"
									},
									"src": "9433:47:0"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "9486:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 228,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "9694:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9725:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "9717:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9716:18:0"
									},
									"src": "9688:47:0"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "9741:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 235,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10032:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "10066:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "10058:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "10085:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "10077:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10057:41:0"
									},
									"src": "10026:73:0"
								}
							],
							"scope": 3440,
							"src": "7994:2107:0",
							"usedErrors": [
								201,
								206,
								211,
								218,
								223,
								228,
								235
							],
							"usedEvents": []
						},
						{
							"id": 237,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10242:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "10268:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1289,
							"linearizedBaseContracts": [
								1289
							],
							"name": "Math",
							"nameLocation": "10350:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "10361:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 241,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "10422:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10442:2:0"
									},
									"src": "10416:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 246,
									"members": [
										{
											"id": 242,
											"name": "Floor",
											"nameLocation": "10475:5:0",
											"nodeType": "EnumValue",
											"src": "10475:5:0"
										},
										{
											"id": 243,
											"name": "Ceil",
											"nameLocation": "10518:4:0",
											"nodeType": "EnumValue",
											"src": "10518:4:0"
										},
										{
											"id": 244,
											"name": "Trunc",
											"nameLocation": "10560:5:0",
											"nodeType": "EnumValue",
											"src": "10560:5:0"
										},
										{
											"id": 245,
											"name": "Expand",
											"nameLocation": "10590:6:0",
											"nodeType": "EnumValue",
											"src": "10590:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "10456:8:0",
									"nodeType": "EnumDefinition",
									"src": "10451:169:0"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "10800:140:0",
										"statements": [
											{
												"id": 276,
												"nodeType": "UncheckedBlock",
												"src": "10810:124:0",
												"statements": [
													{
														"assignments": [
															259
														],
														"declarations": [
															{
																"constant": false,
																"id": 259,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "10842:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 276,
																"src": "10834:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 258,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 263,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 260,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "10846:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 261,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "10850:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10834:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "10869:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 265,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "10873:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 271,
														"nodeType": "IfStatement",
														"src": "10865:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10884:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10891:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 269,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10883:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 257,
															"id": 270,
															"nodeType": "Return",
															"src": "10876:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10915:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 273,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10921:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 274,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10914:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 257,
														"id": 275,
														"nodeType": "Return",
														"src": "10907:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "10626:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "10733:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10748:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10740:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10759:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10751:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10739:22:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10785:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "10791:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10784:15:0"
									},
									"scope": 1289,
									"src": "10724:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "11123:113:0",
										"statements": [
											{
												"id": 304,
												"nodeType": "UncheckedBlock",
												"src": "11133:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "11161:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 291,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "11165:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11161:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 297,
														"nodeType": "IfStatement",
														"src": "11157:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11176:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11183:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 295,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11175:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 289,
															"id": 296,
															"nodeType": "Return",
															"src": "11168:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11207:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 299,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "11213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 300,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "11217:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11213:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 302,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11206:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 289,
														"id": 303,
														"nodeType": "Return",
														"src": "11199:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "10946:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "11056:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11071:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "11063:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11082:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "11074:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11062:22:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "11108:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11108:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "11114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11107:15:0"
									},
									"scope": 1289,
									"src": "11047:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "11422:417:0",
										"statements": [
											{
												"id": 346,
												"nodeType": "UncheckedBlock",
												"src": "11432:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "11690:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11695:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 325,
														"nodeType": "IfStatement",
														"src": "11686:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11706:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11712:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11705:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 317,
															"id": 324,
															"nodeType": "Return",
															"src": "11698:16:0"
														}
													},
													{
														"assignments": [
															327
														],
														"declarations": [
															{
																"constant": false,
																"id": 327,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "11736:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 346,
																"src": "11728:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 331,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 328,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "11740:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 329,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "11744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11728:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 332,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "11763:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 333,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "11767:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11763:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 335,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "11772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11763:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 341,
														"nodeType": "IfStatement",
														"src": "11759:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11783:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11790:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 339,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 317,
															"id": 340,
															"nodeType": "Return",
															"src": "11775:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11814:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 343,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "11820:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 344,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11813:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 317,
														"id": 345,
														"nodeType": "Return",
														"src": "11806:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "11242:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "11355:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11370:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11362:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11381:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11373:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11361:22:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11413:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11406:15:0"
									},
									"scope": 1289,
									"src": "11346:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "12026:114:0",
										"statements": [
											{
												"id": 374,
												"nodeType": "UncheckedBlock",
												"src": "12036:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "12064:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 367,
														"nodeType": "IfStatement",
														"src": "12060:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12087:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 365,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12079:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 359,
															"id": 366,
															"nodeType": "Return",
															"src": "12072:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12111:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 369,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "12117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 370,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "12121:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12117:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 372,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12110:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 359,
														"id": 373,
														"nodeType": "Return",
														"src": "12103:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "11845:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "11959:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11974:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "11966:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11985:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "11977:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11965:22:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "12011:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "12017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12010:15:0"
									},
									"scope": 1289,
									"src": "11950:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "12337:114:0",
										"statements": [
											{
												"id": 402,
												"nodeType": "UncheckedBlock",
												"src": "12347:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "12375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12380:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 395,
														"nodeType": "IfStatement",
														"src": "12371:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12391:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12398:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12390:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 387,
															"id": 394,
															"nodeType": "Return",
															"src": "12383:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12422:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 397,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "12428:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 398,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "12432:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12428:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 400,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12421:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 387,
														"id": 401,
														"nodeType": "Return",
														"src": "12414:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "12146:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "12270:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12285:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "12277:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12296:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "12288:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12276:22:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "12322:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "12328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12321:15:0"
									},
									"scope": 1289,
									"src": "12261:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "12588:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 414,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "12605:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 415,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "12609:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12605:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 418,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "12617:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12605:13:0",
													"trueExpression": {
														"id": 417,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "12613:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 413,
												"id": 420,
												"nodeType": "Return",
												"src": "12598:20:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "12457:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "12530:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12542:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "12534:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12553:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "12545:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12533:22:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "12579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12578:9:0"
									},
									"scope": 1289,
									"src": "12521:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "12763:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 432,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "12780:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 433,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "12784:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12780:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 436,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "12792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12780:13:0",
													"trueExpression": {
														"id": 435,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "12788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 431,
												"id": 438,
												"nodeType": "Return",
												"src": "12773:20:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "12631:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "12705:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12728:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12720:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12708:22:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:9:0"
									},
									"scope": 1289,
									"src": "12696:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "12984:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 450,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "13039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 451,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "13043:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13039:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 453,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 454,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "13049:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 455,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "13053:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13049:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 457,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13058:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "13048:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13038:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 461,
												"nodeType": "Return",
												"src": "13031:28:0"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "12806:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "12922:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12938:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "12930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12949:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "12941:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12929:22:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "12975:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12974:9:0"
									},
									"scope": 1289,
									"src": "12913:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "13358:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "13372:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13377:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13372:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "13368:127:0",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "13380:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 476,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "13479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 477,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "13483:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13479:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 472,
															"id": 479,
															"nodeType": "Return",
															"src": "13472:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 482,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "13583:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "13583:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 486,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 466,
																			"src": "13597:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13601:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13597:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 489,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13596:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 490,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "13606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13596:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13610:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "13596:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13583:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13592:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 472,
												"id": 495,
												"nodeType": "Return",
												"src": "13576:35:0"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "13072:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "13296:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13312:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "13304:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13323:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "13315:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13303:22:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "13349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13348:9:0"
									},
									"scope": 1289,
									"src": "13287:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "14040:4018:0",
										"statements": [
											{
												"id": 621,
												"nodeType": "UncheckedBlock",
												"src": "14050:4002:0",
												"statements": [
													{
														"assignments": [
															510
														],
														"declarations": [
															{
																"constant": false,
																"id": 510,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "14379:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 621,
																"src": "14371:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 509,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14371:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "14387:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 512,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "14391:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14387:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14371:21:0"
													},
													{
														"assignments": [
															516
														],
														"declarations": [
															{
																"constant": false,
																"id": 516,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "14459:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 621,
																"src": "14451:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 515,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 517,
														"nodeType": "VariableDeclarationStatement",
														"src": "14451:13:0"
													},
													{
														"AST": {
															"nativeSrc": "14531:122:0",
															"nodeType": "YulBlock",
															"src": "14531:122:0",
															"statements": [
																{
																	"nativeSrc": "14549:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14549:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "14566:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14566:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "14569:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14569:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14576:1:0",
																						"nodeType": "YulLiteral",
																						"src": "14576:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14572:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "14572:3:0"
																				},
																				"nativeSrc": "14572:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14572:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "14559:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "14559:6:0"
																		},
																		"nativeSrc": "14559:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14559:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "14553:2:0",
																			"nodeType": "YulTypedName",
																			"src": "14553:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14596:43:0",
																	"nodeType": "YulAssignment",
																	"src": "14596:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "14613:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "14613:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "14617:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "14617:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14609:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "14609:3:0"
																				},
																				"nativeSrc": "14609:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14609:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "14628:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "14628:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "14632:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "14632:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14625:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "14625:2:0"
																				},
																				"nativeSrc": "14625:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14625:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14605:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14605:3:0"
																		},
																		"nativeSrc": "14605:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14605:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "14596:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14596:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 510,
																"isOffset": false,
																"isSlot": false,
																"src": "14617:5:0",
																"valueSize": 1
															},
															{
																"declaration": 510,
																"isOffset": false,
																"isSlot": false,
																"src": "14632:5:0",
																"valueSize": 1
															},
															{
																"declaration": 516,
																"isOffset": false,
																"isSlot": false,
																"src": "14596:5:0",
																"valueSize": 1
															},
															{
																"declaration": 500,
																"isOffset": false,
																"isSlot": false,
																"src": "14566:1:0",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "14569:1:0",
																"valueSize": 1
															}
														],
														"id": 518,
														"nodeType": "InlineAssembly",
														"src": "14522:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "14734:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14743:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14734:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "14730:368:0",
														"trueBody": {
															"id": 526,
															"nodeType": "Block",
															"src": "14746:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 522,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "15064:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 523,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "15072:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15064:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 508,
																	"id": 525,
																	"nodeType": "Return",
																	"src": "15057:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "15204:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 529,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "15219:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15204:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 535,
														"nodeType": "IfStatement",
														"src": "15200:88:0",
														"trueBody": {
															"id": 534,
															"nodeType": "Block",
															"src": "15226:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 531,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "15251:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15251:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 533,
																	"nodeType": "RevertStatement",
																	"src": "15244:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															537
														],
														"declarations": [
															{
																"constant": false,
																"id": 537,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "15551:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 621,
																"src": "15543:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 536,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15543:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 538,
														"nodeType": "VariableDeclarationStatement",
														"src": "15543:17:0"
													},
													{
														"AST": {
															"nativeSrc": "15583:291:0",
															"nodeType": "YulBlock",
															"src": "15583:291:0",
															"statements": [
																{
																	"nativeSrc": "15652:38:0",
																	"nodeType": "YulAssignment",
																	"src": "15652:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "15672:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "15672:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "15675:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "15675:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "15678:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "15678:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "15665:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "15665:6:0"
																		},
																		"nativeSrc": "15665:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15665:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "15652:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "15652:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "15772:41:0",
																	"nodeType": "YulAssignment",
																	"src": "15772:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "15785:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "15785:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "15795:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "15795:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "15806:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "15806:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "15792:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "15792:2:0"
																				},
																				"nativeSrc": "15792:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "15792:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15781:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15781:3:0"
																		},
																		"nativeSrc": "15781:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15781:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "15772:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "15772:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "15830:30:0",
																	"nodeType": "YulAssignment",
																	"src": "15830:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "15843:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "15843:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "15850:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "15850:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15839:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15839:3:0"
																		},
																		"nativeSrc": "15839:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15839:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "15830:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "15830:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "15678:11:0",
																"valueSize": 1
															},
															{
																"declaration": 510,
																"isOffset": false,
																"isSlot": false,
																"src": "15806:5:0",
																"valueSize": 1
															},
															{
																"declaration": 510,
																"isOffset": false,
																"isSlot": false,
																"src": "15830:5:0",
																"valueSize": 1
															},
															{
																"declaration": 510,
																"isOffset": false,
																"isSlot": false,
																"src": "15843:5:0",
																"valueSize": 1
															},
															{
																"declaration": 516,
																"isOffset": false,
																"isSlot": false,
																"src": "15772:5:0",
																"valueSize": 1
															},
															{
																"declaration": 516,
																"isOffset": false,
																"isSlot": false,
																"src": "15785:5:0",
																"valueSize": 1
															},
															{
																"declaration": 537,
																"isOffset": false,
																"isSlot": false,
																"src": "15652:9:0",
																"valueSize": 1
															},
															{
																"declaration": 537,
																"isOffset": false,
																"isSlot": false,
																"src": "15795:9:0",
																"valueSize": 1
															},
															{
																"declaration": 537,
																"isOffset": false,
																"isSlot": false,
																"src": "15850:9:0",
																"valueSize": 1
															},
															{
																"declaration": 500,
																"isOffset": false,
																"isSlot": false,
																"src": "15672:1:0",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "15675:1:0",
																"valueSize": 1
															}
														],
														"id": 539,
														"nodeType": "InlineAssembly",
														"src": "15574:300:0"
													},
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "16086:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 621,
																"src": "16078:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16078:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 548,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "16093:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16108:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 544,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "16112:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16108:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 546,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16107:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16093:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16078:46:0"
													},
													{
														"AST": {
															"nativeSrc": "16147:362:0",
															"nodeType": "YulBlock",
															"src": "16147:362:0",
															"statements": [
																{
																	"nativeSrc": "16212:37:0",
																	"nodeType": "YulAssignment",
																	"src": "16212:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "16231:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "16231:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "16244:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "16244:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "16227:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16227:3:0"
																		},
																		"nativeSrc": "16227:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16227:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "16212:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "16212:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "16316:25:0",
																	"nodeType": "YulAssignment",
																	"src": "16316:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "16329:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "16329:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "16336:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "16336:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "16325:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16325:3:0"
																		},
																		"nativeSrc": "16325:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16325:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "16316:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16316:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "16456:39:0",
																	"nodeType": "YulAssignment",
																	"src": "16456:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16476:1:0",
																								"nodeType": "YulLiteral",
																								"src": "16476:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "16479:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "16479:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "16472:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "16472:3:0"
																						},
																						"nativeSrc": "16472:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "16472:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "16486:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "16486:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "16468:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "16468:3:0"
																				},
																				"nativeSrc": "16468:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16468:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16493:1:0",
																				"nodeType": "YulLiteral",
																				"src": "16493:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16464:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16464:3:0"
																		},
																		"nativeSrc": "16464:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16464:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "16456:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "16456:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "16212:11:0",
																"valueSize": 1
															},
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "16231:11:0",
																"valueSize": 1
															},
															{
																"declaration": 510,
																"isOffset": false,
																"isSlot": false,
																"src": "16316:5:0",
																"valueSize": 1
															},
															{
																"declaration": 510,
																"isOffset": false,
																"isSlot": false,
																"src": "16329:5:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "16244:4:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "16336:4:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "16456:4:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "16479:4:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "16486:4:0",
																"valueSize": 1
															}
														],
														"id": 549,
														"nodeType": "InlineAssembly",
														"src": "16138:371:0"
													},
													{
														"expression": {
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 550,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "16575:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 551,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "16584:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 552,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "16592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16584:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16575:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 555,
														"nodeType": "ExpressionStatement",
														"src": "16575:21:0"
													},
													{
														"assignments": [
															557
														],
														"declarations": [
															{
																"constant": false,
																"id": 557,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "16922:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 621,
																"src": "16914:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 556,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 564,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16933:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 559,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "16937:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16933:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 561,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16932:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16952:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "16932:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16914:39:0"
													},
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 565,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "17170:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17181:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "17185:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 568,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "17199:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17185:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17181:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17170:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "17170:36:0"
													},
													{
														"expression": {
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 573,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "17239:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17250:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 575,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "17254:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 576,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "17268:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17254:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17250:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17239:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 580,
														"nodeType": "ExpressionStatement",
														"src": "17239:36:0"
													},
													{
														"expression": {
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 581,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "17309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17320:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 583,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "17324:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 584,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "17338:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17324:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17320:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17309:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 588,
														"nodeType": "ExpressionStatement",
														"src": "17309:36:0"
													},
													{
														"expression": {
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 589,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "17379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17390:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 591,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "17394:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 592,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "17408:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17394:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17390:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17379:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 596,
														"nodeType": "ExpressionStatement",
														"src": "17379:36:0"
													},
													{
														"expression": {
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 597,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "17449:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 599,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "17464:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 600,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "17478:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17464:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17460:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17449:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 604,
														"nodeType": "ExpressionStatement",
														"src": "17449:36:0"
													},
													{
														"expression": {
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 605,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "17520:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17531:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 607,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "17535:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 608,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "17549:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17535:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17531:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17520:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 612,
														"nodeType": "ExpressionStatement",
														"src": "17520:36:0"
													},
													{
														"expression": {
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 613,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "17990:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "17999:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 615,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "18007:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17999:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17990:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 618,
														"nodeType": "ExpressionStatement",
														"src": "17990:24:0"
													},
													{
														"expression": {
															"id": 619,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "18035:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 508,
														"id": 620,
														"nodeType": "Return",
														"src": "18028:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "13624:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "13951:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "13966:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "13958:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "13977:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "13969:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "13988:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "13980:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13957:43:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14032:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "14024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14023:16:0"
									},
									"scope": 1289,
									"src": "13942:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "18300:192:0",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18318:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "18310:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"arguments": [
														{
															"id": 641,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "18334:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 642,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "18337:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 643,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "18340:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															623,
															666
														],
														"referencedDeclaration": 623,
														"src": "18327:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18327:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18310:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 647,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "18383:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$246",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$246",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 646,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "18366:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$246_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18366:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 650,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "18403:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 651,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "18406:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 652,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "18409:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 649,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "18396:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18396:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18424:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18396:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18366:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 662,
												"nodeType": "IfStatement",
												"src": "18362:101:0",
												"trueBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "18427:36:0",
													"statements": [
														{
															"expression": {
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 657,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "18441:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18441:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 660,
															"nodeType": "ExpressionStatement",
															"src": "18441:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 663,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "18479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 664,
												"nodeType": "Return",
												"src": "18472:13:0"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "18064:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "18199:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "18214:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "18206:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "18225:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "18217:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "18236:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "18228:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "18258:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "18249:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$246",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 631,
														"name": "Rounding",
														"nameLocations": [
															"18249:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "18249:8:0"
													},
													"referencedDeclaration": 246,
													"src": "18249:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$246",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18205:62:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "18291:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18290:9:0"
									},
									"scope": 1289,
									"src": "18190:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "18783:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "18797:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18802:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18797:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "18793:45:0",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "18805:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 673,
															"id": 678,
															"nodeType": "Return",
															"src": "18819:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "19525:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "19517:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19534:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 685,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "19545:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 684,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			945,
																			980
																		],
																		"referencedDeclaration": 945,
																		"src": "19540:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19540:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19551:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19540:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 689,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19534:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19517:36:0"
											},
											{
												"id": 776,
												"nodeType": "UncheckedBlock",
												"src": "19954:408:0",
												"statements": [
													{
														"expression": {
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 692,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "19978:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 693,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "19988:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 694,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "19997:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 695,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "20001:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19997:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19988:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19987:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20012:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19987:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19978:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 702,
														"nodeType": "ExpressionStatement",
														"src": "19978:35:0"
													},
													{
														"expression": {
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 703,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "20027:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 704,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "20037:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 705,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "20046:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 706,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "20050:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20046:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20037:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 709,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20036:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20036:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20027:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 713,
														"nodeType": "ExpressionStatement",
														"src": "20027:35:0"
													},
													{
														"expression": {
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 714,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "20076:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 715,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "20086:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 716,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "20095:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 717,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "20099:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20095:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20086:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 720,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20085:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20110:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20085:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20076:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 724,
														"nodeType": "ExpressionStatement",
														"src": "20076:35:0"
													},
													{
														"expression": {
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 725,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "20125:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 726,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "20135:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 727,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "20144:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 728,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "20148:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20144:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20135:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20134:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20159:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20134:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20125:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 735,
														"nodeType": "ExpressionStatement",
														"src": "20125:35:0"
													},
													{
														"expression": {
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 736,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "20174:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 737,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "20184:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 738,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "20193:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 739,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "20197:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20193:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20184:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 742,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20183:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20208:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20183:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20174:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 746,
														"nodeType": "ExpressionStatement",
														"src": "20174:35:0"
													},
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 747,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "20223:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 748,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "20233:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 749,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "20242:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 750,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "20246:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20242:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20233:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 753,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20232:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20257:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20232:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20223:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "20223:35:0"
													},
													{
														"expression": {
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 758,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "20272:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 759,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "20282:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "20291:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 761,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "20295:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20291:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20282:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 764,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20281:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20306:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20281:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20272:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 768,
														"nodeType": "ExpressionStatement",
														"src": "20272:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "20332:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 771,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20340:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 772,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "20344:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20340:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 769,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "20328:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20328:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 673,
														"id": 775,
														"nodeType": "Return",
														"src": "20321:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "18498:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18735:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18748:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "18740:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18739:11:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "18774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18773:9:0"
									},
									"scope": 1289,
									"src": "18726:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "20544:164:0",
										"statements": [
											{
												"id": 811,
												"nodeType": "UncheckedBlock",
												"src": "20554:148:0",
												"statements": [
													{
														"assignments": [
															790
														],
														"declarations": [
															{
																"constant": false,
																"id": 790,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "20586:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 811,
																"src": "20578:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 789,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20578:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 794,
														"initialValue": {
															"arguments": [
																{
																	"id": 792,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "20600:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 791,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	778,
																	813
																],
																"referencedDeclaration": 778,
																"src": "20595:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20595:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20578:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 795,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "20623:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 797,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 784,
																						"src": "20650:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 796,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "20633:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$246_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20633:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 799,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 790,
																						"src": "20663:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 800,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 790,
																						"src": "20672:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "20663:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 802,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "20681:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20663:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "20633:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20689:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "20633:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20685:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 808,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20632:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "20623:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 788,
														"id": 810,
														"nodeType": "Return",
														"src": "20616:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "20374:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20477:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20490:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "20482:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "20502:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "20493:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$246",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 783,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 782,
														"name": "Rounding",
														"nameLocations": [
															"20493:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "20493:8:0"
													},
													"referencedDeclaration": 246,
													"src": "20493:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$246",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20481:30:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "20535:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20534:9:0"
									},
									"scope": 1289,
									"src": "20468:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "20899:922:0",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20917:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "20909:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"hexValue": "30",
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20926:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20909:18:0"
											},
											{
												"id": 941,
												"nodeType": "UncheckedBlock",
												"src": "20937:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 825,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "20965:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20974:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "20965:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20980:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20965:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 839,
														"nodeType": "IfStatement",
														"src": "20961:99:0",
														"trueBody": {
															"id": 838,
															"nodeType": "Block",
															"src": "20983:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 830,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21001:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21011:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21001:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 833,
																	"nodeType": "ExpressionStatement",
																	"src": "21001:13:0"
																},
																{
																	"expression": {
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 834,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21032:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21042:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21032:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 837,
																	"nodeType": "ExpressionStatement",
																	"src": "21032:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21077:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21086:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21077:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21077:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 854,
														"nodeType": "IfStatement",
														"src": "21073:96:0",
														"trueBody": {
															"id": 853,
															"nodeType": "Block",
															"src": "21094:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 845,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21112:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21122:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21112:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "21112:12:0"
																},
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21142:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21152:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21142:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "21142:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 855,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21186:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21195:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "21186:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21186:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 869,
														"nodeType": "IfStatement",
														"src": "21182:96:0",
														"trueBody": {
															"id": 868,
															"nodeType": "Block",
															"src": "21203:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 860,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21221:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21231:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21221:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "21221:12:0"
																},
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21251:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21261:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21251:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "21251:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 870,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21295:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21304:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "21295:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21309:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21295:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 884,
														"nodeType": "IfStatement",
														"src": "21291:96:0",
														"trueBody": {
															"id": 883,
															"nodeType": "Block",
															"src": "21312:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 875,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21330:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21340:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21330:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 878,
																	"nodeType": "ExpressionStatement",
																	"src": "21330:12:0"
																},
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21360:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21370:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21360:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "21360:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21404:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21413:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "21404:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21417:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21404:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 899,
														"nodeType": "IfStatement",
														"src": "21400:93:0",
														"trueBody": {
															"id": 898,
															"nodeType": "Block",
															"src": "21420:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 890,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21438:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21448:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "21438:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 893,
																	"nodeType": "ExpressionStatement",
																	"src": "21438:11:0"
																},
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21467:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21477:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "21467:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "21467:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 900,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21510:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21519:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "21510:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21523:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21510:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 914,
														"nodeType": "IfStatement",
														"src": "21506:93:0",
														"trueBody": {
															"id": 913,
															"nodeType": "Block",
															"src": "21526:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 905,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21544:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21554:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "21544:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 908,
																	"nodeType": "ExpressionStatement",
																	"src": "21544:11:0"
																},
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21573:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21583:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "21573:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "21573:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21616:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21625:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "21616:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21629:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21616:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 929,
														"nodeType": "IfStatement",
														"src": "21612:93:0",
														"trueBody": {
															"id": 928,
															"nodeType": "Block",
															"src": "21632:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 920,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "21650:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21660:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "21650:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 923,
																	"nodeType": "ExpressionStatement",
																	"src": "21650:11:0"
																},
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21679:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21689:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "21679:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "21679:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 930,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "21722:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21731:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21722:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21735:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21722:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 940,
														"nodeType": "IfStatement",
														"src": "21718:64:0",
														"trueBody": {
															"id": 939,
															"nodeType": "Block",
															"src": "21738:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 935,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "21756:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21766:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "21756:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 938,
																	"nodeType": "ExpressionStatement",
																	"src": "21756:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 942,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 822,
													"src": "21808:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 820,
												"id": 943,
												"nodeType": "Return",
												"src": "21801:13:0"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "20714:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "20847:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20860:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "20852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20851:15:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "20890:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20889:9:0"
									},
									"scope": 1289,
									"src": "20838:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "22054:168:0",
										"statements": [
											{
												"id": 978,
												"nodeType": "UncheckedBlock",
												"src": "22064:152:0",
												"statements": [
													{
														"assignments": [
															957
														],
														"declarations": [
															{
																"constant": false,
																"id": 957,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22096:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 978,
																"src": "22088:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 956,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22088:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 961,
														"initialValue": {
															"arguments": [
																{
																	"id": 959,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "22110:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 958,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	945,
																	980
																],
																"referencedDeclaration": 945,
																"src": "22105:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22105:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22088:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "22137:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 964,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 951,
																						"src": "22164:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 963,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "22147:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$246_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22147:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 966,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22177:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 967,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 957,
																						"src": "22182:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22177:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 969,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 948,
																					"src": "22191:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22177:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22147:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22203:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22147:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22199:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 975,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22146:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22137:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 955,
														"id": 977,
														"nodeType": "Return",
														"src": "22130:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "21827:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "21983:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21996:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "21988:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "22003:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$246",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 949,
														"name": "Rounding",
														"nameLocations": [
															"22003:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "22003:8:0"
													},
													"referencedDeclaration": 246,
													"src": "22003:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$246",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21987:34:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "22045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22044:9:0"
									},
									"scope": 1289,
									"src": "21974:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "22415:854:0",
										"statements": [
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "22433:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "22425:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"initialValue": {
													"hexValue": "30",
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22442:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22425:18:0"
											},
											{
												"id": 1105,
												"nodeType": "UncheckedBlock",
												"src": "22453:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 992,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "22481:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22490:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22496:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "22490:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "22481:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1008,
														"nodeType": "IfStatement",
														"src": "22477:103:0",
														"trueBody": {
															"id": 1007,
															"nodeType": "Block",
															"src": "22500:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "22518:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22527:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22533:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "22527:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "22518:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1002,
																	"nodeType": "ExpressionStatement",
																	"src": "22518:17:0"
																},
																{
																	"expression": {
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1003,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "22553:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22563:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22553:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1006,
																	"nodeType": "ExpressionStatement",
																	"src": "22553:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1009,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "22597:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22606:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22612:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22606:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "22597:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1025,
														"nodeType": "IfStatement",
														"src": "22593:103:0",
														"trueBody": {
															"id": 1024,
															"nodeType": "Block",
															"src": "22616:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1014,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "22634:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1015,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22643:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22649:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "22643:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "22634:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1019,
																	"nodeType": "ExpressionStatement",
																	"src": "22634:17:0"
																},
																{
																	"expression": {
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1020,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "22669:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22679:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22669:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1023,
																	"nodeType": "ExpressionStatement",
																	"src": "22669:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "22713:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22722:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22728:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "22722:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "22713:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1042,
														"nodeType": "IfStatement",
														"src": "22709:103:0",
														"trueBody": {
															"id": 1041,
															"nodeType": "Block",
															"src": "22732:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1031,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "22750:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22759:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22765:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "22759:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "22750:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1036,
																	"nodeType": "ExpressionStatement",
																	"src": "22750:17:0"
																},
																{
																	"expression": {
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1037,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "22785:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22795:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22785:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1040,
																	"nodeType": "ExpressionStatement",
																	"src": "22785:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "22829:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22838:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22838:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "22829:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1059,
														"nodeType": "IfStatement",
														"src": "22825:100:0",
														"trueBody": {
															"id": 1058,
															"nodeType": "Block",
															"src": "22847:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1048,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "22865:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22874:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22880:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "22874:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "22865:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1053,
																	"nodeType": "ExpressionStatement",
																	"src": "22865:16:0"
																},
																{
																	"expression": {
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1054,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "22899:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22909:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22899:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1057,
																	"nodeType": "ExpressionStatement",
																	"src": "22899:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1060,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "22942:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22951:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22957:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "22951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "22942:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1076,
														"nodeType": "IfStatement",
														"src": "22938:100:0",
														"trueBody": {
															"id": 1075,
															"nodeType": "Block",
															"src": "22960:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1065,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "22978:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22987:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22993:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "22987:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "22978:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1070,
																	"nodeType": "ExpressionStatement",
																	"src": "22978:16:0"
																},
																{
																	"expression": {
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1071,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "23012:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23022:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23012:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1074,
																	"nodeType": "ExpressionStatement",
																	"src": "23012:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "23055:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23064:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23070:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "23064:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "23055:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1093,
														"nodeType": "IfStatement",
														"src": "23051:100:0",
														"trueBody": {
															"id": 1092,
															"nodeType": "Block",
															"src": "23073:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1082,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "23091:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23100:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23106:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "23100:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "23091:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1087,
																	"nodeType": "ExpressionStatement",
																	"src": "23091:16:0"
																},
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1088,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "23125:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23135:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23125:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "23125:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1094,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "23168:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23177:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23177:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "23168:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1104,
														"nodeType": "IfStatement",
														"src": "23164:66:0",
														"trueBody": {
															"id": 1103,
															"nodeType": "Block",
															"src": "23186:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1099,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "23204:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23214:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23204:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1102,
																	"nodeType": "ExpressionStatement",
																	"src": "23204:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1106,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 989,
													"src": "23256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 987,
												"id": 1107,
												"nodeType": "Return",
												"src": "23249:13:0"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "22228:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "22362:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22376:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "22368:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22367:15:0"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "22406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22405:9:0"
									},
									"scope": 1289,
									"src": "22353:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "23504:170:0",
										"statements": [
											{
												"id": 1142,
												"nodeType": "UncheckedBlock",
												"src": "23514:154:0",
												"statements": [
													{
														"assignments": [
															1121
														],
														"declarations": [
															{
																"constant": false,
																"id": 1121,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23546:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1142,
																"src": "23538:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1120,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23538:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1125,
														"initialValue": {
															"arguments": [
																{
																	"id": 1123,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "23561:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1122,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1109,
																	1144
																],
																"referencedDeclaration": 1109,
																"src": "23555:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23555:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23538:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1126,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "23588:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1128,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "23615:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1127,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "23598:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$246_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23598:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1132,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1130,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23628:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1131,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1121,
																						"src": "23634:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23628:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1133,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "23643:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23628:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "23598:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23655:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "23598:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23651:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23597:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "23588:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1119,
														"id": 1141,
														"nodeType": "Return",
														"src": "23581:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "23275:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "23432:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23446:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "23438:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "23453:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$246",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1113,
														"name": "Rounding",
														"nameLocations": [
															"23453:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "23453:8:0"
													},
													"referencedDeclaration": 246,
													"src": "23453:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$246",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23437:34:0"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "23495:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23494:9:0"
									},
									"scope": 1289,
									"src": "23423:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "23994:600:0",
										"statements": [
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24012:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "24004:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24004:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1155,
												"initialValue": {
													"hexValue": "30",
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24021:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24004:18:0"
											},
											{
												"id": 1227,
												"nodeType": "UncheckedBlock",
												"src": "24032:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1156,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "24060:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24069:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "24060:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24075:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24060:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1170,
														"nodeType": "IfStatement",
														"src": "24056:98:0",
														"trueBody": {
															"id": 1169,
															"nodeType": "Block",
															"src": "24078:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "24096:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24106:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "24096:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1164,
																	"nodeType": "ExpressionStatement",
																	"src": "24096:13:0"
																},
																{
																	"expression": {
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1165,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "24127:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24137:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24127:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "24127:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1171,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "24171:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24180:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "24171:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24185:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24171:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1185,
														"nodeType": "IfStatement",
														"src": "24167:95:0",
														"trueBody": {
															"id": 1184,
															"nodeType": "Block",
															"src": "24188:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1176,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "24206:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24216:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24206:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1179,
																	"nodeType": "ExpressionStatement",
																	"src": "24206:12:0"
																},
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "24236:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24246:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "24236:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "24236:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1186,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "24279:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24288:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24279:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24293:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24279:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1200,
														"nodeType": "IfStatement",
														"src": "24275:95:0",
														"trueBody": {
															"id": 1199,
															"nodeType": "Block",
															"src": "24296:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1191,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "24314:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24324:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "24314:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1194,
																	"nodeType": "ExpressionStatement",
																	"src": "24314:12:0"
																},
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "24344:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24354:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "24344:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "24344:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1201,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "24387:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24396:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "24387:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24401:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24387:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1215,
														"nodeType": "IfStatement",
														"src": "24383:95:0",
														"trueBody": {
															"id": 1214,
															"nodeType": "Block",
															"src": "24404:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "24422:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24432:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24422:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1209,
																	"nodeType": "ExpressionStatement",
																	"src": "24422:12:0"
																},
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "24452:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24462:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "24452:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "24452:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "24495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24504:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "24495:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24508:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24495:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1226,
														"nodeType": "IfStatement",
														"src": "24491:64:0",
														"trueBody": {
															"id": 1225,
															"nodeType": "Block",
															"src": "24511:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1221,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "24529:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24539:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24529:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "24529:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1228,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1153,
													"src": "24581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1229,
												"nodeType": "Return",
												"src": "24574:13:0"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "23680:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "23940:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "23947:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23946:15:0"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "23985:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23984:9:0"
									},
									"scope": 1289,
									"src": "23931:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "24831:177:0",
										"statements": [
											{
												"id": 1267,
												"nodeType": "UncheckedBlock",
												"src": "24841:161:0",
												"statements": [
													{
														"assignments": [
															1243
														],
														"declarations": [
															{
																"constant": false,
																"id": 1243,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "24873:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1267,
																"src": "24865:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24865:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1247,
														"initialValue": {
															"arguments": [
																{
																	"id": 1245,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "24889:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1244,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1231,
																	1269
																],
																"referencedDeclaration": 1231,
																"src": "24882:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24882:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "24865:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1248,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "24916:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1250,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1237,
																						"src": "24943:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$246",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1249,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "24926:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$246_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24926:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1257,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1252,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24956:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1255,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1253,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1243,
																									"src": "24962:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1254,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24972:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "24962:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1256,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "24961:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24956:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1258,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1234,
																					"src": "24977:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24956:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "24926:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24989:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "24926:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24985:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24925:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "24916:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1241,
														"id": 1266,
														"nodeType": "Return",
														"src": "24909:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "24600:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "24758:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24789:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24780:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$246",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1236,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1235,
														"name": "Rounding",
														"nameLocations": [
															"24780:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "24780:8:0"
													},
													"referencedDeclaration": 246,
													"src": "24780:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$246",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24764:34:0"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "24822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24821:9:0"
									},
									"scope": 1289,
									"src": "24749:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "25206:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1280,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "25229:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$246",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$246",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25223:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1278,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "25223:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25223:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25241:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "25223:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25246:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25223:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1286,
												"nodeType": "Return",
												"src": "25216:31:0"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "25014:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "25141:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25167:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "25158:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$246",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1271,
														"name": "Rounding",
														"nameLocations": [
															"25158:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 246,
														"src": "25158:8:0"
													},
													"referencedDeclaration": 246,
													"src": "25158:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$246",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25157:19:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "25200:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25200:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25199:6:0"
									},
									"scope": 1289,
									"src": "25132:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3440,
							"src": "10342:14914:0",
							"usedErrors": [
								241
							],
							"usedEvents": []
						},
						{
							"id": 1290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25489:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1291,
								"nodeType": "StructuredDocumentation",
								"src": "25515:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1398,
							"linearizedBaseContracts": [
								1398
							],
							"name": "StorageSlot",
							"nameLocation": "26549:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1294,
									"members": [
										{
											"constant": false,
											"id": 1293,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "26604:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1294,
											"src": "26596:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1292,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "26596:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "26574:11:0",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "26567:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1297,
									"members": [
										{
											"constant": false,
											"id": 1296,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "26656:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "26651:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1295,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "26651:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "26629:11:0",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "26622:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1300,
									"members": [
										{
											"constant": false,
											"id": 1299,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "26711:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1300,
											"src": "26703:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1298,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "26703:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "26681:11:0",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "26674:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1303,
									"members": [
										{
											"constant": false,
											"id": 1302,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "26766:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1303,
											"src": "26758:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1301,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26758:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "26736:11:0",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "26729:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1306,
									"members": [
										{
											"constant": false,
											"id": 1305,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "26819:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1306,
											"src": "26812:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1304,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "26812:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "26791:10:0",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "26784:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1309,
									"members": [
										{
											"constant": false,
											"id": 1308,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "26870:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1309,
											"src": "26864:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1307,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "26864:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "26844:9:0",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "26837:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "27064:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "27126:38:0",
													"nodeType": "YulBlock",
													"src": "27126:38:0",
													"statements": [
														{
															"nativeSrc": "27140:14:0",
															"nodeType": "YulAssignment",
															"src": "27140:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "27150:4:0",
																"nodeType": "YulIdentifier",
																"src": "27150:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "27140:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "27140:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1316,
														"isOffset": false,
														"isSlot": true,
														"src": "27140:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1312,
														"isOffset": false,
														"isSlot": false,
														"src": "27150:4:0",
														"valueSize": 1
													}
												],
												"id": 1318,
												"nodeType": "InlineAssembly",
												"src": "27117:47:0"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "26888:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "26989:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "27012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "27004:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:0"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "27061:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "27041:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1294_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1314,
														"name": "AddressSlot",
														"nameLocations": [
															"27041:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1294,
														"src": "27041:11:0"
													},
													"referencedDeclaration": 1294,
													"src": "27041:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1294_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:23:0"
									},
									"scope": 1398,
									"src": "26980:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "27352:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "27414:38:0",
													"nodeType": "YulBlock",
													"src": "27414:38:0",
													"statements": [
														{
															"nativeSrc": "27428:14:0",
															"nodeType": "YulAssignment",
															"src": "27428:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "27438:4:0",
																"nodeType": "YulIdentifier",
																"src": "27438:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "27428:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "27428:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": true,
														"src": "27428:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "27438:4:0",
														"valueSize": 1
													}
												],
												"id": 1329,
												"nodeType": "InlineAssembly",
												"src": "27405:47:0"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "27176:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "27277:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "27300:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "27292:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27291:14:0"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "27349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "27329:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1297_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1325,
														"name": "BooleanSlot",
														"nameLocations": [
															"27329:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1297,
														"src": "27329:11:0"
													},
													"referencedDeclaration": 1297,
													"src": "27329:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1297_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27328:23:0"
									},
									"scope": 1398,
									"src": "27268:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "27640:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "27702:38:0",
													"nodeType": "YulBlock",
													"src": "27702:38:0",
													"statements": [
														{
															"nativeSrc": "27716:14:0",
															"nodeType": "YulAssignment",
															"src": "27716:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "27726:4:0",
																"nodeType": "YulIdentifier",
																"src": "27726:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "27716:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "27716:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": true,
														"src": "27716:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": false,
														"src": "27726:4:0",
														"valueSize": 1
													}
												],
												"id": 1340,
												"nodeType": "InlineAssembly",
												"src": "27693:47:0"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "27464:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "27565:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "27588:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "27580:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27579:14:0"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "27637:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "27617:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1300_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "Bytes32Slot",
														"nameLocations": [
															"27617:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1300,
														"src": "27617:11:0"
													},
													"referencedDeclaration": 1300,
													"src": "27617:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1300_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27616:23:0"
									},
									"scope": 1398,
									"src": "27556:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "27928:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "27990:38:0",
													"nodeType": "YulBlock",
													"src": "27990:38:0",
													"statements": [
														{
															"nativeSrc": "28004:14:0",
															"nodeType": "YulAssignment",
															"src": "28004:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "28014:4:0",
																"nodeType": "YulIdentifier",
																"src": "28014:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "28004:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "28004:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1349,
														"isOffset": false,
														"isSlot": true,
														"src": "28004:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1345,
														"isOffset": false,
														"isSlot": false,
														"src": "28014:4:0",
														"valueSize": 1
													}
												],
												"id": 1351,
												"nodeType": "InlineAssembly",
												"src": "27981:47:0"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "27752:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "27853:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "27876:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "27868:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27867:14:0"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "27925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "27905:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1303_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "Uint256Slot",
														"nameLocations": [
															"27905:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1303,
														"src": "27905:11:0"
													},
													"referencedDeclaration": 1303,
													"src": "27905:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1303_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27904:23:0"
									},
									"scope": 1398,
									"src": "27844:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "28213:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "28275:38:0",
													"nodeType": "YulBlock",
													"src": "28275:38:0",
													"statements": [
														{
															"nativeSrc": "28289:14:0",
															"nodeType": "YulAssignment",
															"src": "28289:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "28299:4:0",
																"nodeType": "YulIdentifier",
																"src": "28299:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "28289:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "28289:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": true,
														"src": "28289:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1356,
														"isOffset": false,
														"isSlot": false,
														"src": "28299:4:0",
														"valueSize": 1
													}
												],
												"id": 1362,
												"nodeType": "InlineAssembly",
												"src": "28266:47:0"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "28040:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "28140:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "28162:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "28154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28153:14:0"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "28210:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "28191:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1306_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1358,
														"name": "StringSlot",
														"nameLocations": [
															"28191:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1306,
														"src": "28191:10:0"
													},
													"referencedDeclaration": 1306,
													"src": "28191:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1306_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28190:22:0"
									},
									"scope": 1398,
									"src": "28131:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "28521:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "28583:44:0",
													"nodeType": "YulBlock",
													"src": "28583:44:0",
													"statements": [
														{
															"nativeSrc": "28597:20:0",
															"nodeType": "YulAssignment",
															"src": "28597:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "28607:10:0",
																"nodeType": "YulIdentifier",
																"src": "28607:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "28597:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "28597:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1371,
														"isOffset": false,
														"isSlot": true,
														"src": "28597:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1367,
														"isOffset": false,
														"isSlot": true,
														"src": "28607:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1373,
												"nodeType": "InlineAssembly",
												"src": "28574:53:0"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "28325:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "28440:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "28469:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28454:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28454:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28453:22:0"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "28518:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28499:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1306_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "StringSlot",
														"nameLocations": [
															"28499:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1306,
														"src": "28499:10:0"
													},
													"referencedDeclaration": 1306,
													"src": "28499:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1306_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28498:22:0"
									},
									"scope": 1398,
									"src": "28431:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "28809:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "28871:38:0",
													"nodeType": "YulBlock",
													"src": "28871:38:0",
													"statements": [
														{
															"nativeSrc": "28885:14:0",
															"nodeType": "YulAssignment",
															"src": "28885:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "28895:4:0",
																"nodeType": "YulIdentifier",
																"src": "28895:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "28885:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "28885:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1382,
														"isOffset": false,
														"isSlot": true,
														"src": "28885:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1378,
														"isOffset": false,
														"isSlot": false,
														"src": "28895:4:0",
														"valueSize": 1
													}
												],
												"id": 1384,
												"nodeType": "InlineAssembly",
												"src": "28862:47:0"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "28639:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "28738:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "28759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "28751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28750:14:0"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "28806:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "28788:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1309_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "BytesSlot",
														"nameLocations": [
															"28788:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1309,
														"src": "28788:9:0"
													},
													"referencedDeclaration": 1309,
													"src": "28788:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1309_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28787:21:0"
									},
									"scope": 1398,
									"src": "28729:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "29112:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "29174:44:0",
													"nodeType": "YulBlock",
													"src": "29174:44:0",
													"statements": [
														{
															"nativeSrc": "29188:20:0",
															"nodeType": "YulAssignment",
															"src": "29188:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "29198:10:0",
																"nodeType": "YulIdentifier",
																"src": "29198:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "29188:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "29188:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1393,
														"isOffset": false,
														"isSlot": true,
														"src": "29188:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1389,
														"isOffset": false,
														"isSlot": true,
														"src": "29198:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1395,
												"nodeType": "InlineAssembly",
												"src": "29165:53:0"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "28921:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "29034:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "29061:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "29047:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29046:21:0"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "29109:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "29091:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1309_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1391,
														"name": "BytesSlot",
														"nameLocations": [
															"29091:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1309,
														"src": "29091:9:0"
													},
													"referencedDeclaration": 1309,
													"src": "29091:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1309_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29090:21:0"
									},
									"scope": 1398,
									"src": "29025:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3440,
							"src": "26541:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1399,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29361:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1400,
								"nodeType": "StructuredDocumentation",
								"src": "29389:63:0",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1576,
							"linearizedBaseContracts": [
								1576
							],
							"name": "Arrays",
							"nameLocation": "29461:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1403,
									"libraryName": {
										"id": 1401,
										"name": "StorageSlot",
										"nameLocations": [
											"29480:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1398,
										"src": "29480:11:0"
									},
									"nodeType": "UsingForDirective",
									"src": "29474:30:0",
									"typeName": {
										"id": 1402,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "29496:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "30020:834:0",
										"statements": [
											{
												"assignments": [
													1415
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "30038:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "30030:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"hexValue": "30",
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30044:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30030:15:0"
											},
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "30063:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "30055:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"expression": {
														"id": 1420,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "30070:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30076:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30070:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30055:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1423,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "30097:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30097:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1429,
												"nodeType": "IfStatement",
												"src": "30093:48:0",
												"trueBody": {
													"id": 1428,
													"nodeType": "Block",
													"src": "30108:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30129:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1413,
															"id": 1427,
															"nodeType": "Return",
															"src": "30122:8:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 1461,
													"nodeType": "Block",
													"src": "30170:423:0",
													"statements": [
														{
															"assignments": [
																1434
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1434,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "30192:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1461,
																	"src": "30184:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1433,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30184:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1440,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1437,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "30211:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1438,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "30216:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1435,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "30198:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1289_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30203:7:0",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 463,
																	"src": "30198:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30198:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "30184:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1442,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "30459:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1443,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1434,
																				"src": "30466:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1441,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1507,
																				1528,
																				1549
																			],
																			"referencedDeclaration": 1549,
																			"src": "30446:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1303_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30446:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1303_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30471:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1302,
																	"src": "30446:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1446,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "30479:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30446:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1459,
																"nodeType": "Block",
																"src": "30537:46:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1453,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "30555:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1454,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1434,
																					"src": "30561:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30567:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "30561:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30555:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1458,
																		"nodeType": "ExpressionStatement",
																		"src": "30555:13:0"
																	}
																]
															},
															"id": 1460,
															"nodeType": "IfStatement",
															"src": "30442:141:0",
															"trueBody": {
																"id": 1452,
																"nodeType": "Block",
																"src": "30488:43:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1448,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1419,
																				"src": "30506:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1449,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1434,
																				"src": "30513:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30506:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1451,
																		"nodeType": "ExpressionStatement",
																		"src": "30506:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1430,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "30158:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1431,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "30164:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30158:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1462,
												"nodeType": "WhileStatement",
												"src": "30151:442:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1463,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "30710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30716:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "30710:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1467,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "30734:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1468,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "30741:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30747:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30741:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1466,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1507,
																		1528,
																		1549
																	],
																	"referencedDeclaration": 1549,
																	"src": "30721:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1303_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30721:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1303_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30750:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1302,
															"src": "30721:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1473,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "30759:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "30721:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30710:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1483,
													"nodeType": "Block",
													"src": "30813:35:0",
													"statements": [
														{
															"expression": {
																"id": 1481,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "30834:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1413,
															"id": 1482,
															"nodeType": "Return",
															"src": "30827:10:0"
														}
													]
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "30706:142:0",
												"trueBody": {
													"id": 1480,
													"nodeType": "Block",
													"src": "30768:39:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1476,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "30789:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30795:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "30789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1413,
															"id": 1479,
															"nodeType": "Return",
															"src": "30782:14:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "29510:407:0",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "29931:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "29964:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "29946:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "29946:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "29979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "29971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29945:42:0"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "30011:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30010:9:0"
									},
									"scope": 1576,
									"src": "29922:932:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "31170:459:0",
										"statements": [
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "31188:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "31180:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1498,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "31180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1500,
												"nodeType": "VariableDeclarationStatement",
												"src": "31180:12:0"
											},
											{
												"AST": {
													"nativeSrc": "31493:92:0",
													"nodeType": "YulBlock",
													"src": "31493:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31514:1:0",
																		"nodeType": "YulLiteral",
																		"src": "31514:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "31517:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "31517:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31507:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31507:6:0"
																},
																"nativeSrc": "31507:19:0",
																"nodeType": "YulFunctionCall",
																"src": "31507:19:0"
															},
															"nativeSrc": "31507:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "31507:19:0"
														},
														{
															"nativeSrc": "31539:36:0",
															"nodeType": "YulAssignment",
															"src": "31539:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "31561:1:0",
																				"nodeType": "YulLiteral",
																				"src": "31561:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31564:4:0",
																				"nodeType": "YulLiteral",
																				"src": "31564:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "31551:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "31551:9:0"
																		},
																		"nativeSrc": "31551:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "31551:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "31571:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "31571:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31547:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "31547:3:0"
																},
																"nativeSrc": "31547:28:0",
																"nodeType": "YulFunctionCall",
																"src": "31547:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "31539:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "31539:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1490,
														"isOffset": false,
														"isSlot": true,
														"src": "31517:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1492,
														"isOffset": false,
														"isSlot": false,
														"src": "31571:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1499,
														"isOffset": false,
														"isSlot": false,
														"src": "31539:4:0",
														"valueSize": 1
													}
												],
												"id": 1501,
												"nodeType": "InlineAssembly",
												"src": "31484:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1502,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "31601:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31606:14:0",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1320,
														"src": "31601:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1294_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31601:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1294_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1505,
												"nodeType": "Return",
												"src": "31594:28:0"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "30860:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "31065:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "31096:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "31078:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1488,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "31078:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1489,
													"nodeType": "ArrayTypeName",
													"src": "31078:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "31109:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "31101:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31077:36:0"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "31137:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1294_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1494,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"31137:11:0",
															"31149:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1294,
														"src": "31137:23:0"
													},
													"referencedDeclaration": 1294,
													"src": "31137:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1294_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31136:33:0"
									},
									"scope": 1576,
									"src": "31056:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "31945:459:0",
										"statements": [
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "31963:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1527,
														"src": "31955:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1519,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "31955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"nodeType": "VariableDeclarationStatement",
												"src": "31955:12:0"
											},
											{
												"AST": {
													"nativeSrc": "32268:92:0",
													"nodeType": "YulBlock",
													"src": "32268:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32289:1:0",
																		"nodeType": "YulLiteral",
																		"src": "32289:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "32292:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "32292:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32282:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "32282:6:0"
																},
																"nativeSrc": "32282:19:0",
																"nodeType": "YulFunctionCall",
																"src": "32282:19:0"
															},
															"nativeSrc": "32282:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "32282:19:0"
														},
														{
															"nativeSrc": "32314:36:0",
															"nodeType": "YulAssignment",
															"src": "32314:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "32336:1:0",
																				"nodeType": "YulLiteral",
																				"src": "32336:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32339:4:0",
																				"nodeType": "YulLiteral",
																				"src": "32339:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "32326:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "32326:9:0"
																		},
																		"nativeSrc": "32326:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "32326:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "32346:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "32346:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32322:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "32322:3:0"
																},
																"nativeSrc": "32322:28:0",
																"nodeType": "YulFunctionCall",
																"src": "32322:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "32314:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "32314:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1511,
														"isOffset": false,
														"isSlot": true,
														"src": "32292:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1513,
														"isOffset": false,
														"isSlot": false,
														"src": "32346:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1520,
														"isOffset": false,
														"isSlot": false,
														"src": "32314:4:0",
														"valueSize": 1
													}
												],
												"id": 1522,
												"nodeType": "InlineAssembly",
												"src": "32259:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1523,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "32376:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32381:14:0",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1342,
														"src": "32376:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1300_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32376:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1300_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1526,
												"nodeType": "Return",
												"src": "32369:28:0"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "31635:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "31840:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "31871:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "31853:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1509,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "31853:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1510,
													"nodeType": "ArrayTypeName",
													"src": "31853:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "31884:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "31876:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31852:36:0"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "31912:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1300_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1515,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"31912:11:0",
															"31924:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1300,
														"src": "31912:23:0"
													},
													"referencedDeclaration": 1300,
													"src": "31912:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1300_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31911:33:0"
									},
									"scope": 1576,
									"src": "31831:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "32720:459:0",
										"statements": [
											{
												"assignments": [
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "32738:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1548,
														"src": "32730:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1540,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "32730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1542,
												"nodeType": "VariableDeclarationStatement",
												"src": "32730:12:0"
											},
											{
												"AST": {
													"nativeSrc": "33043:92:0",
													"nodeType": "YulBlock",
													"src": "33043:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33064:1:0",
																		"nodeType": "YulLiteral",
																		"src": "33064:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "33067:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "33067:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33057:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33057:6:0"
																},
																"nativeSrc": "33057:19:0",
																"nodeType": "YulFunctionCall",
																"src": "33057:19:0"
															},
															"nativeSrc": "33057:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "33057:19:0"
														},
														{
															"nativeSrc": "33089:36:0",
															"nodeType": "YulAssignment",
															"src": "33089:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "33111:1:0",
																				"nodeType": "YulLiteral",
																				"src": "33111:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33114:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33114:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "33101:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "33101:9:0"
																		},
																		"nativeSrc": "33101:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33101:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "33121:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33121:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33097:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "33097:3:0"
																},
																"nativeSrc": "33097:28:0",
																"nodeType": "YulFunctionCall",
																"src": "33097:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "33089:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "33089:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1532,
														"isOffset": false,
														"isSlot": true,
														"src": "33067:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1534,
														"isOffset": false,
														"isSlot": false,
														"src": "33121:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1541,
														"isOffset": false,
														"isSlot": false,
														"src": "33089:4:0",
														"valueSize": 1
													}
												],
												"id": 1543,
												"nodeType": "InlineAssembly",
												"src": "33034:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1544,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "33151:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33156:14:0",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1353,
														"src": "33151:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1303_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33151:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1303_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1539,
												"id": 1547,
												"nodeType": "Return",
												"src": "33144:28:0"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "32410:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "32615:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "32646:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "32628:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1530,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1531,
													"nodeType": "ArrayTypeName",
													"src": "32628:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "32659:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "32651:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32627:36:0"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "32687:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1303_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1536,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"32687:11:0",
															"32699:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1303,
														"src": "32687:23:0"
													},
													"referencedDeclaration": 1303,
													"src": "32687:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1303_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32686:33:0"
									},
									"scope": 1576,
									"src": "32606:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "33480:98:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "33499:73:0",
													"nodeType": "YulBlock",
													"src": "33499:73:0",
													"statements": [
														{
															"nativeSrc": "33513:49:0",
															"nodeType": "YulAssignment",
															"src": "33513:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "33534:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "33534:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "33539:4:0",
																						"nodeType": "YulLiteral",
																						"src": "33539:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "33530:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "33530:3:0"
																				},
																				"nativeSrc": "33530:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "33530:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "33550:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "33550:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "33555:4:0",
																						"nodeType": "YulLiteral",
																						"src": "33555:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "33546:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "33546:3:0"
																				},
																				"nativeSrc": "33546:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "33546:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33526:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33526:3:0"
																		},
																		"nativeSrc": "33526:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33526:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "33520:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "33520:5:0"
																},
																"nativeSrc": "33520:42:0",
																"nodeType": "YulFunctionCall",
																"src": "33520:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "33513:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "33513:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1553,
														"isOffset": false,
														"isSlot": false,
														"src": "33534:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1555,
														"isOffset": false,
														"isSlot": false,
														"src": "33550:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1558,
														"isOffset": false,
														"isSlot": false,
														"src": "33513:3:0",
														"valueSize": 1
													}
												],
												"id": 1560,
												"nodeType": "InlineAssembly",
												"src": "33490:82:0"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "33185:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "33390:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "33426:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "33409:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1551,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "33409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1552,
													"nodeType": "ArrayTypeName",
													"src": "33409:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "33439:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "33431:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33408:35:0"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "33475:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "33467:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33466:13:0"
									},
									"scope": 1576,
									"src": "33381:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "33879:98:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "33898:73:0",
													"nodeType": "YulBlock",
													"src": "33898:73:0",
													"statements": [
														{
															"nativeSrc": "33912:49:0",
															"nodeType": "YulAssignment",
															"src": "33912:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "33933:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "33933:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "33938:4:0",
																						"nodeType": "YulLiteral",
																						"src": "33938:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "33929:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "33929:3:0"
																				},
																				"nativeSrc": "33929:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "33929:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "33949:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "33949:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "33954:4:0",
																						"nodeType": "YulLiteral",
																						"src": "33954:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "33945:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "33945:3:0"
																				},
																				"nativeSrc": "33945:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "33945:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33925:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33925:3:0"
																		},
																		"nativeSrc": "33925:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33925:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "33919:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "33919:5:0"
																},
																"nativeSrc": "33919:42:0",
																"nodeType": "YulFunctionCall",
																"src": "33919:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "33912:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "33912:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1566,
														"isOffset": false,
														"isSlot": false,
														"src": "33933:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1568,
														"isOffset": false,
														"isSlot": false,
														"src": "33949:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1571,
														"isOffset": false,
														"isSlot": false,
														"src": "33912:3:0",
														"valueSize": 1
													}
												],
												"id": 1573,
												"nodeType": "InlineAssembly",
												"src": "33889:82:0"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "33584:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "33789:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "33825:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "33808:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1564,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "33808:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1565,
													"nodeType": "ArrayTypeName",
													"src": "33808:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "33838:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "33830:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33807:35:0"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "33874:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "33866:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33865:13:0"
									},
									"scope": 1576,
									"src": "33780:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3440,
							"src": "29453:4526:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "34116:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1578,
								"nodeType": "StructuredDocumentation",
								"src": "34142:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1605,
							"linearizedBaseContracts": [
								1605
							],
							"name": "Context",
							"nameLocation": "34657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "34733:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1583,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "34750:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "34754:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "34750:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1585,
												"nodeType": "Return",
												"src": "34743:17:0"
											}
										]
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "34680:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34690:2:0"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "34724:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34723:9:0"
									},
									"scope": 1605,
									"src": "34671:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "34840:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1592,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "34857:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "34861:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "34857:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1594,
												"nodeType": "Return",
												"src": "34850:15:0"
											}
										]
									},
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "34782:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34790:2:0"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "34824:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34824:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34823:16:0"
									},
									"scope": 1605,
									"src": "34773:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "34950:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34967:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1600,
												"id": 1602,
												"nodeType": "Return",
												"src": "34960:8:0"
											}
										]
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "34887:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34907:2:0"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "34941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34940:9:0"
									},
									"scope": 1605,
									"src": "34878:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3440,
							"src": "34639:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1606,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35122:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1608,
										"name": "Context",
										"nameLocations": [
											"36232:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1605,
										"src": "36232:7:0"
									},
									"id": 1609,
									"nodeType": "InheritanceSpecifier",
									"src": "36232:7:0"
								},
								{
									"baseName": {
										"id": 1610,
										"name": "IERC20",
										"nameLocations": [
											"36241:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "36241:6:0"
									},
									"id": 1611,
									"nodeType": "InheritanceSpecifier",
									"src": "36241:6:0"
								},
								{
									"baseName": {
										"id": 1612,
										"name": "IERC20Metadata",
										"nameLocations": [
											"36249:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "36249:14:0"
									},
									"id": 1613,
									"nodeType": "InheritanceSpecifier",
									"src": "36249:14:0"
								},
								{
									"baseName": {
										"id": 1614,
										"name": "IERC20Errors",
										"nameLocations": [
											"36265:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 141,
										"src": "36265:12:0"
									},
									"id": 1615,
									"nodeType": "InheritanceSpecifier",
									"src": "36265:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1607,
								"nodeType": "StructuredDocumentation",
								"src": "35152:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 2111,
							"linearizedBaseContracts": [
								2111,
								141,
								100,
								77,
								1605
							],
							"name": "ERC20",
							"nameLocation": "36223:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1619,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "36328:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36284:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1618,
										"keyName": "account",
										"keyNameLocation": "36300:7:0",
										"keyType": {
											"id": 1616,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36292:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "36284:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1617,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36311:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1625,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "36416:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36344:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1624,
										"keyName": "account",
										"keyNameLocation": "36360:7:0",
										"keyType": {
											"id": 1620,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "36352:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "36344:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1623,
											"keyName": "spender",
											"keyNameLocation": "36387:7:0",
											"keyType": {
												"id": 1621,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "36379:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "36371:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1622,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "36398:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1627,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "36450:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36434:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1626,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "36434:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1629,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "36484:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36469:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1628,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36469:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1631,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "36510:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36495:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1630,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36495:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "36756:57:0",
										"statements": [
											{
												"expression": {
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1639,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "36766:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1640,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "36774:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "36766:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "36766:13:0"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1643,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "36789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1644,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "36799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "36789:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "36789:17:0"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "36524:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1648,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "36726:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "36712:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "36747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "36733:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36711:44:0"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36756:0:0"
									},
									"scope": 2111,
									"src": "36700:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "36938:29:0",
										"statements": [
											{
												"expression": {
													"id": 1654,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1629,
													"src": "36955:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1653,
												"id": 1655,
												"nodeType": "Return",
												"src": "36948:12:0"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "36819:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "36887:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36891:2:0"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "36923:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36923:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36922:15:0"
									},
									"scope": 2111,
									"src": "36878:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "37142:31:0",
										"statements": [
											{
												"expression": {
													"id": 1663,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1631,
													"src": "37159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1664,
												"nodeType": "Return",
												"src": "37152:14:0"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "36973:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "37089:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37095:2:0"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "37127:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37127:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37126:15:0"
									},
									"scope": 2111,
									"src": "37080:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "37862:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "37879:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1671,
												"id": 1673,
												"nodeType": "Return",
												"src": "37872:9:0"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "37179:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "37815:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37823:2:0"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "37855:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1669,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "37855:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37854:7:0"
									},
									"scope": 2111,
									"src": "37806:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "38009:36:0",
										"statements": [
											{
												"expression": {
													"id": 1681,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1627,
													"src": "38026:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1682,
												"nodeType": "Return",
												"src": "38019:19:0"
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "37894:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "37957:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37968:2:0"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "38000:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37999:9:0"
									},
									"scope": 2111,
									"src": "37948:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "38177:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1692,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "38194:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1694,
													"indexExpression": {
														"id": 1693,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "38204:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38194:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1691,
												"id": 1695,
												"nodeType": "Return",
												"src": "38187:25:0"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "38051:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "38112:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "38130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "38122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38121:17:0"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "38168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38167:9:0"
									},
									"scope": 2111,
									"src": "38103:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "38489:103:0",
										"statements": [
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "38507:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1720,
														"src": "38499:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1707,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "38499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1711,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1709,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "38515:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38515:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38499:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1713,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "38547:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1714,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "38554:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1715,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "38558:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1712,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "38537:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38537:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "38537:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "38581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1706,
												"id": 1719,
												"nodeType": "Return",
												"src": "38574:11:0"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "38225:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "38423:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38440:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "38432:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "38452:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "38444:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38431:27:0"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "38483:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38482:6:0"
									},
									"scope": 2111,
									"src": "38414:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "38739:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1731,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "38756:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1733,
														"indexExpression": {
															"id": 1732,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "38768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "38756:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1735,
													"indexExpression": {
														"id": 1734,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "38775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38756:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1736,
												"nodeType": "Return",
												"src": "38749:34:0"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "38598:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "38659:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "38677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "38669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "38692:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "38684:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38668:32:0"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "38730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38729:9:0"
									},
									"scope": 2111,
									"src": "38650:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "39176:107:0",
										"statements": [
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "39194:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "39186:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1748,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39186:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1750,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "39202:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39202:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39186:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1754,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "39233:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "39240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "39249:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1753,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2002,
															2062
														],
														"referencedDeclaration": 2002,
														"src": "39224:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39224:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "39224:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "39272:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1747,
												"id": 1760,
												"nodeType": "Return",
												"src": "39265:11:0"
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "38796:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "39106:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "39122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39139:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39113:32:0"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39169:6:0"
									},
									"scope": 2111,
									"src": "39097:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "39936:151:0",
										"statements": [
											{
												"assignments": [
													1775
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "39954:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1793,
														"src": "39946:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39946:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "39964:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39964:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39946:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1780,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "40002:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1781,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "40008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "40017:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1779,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "39986:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39986:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "39986:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1786,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "40043:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "40049:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1788,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "40053:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "40033:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40033:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "40033:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "40076:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1773,
												"id": 1792,
												"nodeType": "Return",
												"src": "40069:11:0"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "39289:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "39852:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39873:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "39865:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39887:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "39879:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39899:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "39891:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39864:41:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "39930:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39930:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39929:6:0"
									},
									"scope": 2111,
									"src": "39843:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "40529:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "40543:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1805,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40551:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40551:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40543:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1818,
												"nodeType": "IfStatement",
												"src": "40539:86:0",
												"trueBody": {
													"id": 1817,
													"nodeType": "Block",
													"src": "40563:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40611:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40603:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1811,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40603:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40603:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1810,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "40584:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40584:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1816,
															"nodeType": "RevertStatement",
															"src": "40577:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "40638:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40652:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1820,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40644:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40644:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40638:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1833,
												"nodeType": "IfStatement",
												"src": "40634:86:0",
												"trueBody": {
													"id": 1832,
													"nodeType": "Block",
													"src": "40656:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40706:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40698:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1826,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40698:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40698:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1825,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "40677:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40677:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1831,
															"nodeType": "RevertStatement",
															"src": "40670:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1835,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "40737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1836,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "40743:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1837,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "40747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1834,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "40729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40729:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "40729:24:0"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "40093:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "40469:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40487:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "40479:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "40493:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "40505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40478:41:0"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40529:0:0"
									},
									"scope": 2111,
									"src": "40460:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "41150:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1851,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "41164:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41180:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1852,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "41172:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41172:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41164:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1888,
													"nodeType": "Block",
													"src": "41338:362:0",
													"statements": [
														{
															"assignments": [
																1863
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1863,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "41360:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1888,
																	"src": "41352:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1862,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "41352:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1867,
															"initialValue": {
																"baseExpression": {
																	"id": 1864,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "41374:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1866,
																"indexExpression": {
																	"id": 1865,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "41384:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "41374:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "41352:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1868,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "41407:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1869,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "41421:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "41407:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1878,
															"nodeType": "IfStatement",
															"src": "41403:115:0",
															"trueBody": {
																"id": 1877,
																"nodeType": "Block",
																"src": "41428:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1872,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1844,
																					"src": "41478:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1873,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1863,
																					"src": "41484:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1874,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1848,
																					"src": "41497:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1871,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 111,
																				"src": "41453:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "41453:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1876,
																		"nodeType": "RevertStatement",
																		"src": "41446:57:0"
																	}
																]
															}
														},
														{
															"id": 1887,
															"nodeType": "UncheckedBlock",
															"src": "41531:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1879,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1619,
																				"src": "41638:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1881,
																			"indexExpression": {
																				"id": 1880,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1844,
																				"src": "41648:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "41638:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1882,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1863,
																				"src": "41656:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1883,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1848,
																				"src": "41670:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "41656:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41638:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1886,
																	"nodeType": "ExpressionStatement",
																	"src": "41638:37:0"
																}
															]
														}
													]
												},
												"id": 1889,
												"nodeType": "IfStatement",
												"src": "41160:540:0",
												"trueBody": {
													"id": 1861,
													"nodeType": "Block",
													"src": "41184:148:0",
													"statements": [
														{
															"expression": {
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1857,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "41300:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1858,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "41316:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "41300:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1860,
															"nodeType": "ExpressionStatement",
															"src": "41300:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "41714:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41728:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "41720:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41720:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41714:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1909,
													"nodeType": "Block",
													"src": "41929:206:0",
													"statements": [
														{
															"id": 1908,
															"nodeType": "UncheckedBlock",
															"src": "41943:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1902,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1619,
																				"src": "42088:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1904,
																			"indexExpression": {
																				"id": 1903,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1846,
																				"src": "42098:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "42088:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1905,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "42105:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "42088:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1907,
																	"nodeType": "ExpressionStatement",
																	"src": "42088:22:0"
																}
															]
														}
													]
												},
												"id": 1910,
												"nodeType": "IfStatement",
												"src": "41710:425:0",
												"trueBody": {
													"id": 1901,
													"nodeType": "Block",
													"src": "41732:191:0",
													"statements": [
														{
															"id": 1900,
															"nodeType": "UncheckedBlock",
															"src": "41746:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1896,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "41877:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1897,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "41893:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41877:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1899,
																	"nodeType": "ExpressionStatement",
																	"src": "41877:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1912,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "42159:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1913,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "42165:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1914,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "42169:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1911,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "42150:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42150:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "EmitStatement",
												"src": "42145:30:0"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "40766:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "41084:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "41100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "41092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "41106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "41126:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "41118:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41091:41:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41150:0:0"
									},
									"scope": 2111,
									"src": "41075:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "42581:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1926,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "42595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42614:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1927,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42606:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42606:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42595:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1940,
												"nodeType": "IfStatement",
												"src": "42591:91:0",
												"trueBody": {
													"id": 1939,
													"nodeType": "Block",
													"src": "42618:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42668:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "42660:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1933,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "42660:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42660:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1932,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "42639:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42639:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1938,
															"nodeType": "RevertStatement",
															"src": "42632:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42707:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1942,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "42699:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42699:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1946,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "42711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1947,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "42720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1941,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "42691:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42691:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "42691:35:0"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "42188:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "42534:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "42548:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "42540:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "42557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42539:32:0"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42581:0:0"
									},
									"scope": 2111,
									"src": "42525:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "43107:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1959,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "43121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "43132:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1960,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "43132:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "43132:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43121:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1973,
												"nodeType": "IfStatement",
												"src": "43117:89:0",
												"trueBody": {
													"id": 1972,
													"nodeType": "Block",
													"src": "43144:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43192:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43184:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1966,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43184:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43184:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1965,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "43165:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43165:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1971,
															"nodeType": "RevertStatement",
															"src": "43158:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "43223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1976,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43232:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43232:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1980,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "43244:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1974,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "43215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43215:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "43215:35:0"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "42739:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "43060:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "43074:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "43066:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43091:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "43083:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43065:32:0"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43107:0:0"
									},
									"scope": 2111,
									"src": "43051:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "43867:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "43886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "43893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "43902:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43909:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2002,
															2062
														],
														"referencedDeclaration": 2062,
														"src": "43877:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43877:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "43877:37:0"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "43263:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "43802:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "43819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "43811:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "43834:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "43826:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43851:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "43843:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43810:47:0"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43867:0:0"
									},
									"scope": 2111,
									"src": "43793:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "44851:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2014,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "44865:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2015,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44874:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44874:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44865:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "IfStatement",
												"src": "44861:89:0",
												"trueBody": {
													"id": 2027,
													"nodeType": "Block",
													"src": "44886:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44936:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "44928:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2021,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "44928:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44928:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2020,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "44907:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44907:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2026,
															"nodeType": "RevertStatement",
															"src": "44900:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2029,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "44963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44982:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2030,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44974:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44974:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44963:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2043,
												"nodeType": "IfStatement",
												"src": "44959:90:0",
												"trueBody": {
													"id": 2042,
													"nodeType": "Block",
													"src": "44986:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45035:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "45027:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2036,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "45027:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45027:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2035,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "45007:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45007:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2041,
															"nodeType": "RevertStatement",
															"src": "45000:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2044,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "45058:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2047,
															"indexExpression": {
																"id": 2045,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2005,
																"src": "45070:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "45058:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2048,
														"indexExpression": {
															"id": 2046,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "45077:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "45058:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2049,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "45088:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45058:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "45058:35:0"
											},
											{
												"condition": {
													"id": 2052,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2011,
													"src": "45107:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2060,
												"nodeType": "IfStatement",
												"src": "45103:76:0",
												"trueBody": {
													"id": 2059,
													"nodeType": "Block",
													"src": "45118:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "45146:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "45153:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2056,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2009,
																		"src": "45162:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2053,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "45137:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45137:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2058,
															"nodeType": "EmitStatement",
															"src": "45132:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "43927:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "44762:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "44771:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44794:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "44786:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "44803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "44823:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "44818:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2010,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44818:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44770:63:0"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44851:0:0"
									},
									"scope": 2111,
									"src": "44753:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "45556:388:0",
										"statements": [
											{
												"assignments": [
													2073
												],
												"declarations": [
													{
														"constant": false,
														"id": 2073,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "45574:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 2109,
														"src": "45566:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2072,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45566:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2078,
												"initialValue": {
													"arguments": [
														{
															"id": 2075,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "45603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2076,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "45610:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2074,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "45593:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45593:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45566:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2079,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "45632:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "45657:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2081,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "45657:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 2080,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "45652:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45652:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "45666:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "45652:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45632:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "IfStatement",
												"src": "45628:310:0",
												"trueBody": {
													"id": 2107,
													"nodeType": "Block",
													"src": "45671:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2086,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "45689:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2087,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "45708:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45689:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2096,
															"nodeType": "IfStatement",
															"src": "45685:130:0",
															"trueBody": {
																"id": 2095,
																"nodeType": "Block",
																"src": "45715:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2090,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "45767:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2091,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2073,
																					"src": "45776:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2092,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2069,
																					"src": "45794:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2089,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 130,
																				"src": "45740:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45740:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2094,
																		"nodeType": "RevertStatement",
																		"src": "45733:67:0"
																	}
																]
															}
														},
														{
															"id": 2106,
															"nodeType": "UncheckedBlock",
															"src": "45828:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2098,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2065,
																				"src": "45865:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2099,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "45872:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2100,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2073,
																					"src": "45881:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2101,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2069,
																					"src": "45900:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "45881:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45907:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 2097,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				2002,
																				2062
																			],
																			"referencedDeclaration": 2062,
																			"src": "45856:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45856:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2105,
																	"nodeType": "ExpressionStatement",
																	"src": "45856:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "45191:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "45476:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "45500:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "45492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45515:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "45507:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "45532:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "45524:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45491:47:0"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45556:0:0"
									},
									"scope": 2111,
									"src": "45467:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3440,
							"src": "36205:9741:0",
							"usedErrors": [
								111,
								116,
								121,
								130,
								135,
								140
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 2112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "46111:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2113,
								"nodeType": "StructuredDocumentation",
								"src": "46137:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2122,
							"linearizedBaseContracts": [
								2122
							],
							"name": "IERC165",
							"nameLocation": "46427:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "46441:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "46795:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "46820:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "46813:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2115,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "46813:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46812:20:0"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "46856:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "46856:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46855:6:0"
									},
									"scope": 2122,
									"src": "46786:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "46417:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "47027:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2125,
										"name": "IERC165",
										"nameLocations": [
											"47561:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2122,
										"src": "47561:7:0"
									},
									"id": 2126,
									"nodeType": "InheritanceSpecifier",
									"src": "47561:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2124,
								"nodeType": "StructuredDocumentation",
								"src": "47054:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2143,
							"linearizedBaseContracts": [
								2143,
								2122
							],
							"name": "ERC165",
							"nameLocation": "47551:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2121
									],
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "47718:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2134,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "47735:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2136,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "47755:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2122_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2122_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2135,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "47750:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47750:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2122",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "47764:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "47750:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "47735:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2133,
												"id": 2140,
												"nodeType": "Return",
												"src": "47728:47:0"
											}
										]
									},
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "47575:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "47645:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "47670:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "47663:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "47663:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47662:20:0"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "47712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47711:6:0"
									},
									"scope": 2143,
									"src": "47636:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3440,
							"src": "47533:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "47955:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2146,
										"name": "IERC165",
										"nameLocations": [
											"48131:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2122,
										"src": "48131:7:0"
									},
									"id": 2147,
									"nodeType": "InheritanceSpecifier",
									"src": "48131:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2145,
								"nodeType": "StructuredDocumentation",
								"src": "47982:118:0",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 2182,
							"linearizedBaseContracts": [
								2182,
								2122
							],
							"name": "IERC1155Receiver",
							"nameLocation": "48111:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "48145:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 2163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "48985:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "49020:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "49012:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "49038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "49068:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "49060:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "49088:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "49080:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49118:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "49103:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49002:126:0"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "49147:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2160,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "49147:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49146:8:0"
									},
									"scope": 2182,
									"src": "48976:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "49161:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 2181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "50169:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "50209:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "50201:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "50227:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "50268:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "50249:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "50249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2170,
													"nodeType": "ArrayTypeName",
													"src": "50249:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "50300:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "50281:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2172,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "50281:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2173,
													"nodeType": "ArrayTypeName",
													"src": "50281:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "50331:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "50316:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "50316:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50191:150:0"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "50360:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2178,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "50360:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50359:8:0"
									},
									"scope": 2182,
									"src": "50160:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "48101:2269:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "50525:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2185,
										"name": "IERC165",
										"nameLocations": [
											"50710:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2122,
										"src": "50710:7:0"
									},
									"id": 2186,
									"nodeType": "InheritanceSpecifier",
									"src": "50710:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2184,
								"nodeType": "StructuredDocumentation",
								"src": "50552:135:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 2302,
							"linearizedBaseContracts": [
								2302,
								2122
							],
							"name": "IERC1155",
							"nameLocation": "50698:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2187,
										"nodeType": "StructuredDocumentation",
										"src": "50724:125:0",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 2199,
									"name": "TransferSingle",
									"nameLocation": "50860:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "50891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "50875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50917:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "50901:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50939:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "50923:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "50951:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "50943:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "50955:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50874:95:0"
									},
									"src": "50854:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "50976:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 2214,
									"name": "TransferBatch",
									"nameLocation": "51131:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "51170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "51154:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51204:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "51188:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51234:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "51218:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "51256:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "51246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2207,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2208,
													"nodeType": "ArrayTypeName",
													"src": "51246:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "51279:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "51269:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2210,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2211,
													"nodeType": "ArrayTypeName",
													"src": "51269:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51144:147:0"
									},
									"src": "51125:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "51298:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2223,
									"name": "ApprovalForAll",
									"nameLocation": "51456:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "51487:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "51471:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "51512:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "51496:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "51527:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "51522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51470:66:0"
									},
									"src": "51450:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "51543:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 2230,
									"name": "URI",
									"nameLocation": "51897:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "51901:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "51901:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "51931:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "51915:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51900:34:0"
									},
									"src": "51891:44:0"
								},
								{
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "51941:172:0",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 2240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "52127:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "52145:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "52137:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "52162:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "52154:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52136:29:0"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "52189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52188:9:0"
									},
									"scope": 2302,
									"src": "52118:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "52204:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 2253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "52406:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "52449:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "52430:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2242,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "52430:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2243,
													"nodeType": "ArrayTypeName",
													"src": "52430:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "52486:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "52467:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2245,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "52467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2246,
													"nodeType": "ArrayTypeName",
													"src": "52467:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52420:75:0"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "52519:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "52519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2250,
													"nodeType": "ArrayTypeName",
													"src": "52519:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52518:18:0"
									},
									"scope": 2302,
									"src": "52397:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2254,
										"nodeType": "StructuredDocumentation",
										"src": "52543:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 2261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "52805:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "52831:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "52823:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "52846:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "52841:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "52841:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52822:33:0"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52864:0:0"
									},
									"scope": 2302,
									"src": "52796:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "52871:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "53020:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "53045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "53037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "53062:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "53054:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53036:35:0"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "53095:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53094:6:0"
									},
									"scope": 2302,
									"src": "53011:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "53107:910:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 2285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "54031:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54056:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "54048:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54070:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "54062:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "54082:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "54074:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54094:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "54086:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "54116:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "54101:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "54101:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54047:74:0"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54130:0:0"
									},
									"scope": 2302,
									"src": "54022:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2286,
										"nodeType": "StructuredDocumentation",
										"src": "54137:814:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "54965:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "55004:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "54996:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "55018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "55057:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "55038:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2291,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "55038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2292,
													"nodeType": "ArrayTypeName",
													"src": "55038:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "55089:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "55070:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2294,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "55070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2295,
													"nodeType": "ArrayTypeName",
													"src": "55070:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55120:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "55105:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55105:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54986:144:0"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55139:0:0"
									},
									"scope": 2302,
									"src": "54956:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "50688:4454:0",
							"usedErrors": [],
							"usedEvents": [
								2199,
								2214,
								2223,
								2230
							]
						},
						{
							"id": 2303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "55341:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2305,
										"name": "IERC1155",
										"nameLocations": [
											"55566:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2302,
										"src": "55566:8:0"
									},
									"id": 2306,
									"nodeType": "InheritanceSpecifier",
									"src": "55566:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2304,
								"nodeType": "StructuredDocumentation",
								"src": "55368:164:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 2315,
							"linearizedBaseContracts": [
								2315,
								2302,
								2122
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "55543:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "55581:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 2314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "55787:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "55799:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "55791:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55790:12:0"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "55826:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55826:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55825:15:0"
									},
									"scope": 2315,
									"src": "55778:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "55533:310:0",
							"usedErrors": [],
							"usedEvents": [
								2199,
								2214,
								2223,
								2230
							]
						},
						{
							"id": 2316,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "55996:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2318,
										"name": "Context",
										"nameLocations": [
											"56243:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1605,
										"src": "56243:7:0"
									},
									"id": 2319,
									"nodeType": "InheritanceSpecifier",
									"src": "56243:7:0"
								},
								{
									"baseName": {
										"id": 2320,
										"name": "ERC165",
										"nameLocations": [
											"56252:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2143,
										"src": "56252:6:0"
									},
									"id": 2321,
									"nodeType": "InheritanceSpecifier",
									"src": "56252:6:0"
								},
								{
									"baseName": {
										"id": 2322,
										"name": "IERC1155",
										"nameLocations": [
											"56260:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2302,
										"src": "56260:8:0"
									},
									"id": 2323,
									"nodeType": "InheritanceSpecifier",
									"src": "56260:8:0"
								},
								{
									"baseName": {
										"id": 2324,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"56270:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2315,
										"src": "56270:19:0"
									},
									"id": 2325,
									"nodeType": "InheritanceSpecifier",
									"src": "56270:19:0"
								},
								{
									"baseName": {
										"id": 2326,
										"name": "IERC1155Errors",
										"nameLocations": [
											"56291:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 236,
										"src": "56291:14:0"
									},
									"id": 2327,
									"nodeType": "InheritanceSpecifier",
									"src": "56291:14:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2317,
								"nodeType": "StructuredDocumentation",
								"src": "56029:184:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 3350,
							"linearizedBaseContracts": [
								3350,
								236,
								2315,
								2302,
								2143,
								2122,
								1605
							],
							"name": "ERC1155",
							"nameLocation": "56232:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2331,
									"libraryName": {
										"id": 2328,
										"name": "Arrays",
										"nameLocations": [
											"56318:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1576,
										"src": "56318:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "56312:27:0",
									"typeName": {
										"baseType": {
											"id": 2329,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56329:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2330,
										"nodeType": "ArrayTypeName",
										"src": "56329:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 2335,
									"libraryName": {
										"id": 2332,
										"name": "Arrays",
										"nameLocations": [
											"56350:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1576,
										"src": "56350:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "56344:27:0",
									"typeName": {
										"baseType": {
											"id": 2333,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "56361:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2334,
										"nodeType": "ArrayTypeName",
										"src": "56361:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 2341,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "56444:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3350,
									"src": "56377:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2340,
										"keyName": "id",
										"keyNameLocation": "56393:2:0",
										"keyType": {
											"id": 2336,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56385:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "56377:58:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2339,
											"keyName": "account",
											"keyNameLocation": "56415:7:0",
											"keyType": {
												"id": 2337,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "56407:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "56399:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2338,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "56426:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2347,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "56530:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3350,
									"src": "56460:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 2346,
										"keyName": "account",
										"keyNameLocation": "56476:7:0",
										"keyType": {
											"id": 2342,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "56468:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "56460:61:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2345,
											"keyName": "operator",
											"keyNameLocation": "56503:8:0",
											"keyType": {
												"id": 2343,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "56495:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "56487:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2344,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "56515:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2349,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "56684:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 3350,
									"src": "56669:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "56669:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "56770:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2356,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "56788:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2355,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "56780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56780:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2358,
												"nodeType": "ExpressionStatement",
												"src": "56780:13:0"
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "56695:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 2360,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "56764:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "56750:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56750:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56749:20:0"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56770:0:0"
									},
									"scope": 3350,
									"src": "56738:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2121,
										2142
									],
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "56975:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "57004:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2373,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "57024:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$2302_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$2302_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 2372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "57019:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57019:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$2302",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "57034:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "57019:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "57004:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2377,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "57061:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2379,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2315,
																			"src": "57081:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$2315_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$2315_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 2378,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "57076:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57076:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$2315",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "57102:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "57076:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "57061:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "57004:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2386,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "57153:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2384,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "57129:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$3350_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57135:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2142,
															"src": "57129:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57129:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "57004:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2370,
												"id": 2389,
												"nodeType": "Return",
												"src": "56985:180:0"
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "56806:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "56876:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2367,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2365,
												"name": "ERC165",
												"nameLocations": [
													"56943:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2143,
												"src": "56943:6:0"
											},
											{
												"id": 2366,
												"name": "IERC165",
												"nameLocations": [
													"56951:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2122,
												"src": "56951:7:0"
											}
										],
										"src": "56934:25:0"
									},
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "56901:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "56894:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2362,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "56894:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56893:20:0"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "56969:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56968:6:0"
									},
									"scope": 3350,
									"src": "56867:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2314
									],
									"body": {
										"id": 2401,
										"nodeType": "Block",
										"src": "57646:28:0",
										"statements": [
											{
												"expression": {
													"id": 2399,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2349,
													"src": "57663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2398,
												"id": 2400,
												"nodeType": "Return",
												"src": "57656:11:0"
											}
										]
									},
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "57178:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 2402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "57580:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "57584:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57583:18:0"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "57631:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "57631:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57630:15:0"
									},
									"scope": 3350,
									"src": "57571:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2240
									],
									"body": {
										"id": 2418,
										"nodeType": "Block",
										"src": "57820:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2412,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "57837:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 2414,
														"indexExpression": {
															"id": 2413,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "57847:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "57837:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2416,
													"indexExpression": {
														"id": 2415,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "57851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "57837:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2411,
												"id": 2417,
												"nodeType": "Return",
												"src": "57830:29:0"
											}
										]
									},
									"documentation": {
										"id": 2403,
										"nodeType": "StructuredDocumentation",
										"src": "57680:49:0",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 2419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "57743:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "57761:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "57753:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "57778:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "57770:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57752:29:0"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "57811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57810:9:0"
									},
									"scope": 3350,
									"src": "57734:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2253
									],
									"body": {
										"id": 2488,
										"nodeType": "Block",
										"src": "58165:410:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2432,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2423,
															"src": "58179:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58188:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "58179:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2434,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2426,
															"src": "58198:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58202:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "58198:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58179:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2445,
												"nodeType": "IfStatement",
												"src": "58175:121:0",
												"trueBody": {
													"id": 2444,
													"nodeType": "Block",
													"src": "58210:86:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2438,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2426,
																			"src": "58257:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "58261:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "58257:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2440,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2423,
																			"src": "58269:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "58278:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "58269:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2437,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "58231:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58231:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2443,
															"nodeType": "RevertStatement",
															"src": "58224:61:0"
														}
													]
												}
											},
											{
												"assignments": [
													2450
												],
												"declarations": [
													{
														"constant": false,
														"id": 2450,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "58323:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2488,
														"src": "58306:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2448,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "58306:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2449,
															"nodeType": "ArrayTypeName",
															"src": "58306:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2457,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2454,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "58353:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58362:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "58353:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "58339:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2451,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "58343:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2452,
															"nodeType": "ArrayTypeName",
															"src": "58343:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58339:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58306:63:0"
											},
											{
												"body": {
													"id": 2484,
													"nodeType": "Block",
													"src": "58426:112:0",
													"statements": [
														{
															"expression": {
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2469,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2450,
																		"src": "58440:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2471,
																	"indexExpression": {
																		"id": 2470,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2459,
																		"src": "58454:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "58440:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2475,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2459,
																					"src": "58497:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2473,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "58469:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "58478:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1575,
																				"src": "58469:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "58469:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 2479,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2459,
																					"src": "58524:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2477,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "58501:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "58505:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1562,
																				"src": "58501:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "58501:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2472,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2419,
																		"src": "58459:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "58459:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "58440:87:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2483,
															"nodeType": "ExpressionStatement",
															"src": "58440:87:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2462,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "58400:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2463,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2423,
															"src": "58404:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58413:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "58404:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58400:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2485,
												"initializationExpression": {
													"assignments": [
														2459
													],
													"declarations": [
														{
															"constant": false,
															"id": 2459,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "58393:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2485,
															"src": "58385:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2458,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "58385:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2461,
													"initialValue": {
														"hexValue": "30",
														"id": 2460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58397:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "58385:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "58421:3:0",
														"subExpression": {
															"id": 2466,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "58423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2468,
													"nodeType": "ExpressionStatement",
													"src": "58421:3:0"
												},
												"nodeType": "ForStatement",
												"src": "58380:158:0"
											},
											{
												"expression": {
													"id": 2486,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2450,
													"src": "58555:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2431,
												"id": 2487,
												"nodeType": "Return",
												"src": "58548:20:0"
											}
										]
									},
									"documentation": {
										"id": 2420,
										"nodeType": "StructuredDocumentation",
										"src": "57872:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 2489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "58032:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "58073:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "58056:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2421,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "58056:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2422,
													"nodeType": "ArrayTypeName",
													"src": "58056:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "58108:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "58091:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2424,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "58091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2425,
													"nodeType": "ArrayTypeName",
													"src": "58091:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58046:71:0"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "58147:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2428,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "58147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2429,
													"nodeType": "ArrayTypeName",
													"src": "58147:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58146:18:0"
									},
									"scope": 3350,
									"src": "58023:552:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2261
									],
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "58718:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2498,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "58747:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58747:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2500,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "58761:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2501,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2494,
															"src": "58771:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2497,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3195,
														"src": "58728:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58728:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2503,
												"nodeType": "ExpressionStatement",
												"src": "58728:52:0"
											}
										]
									},
									"documentation": {
										"id": 2490,
										"nodeType": "StructuredDocumentation",
										"src": "58581:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "58652:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "58678:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "58670:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "58693:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "58688:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "58688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58669:33:0"
									},
									"returnParameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58718:0:0"
									},
									"scope": 3350,
									"src": "58643:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2271
									],
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "58950:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2515,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "58967:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2517,
														"indexExpression": {
															"id": 2516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2508,
															"src": "58986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "58967:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2519,
													"indexExpression": {
														"id": 2518,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "58995:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "58967:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2514,
												"id": 2520,
												"nodeType": "Return",
												"src": "58960:44:0"
											}
										]
									},
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "58793:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "58863:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58888:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "58880:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "58905:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "58897:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58879:35:0"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "58944:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "58944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58943:6:0"
									},
									"scope": 3350,
									"src": "58854:157:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2285
									],
									"body": {
										"id": 2565,
										"nodeType": "Block",
										"src": "59191:238:0",
										"statements": [
											{
												"assignments": [
													2537
												],
												"declarations": [
													{
														"constant": false,
														"id": 2537,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "59209:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2565,
														"src": "59201:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2536,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59201:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2540,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2538,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "59218:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59218:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59201:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2541,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "59244:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2542,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2537,
															"src": "59252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "59244:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "59262:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 2545,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2525,
																	"src": "59280:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2546,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "59286:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2544,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "59263:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59263:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "59244:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2556,
												"nodeType": "IfStatement",
												"src": "59240:129:0",
												"trueBody": {
													"id": 2555,
													"nodeType": "Block",
													"src": "59295:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2551,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2537,
																		"src": "59345:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2552,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "59353:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2550,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "59316:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59316:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2554,
															"nodeType": "RevertStatement",
															"src": "59309:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2558,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "59396:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "59402:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2560,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2529,
															"src": "59406:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2561,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "59410:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2562,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "59417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2557,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2907,
														"src": "59378:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59378:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2564,
												"nodeType": "ExpressionStatement",
												"src": "59378:44:0"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "59017:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 2566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "59087:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "59112:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "59104:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "59126:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "59118:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "59138:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "59130:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "59150:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "59142:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "59170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "59157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "59157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59103:72:0"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59191:0:0"
									},
									"scope": 3350,
									"src": "59078:351:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2301
									],
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "59685:245:0",
										"statements": [
											{
												"assignments": [
													2583
												],
												"declarations": [
													{
														"constant": false,
														"id": 2583,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "59703:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "59695:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2582,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59695:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2586,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2584,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "59712:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59712:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59695:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2587,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "59738:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2588,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2583,
															"src": "59746:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "59738:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "59756:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 2591,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "59774:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2592,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2583,
																	"src": "59780:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2590,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "59757:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59757:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "59738:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2602,
												"nodeType": "IfStatement",
												"src": "59734:129:0",
												"trueBody": {
													"id": 2601,
													"nodeType": "Block",
													"src": "59789:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2597,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2583,
																		"src": "59839:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2598,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "59847:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2596,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "59810:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59810:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2600,
															"nodeType": "RevertStatement",
															"src": "59803:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2604,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "59895:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2605,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "59901:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2606,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2574,
															"src": "59905:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2607,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "59910:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2608,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "59918:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2603,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2962,
														"src": "59872:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59872:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2610,
												"nodeType": "ExpressionStatement",
												"src": "59872:51:0"
											}
										]
									},
									"documentation": {
										"id": 2567,
										"nodeType": "StructuredDocumentation",
										"src": "59435:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "59510:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "59549:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "59541:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "59571:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "59563:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "59600:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "59583:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2572,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "59583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2573,
													"nodeType": "ArrayTypeName",
													"src": "59583:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "59630:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "59613:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2575,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "59613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2576,
													"nodeType": "ArrayTypeName",
													"src": "59613:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "59659:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "59646:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "59646:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59531:138:0"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59685:0:0"
									},
									"scope": 3350,
									"src": "59501:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "60738:1174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2626,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "60752:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60756:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "60752:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2628,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "60766:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60773:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "60766:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60752:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2639,
												"nodeType": "IfStatement",
												"src": "60748:117:0",
												"trueBody": {
													"id": 2638,
													"nodeType": "Block",
													"src": "60781:84:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2632,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "60828:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "60832:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "60828:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2634,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "60840:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "60847:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "60840:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2631,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "60802:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60802:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2637,
															"nodeType": "RevertStatement",
															"src": "60795:59:0"
														}
													]
												}
											},
											{
												"assignments": [
													2641
												],
												"declarations": [
													{
														"constant": false,
														"id": 2641,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "60883:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2764,
														"src": "60875:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2640,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "60875:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2644,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2642,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "60894:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60894:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60875:31:0"
											},
											{
												"body": {
													"id": 2725,
													"nodeType": "Block",
													"src": "60958:650:0",
													"statements": [
														{
															"assignments": [
																2657
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2657,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "60980:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2725,
																	"src": "60972:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2656,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "60972:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2662,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2660,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2646,
																		"src": "61008:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2658,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "60985:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "60989:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1562,
																	"src": "60985:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60985:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "60972:38:0"
														},
														{
															"assignments": [
																2664
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2664,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "61032:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2725,
																	"src": "61024:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2663,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "61024:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2669,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2667,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2646,
																		"src": "61066:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2665,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "61040:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "61047:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1562,
																	"src": "61040:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61040:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "61024:44:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2670,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "61087:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "61103:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "61095:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2671,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "61095:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "61095:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "61087:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2708,
															"nodeType": "IfStatement",
															"src": "61083:420:0",
															"trueBody": {
																"id": 2707,
																"nodeType": "Block",
																"src": "61107:396:0",
																"statements": [
																	{
																		"assignments": [
																			2677
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2677,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "61133:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2707,
																				"src": "61125:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2676,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "61125:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2683,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2678,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2341,
																					"src": "61147:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 2680,
																				"indexExpression": {
																					"id": 2679,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2657,
																					"src": "61157:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "61147:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2682,
																			"indexExpression": {
																				"id": 2681,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2615,
																				"src": "61161:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "61147:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "61125:41:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2684,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2677,
																				"src": "61188:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2685,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2664,
																				"src": "61202:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "61188:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2695,
																		"nodeType": "IfStatement",
																		"src": "61184:129:0",
																		"trueBody": {
																			"id": 2694,
																			"nodeType": "Block",
																			"src": "61209:104:0",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 2688,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2615,
																								"src": "61265:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2689,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2677,
																								"src": "61271:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2690,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2664,
																								"src": "61284:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2691,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2657,
																								"src": "61291:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2687,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 201,
																							"src": "61238:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 2692,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "61238:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2693,
																					"nodeType": "RevertStatement",
																					"src": "61231:63:0"
																				}
																			]
																		}
																	},
																	{
																		"id": 2706,
																		"nodeType": "UncheckedBlock",
																		"src": "61330:159:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2704,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2696,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2341,
																								"src": "61429:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 2699,
																							"indexExpression": {
																								"id": 2697,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2657,
																								"src": "61439:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "61429:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2700,
																						"indexExpression": {
																							"id": 2698,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2615,
																							"src": "61443:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "61429:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2703,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2701,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2677,
																							"src": "61451:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 2702,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2664,
																							"src": "61465:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "61451:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "61429:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2705,
																				"nodeType": "ExpressionStatement",
																				"src": "61429:41:0"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2709,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2617,
																	"src": "61521:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "61535:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "61527:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2710,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "61527:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "61527:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "61521:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2724,
															"nodeType": "IfStatement",
															"src": "61517:81:0",
															"trueBody": {
																"id": 2723,
																"nodeType": "Block",
																"src": "61539:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 2715,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2341,
																						"src": "61557:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 2718,
																					"indexExpression": {
																						"id": 2716,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "61567:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "61557:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2719,
																				"indexExpression": {
																					"id": 2717,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2617,
																					"src": "61571:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "61557:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2720,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2664,
																				"src": "61578:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "61557:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2722,
																		"nodeType": "ExpressionStatement",
																		"src": "61557:26:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2649,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2646,
														"src": "60937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2650,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "60941:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60945:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "60941:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60937:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2726,
												"initializationExpression": {
													"assignments": [
														2646
													],
													"declarations": [
														{
															"constant": false,
															"id": 2646,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "60930:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2726,
															"src": "60922:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2645,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "60922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2648,
													"initialValue": {
														"hexValue": "30",
														"id": 2647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "60922:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "60953:3:0",
														"subExpression": {
															"id": 2653,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "60955:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2655,
													"nodeType": "ExpressionStatement",
													"src": "60953:3:0"
												},
												"nodeType": "ForStatement",
												"src": "60917:691:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2727,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "61622:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "61626:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "61622:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "61636:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "61622:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2762,
													"nodeType": "Block",
													"src": "61830:76:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2755,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2641,
																		"src": "61863:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2756,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2615,
																		"src": "61873:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2757,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2617,
																		"src": "61879:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2758,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "61883:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2759,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "61888:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 2754,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2214,
																	"src": "61849:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61849:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2761,
															"nodeType": "EmitStatement",
															"src": "61844:51:0"
														}
													]
												},
												"id": 2763,
												"nodeType": "IfStatement",
												"src": "61618:288:0",
												"trueBody": {
													"id": 2753,
													"nodeType": "Block",
													"src": "61639:185:0",
													"statements": [
														{
															"assignments": [
																2732
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2732,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "61661:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2753,
																	"src": "61653:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2731,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "61653:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2737,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "61689:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2733,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "61666:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "61670:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1562,
																	"src": "61666:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61666:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "61653:38:0"
														},
														{
															"assignments": [
																2739
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2739,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "61713:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2753,
																	"src": "61705:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2738,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "61705:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2744,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "61747:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2740,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "61721:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "61728:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1562,
																	"src": "61721:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61721:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "61705:44:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2746,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2641,
																		"src": "61783:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2747,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2615,
																		"src": "61793:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2748,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2617,
																		"src": "61799:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2749,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2732,
																		"src": "61803:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2750,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2739,
																		"src": "61807:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2745,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "61768:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61768:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2752,
															"nodeType": "EmitStatement",
															"src": "61763:50:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2613,
										"nodeType": "StructuredDocumentation",
										"src": "59936:690:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "60640:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "60656:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "60648:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "60670:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "60662:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "60691:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "60674:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2618,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "60674:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2619,
													"nodeType": "ArrayTypeName",
													"src": "60674:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "60713:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "60696:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2621,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "60696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2622,
													"nodeType": "ArrayTypeName",
													"src": "60696:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60647:73:0"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60738:0:0"
									},
									"scope": 3350,
									"src": "60631:1281:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2840,
										"nodeType": "Block",
										"src": "62682:499:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2782,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2768,
															"src": "62700:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2783,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "62706:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2784,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "62710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2785,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2776,
															"src": "62715:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2781,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "62692:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62692:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2787,
												"nodeType": "ExpressionStatement",
												"src": "62692:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2788,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "62736:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "62750:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "62742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "62742:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "62742:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "62736:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2839,
												"nodeType": "IfStatement",
												"src": "62732:443:0",
												"trueBody": {
													"id": 2838,
													"nodeType": "Block",
													"src": "62754:421:0",
													"statements": [
														{
															"assignments": [
																2795
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2795,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "62776:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2838,
																	"src": "62768:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2794,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "62768:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2798,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2796,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1587,
																	"src": "62787:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "62787:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "62768:31:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2799,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "62817:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "62821:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "62817:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "62831:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "62817:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2836,
																"nodeType": "Block",
																"src": "63058:107:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2828,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2795,
																					"src": "63112:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2829,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2768,
																					"src": "63122:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2830,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2770,
																					"src": "63128:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2831,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2773,
																					"src": "63132:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2832,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2776,
																					"src": "63137:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2833,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2778,
																					"src": "63145:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2827,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3333,
																				"src": "63076:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "63076:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2835,
																		"nodeType": "ExpressionStatement",
																		"src": "63076:74:0"
																	}
																]
															},
															"id": 2837,
															"nodeType": "IfStatement",
															"src": "62813:352:0",
															"trueBody": {
																"id": 2826,
																"nodeType": "Block",
																"src": "62834:218:0",
																"statements": [
																	{
																		"assignments": [
																			2804
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2804,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "62860:2:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2826,
																				"src": "62852:10:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2803,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "62852:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2809,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "62888:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2805,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2773,
																					"src": "62865:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "62869:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1562,
																				"src": "62865:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "62865:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "62852:38:0"
																	},
																	{
																		"assignments": [
																			2811
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2811,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "62916:5:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2826,
																				"src": "62908:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2810,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "62908:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2816,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "62950:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2812,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2776,
																					"src": "62924:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "62931:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1562,
																				"src": "62924:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "62924:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "62908:44:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2818,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2795,
																					"src": "63001:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2819,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2768,
																					"src": "63011:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2820,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2770,
																					"src": "63017:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2821,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2804,
																					"src": "63021:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2822,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2811,
																					"src": "63025:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2823,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2778,
																					"src": "63032:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2817,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3263,
																				"src": "62970:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "62970:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2825,
																		"nodeType": "ExpressionStatement",
																		"src": "62970:67:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2766,
										"nodeType": "StructuredDocumentation",
										"src": "61918:568:0",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 2841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "62500:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "62544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "62536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "62566:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "62558:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "62595:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "62578:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2771,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "62578:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2772,
													"nodeType": "ArrayTypeName",
													"src": "62578:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "62625:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "62608:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2774,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "62608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2775,
													"nodeType": "ArrayTypeName",
													"src": "62608:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "62654:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "62641:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "62641:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62526:138:0"
									},
									"returnParameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62682:0:0"
									},
									"scope": 3350,
									"src": "62491:690:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2906,
										"nodeType": "Block",
										"src": "63746:355:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2855,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "63760:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "63774:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "63766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "63766:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "63766:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "63760:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2869,
												"nodeType": "IfStatement",
												"src": "63756:88:0",
												"trueBody": {
													"id": 2868,
													"nodeType": "Block",
													"src": "63778:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "63830:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "63822:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "63822:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "63822:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2861,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "63799:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "63799:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2867,
															"nodeType": "RevertStatement",
															"src": "63792:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2870,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "63857:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "63873:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "63865:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2871,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "63865:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "63865:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "63857:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2884,
												"nodeType": "IfStatement",
												"src": "63853:88:0",
												"trueBody": {
													"id": 2883,
													"nodeType": "Block",
													"src": "63877:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "63927:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "63919:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2877,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "63919:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "63919:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2876,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "63898:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "63898:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2882,
															"nodeType": "RevertStatement",
															"src": "63891:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													2889,
													2892
												],
												"declarations": [
													{
														"constant": false,
														"id": 2889,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "63968:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2906,
														"src": "63951:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2887,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "63951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2888,
															"nodeType": "ArrayTypeName",
															"src": "63951:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2892,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "63990:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2906,
														"src": "63973:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2890,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "63973:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2891,
															"nodeType": "ArrayTypeName",
															"src": "63973:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2897,
												"initialValue": {
													"arguments": [
														{
															"id": 2894,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2848,
															"src": "64019:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2850,
															"src": "64023:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2893,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "64000:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64000:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "63950:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2899,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2844,
															"src": "64066:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2846,
															"src": "64072:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2901,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2889,
															"src": "64076:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2902,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2892,
															"src": "64081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2903,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2852,
															"src": "64089:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2898,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "64039:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64039:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2905,
												"nodeType": "ExpressionStatement",
												"src": "64039:55:0"
											}
										]
									},
									"documentation": {
										"id": 2842,
										"nodeType": "StructuredDocumentation",
										"src": "63187:446:0",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 2907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "63647:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "63673:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "63665:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63687:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "63679:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "63699:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "63691:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "63703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "63731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "63718:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "63718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63664:72:0"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63746:0:0"
									},
									"scope": 3350,
									"src": "63638:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2961,
										"nodeType": "Block",
										"src": "64681:266:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2923,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2912,
														"src": "64695:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "64709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "64701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "64701:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "64701:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "64695:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2937,
												"nodeType": "IfStatement",
												"src": "64691:88:0",
												"trueBody": {
													"id": 2936,
													"nodeType": "Block",
													"src": "64713:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "64765:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "64757:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "64757:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "64757:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2929,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "64734:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "64734:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2935,
															"nodeType": "RevertStatement",
															"src": "64727:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2938,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2910,
														"src": "64792:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "64808:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "64800:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2939,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "64800:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "64800:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "64792:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2952,
												"nodeType": "IfStatement",
												"src": "64788:88:0",
												"trueBody": {
													"id": 2951,
													"nodeType": "Block",
													"src": "64812:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "64862:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "64854:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2945,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "64854:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "64854:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2944,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "64833:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "64833:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2950,
															"nodeType": "RevertStatement",
															"src": "64826:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2954,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2910,
															"src": "64912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2912,
															"src": "64918:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2956,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "64922:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2957,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2918,
															"src": "64927:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "64935:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2953,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "64885:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64885:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2960,
												"nodeType": "ExpressionStatement",
												"src": "64885:55:0"
											}
										]
									},
									"documentation": {
										"id": 2908,
										"nodeType": "StructuredDocumentation",
										"src": "64107:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 2962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "64511:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "64551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "64543:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "64573:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "64565:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "64602:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "64585:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2913,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "64585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2914,
													"nodeType": "ArrayTypeName",
													"src": "64585:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "64632:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "64615:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2916,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "64615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2917,
													"nodeType": "ArrayTypeName",
													"src": "64615:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "64661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "64648:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "64648:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64533:138:0"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64681:0:0"
									},
									"scope": 3350,
									"src": "64502:445:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "65825:30:0",
										"statements": [
											{
												"expression": {
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2968,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2349,
														"src": "65835:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2969,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "65842:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "65835:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2971,
												"nodeType": "ExpressionStatement",
												"src": "65835:13:0"
											}
										]
									},
									"documentation": {
										"id": 2963,
										"nodeType": "StructuredDocumentation",
										"src": "64953:811:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "65778:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "65800:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "65786:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65785:22:0"
									},
									"returnParameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65825:0:0"
									},
									"scope": 3350,
									"src": "65769:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3024,
										"nodeType": "Block",
										"src": "66315:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2985,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2976,
														"src": "66329:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "66343:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "66335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2986,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "66335:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "66335:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "66329:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2999,
												"nodeType": "IfStatement",
												"src": "66325:88:0",
												"trueBody": {
													"id": 2998,
													"nodeType": "Block",
													"src": "66347:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "66399:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "66391:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2992,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "66391:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "66391:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2991,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "66368:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66368:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2997,
															"nodeType": "RevertStatement",
															"src": "66361:41:0"
														}
													]
												}
											},
											{
												"assignments": [
													3004,
													3007
												],
												"declarations": [
													{
														"constant": false,
														"id": 3004,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "66440:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 3024,
														"src": "66423:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3002,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "66423:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3003,
															"nodeType": "ArrayTypeName",
															"src": "66423:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3007,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "66462:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3024,
														"src": "66445:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3005,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "66445:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3006,
															"nodeType": "ArrayTypeName",
															"src": "66445:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3012,
												"initialValue": {
													"arguments": [
														{
															"id": 3009,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2978,
															"src": "66491:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3010,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "66495:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3008,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "66472:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66472:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66422:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "66546:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "66538:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3014,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "66538:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "66538:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3018,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "66550:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3019,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3004,
															"src": "66554:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3020,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "66559:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3021,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2982,
															"src": "66567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3013,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "66511:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66511:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3023,
												"nodeType": "ExpressionStatement",
												"src": "66511:61:0"
											}
										]
									},
									"documentation": {
										"id": 2974,
										"nodeType": "StructuredDocumentation",
										"src": "65861:367:0",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 3025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "66242:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "66256:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "66248:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "66268:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "66260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "66280:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "66272:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "66300:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "66287:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "66287:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66247:58:0"
									},
									"returnParameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66315:0:0"
									},
									"scope": 3350,
									"src": "66233:346:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "67117:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3039,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "67131:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67145:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "67137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "67137:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67137:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "67131:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3053,
												"nodeType": "IfStatement",
												"src": "67127:88:0",
												"trueBody": {
													"id": 3052,
													"nodeType": "Block",
													"src": "67149:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "67201:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "67193:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3046,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "67193:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "67193:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3045,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "67170:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "67170:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3051,
															"nodeType": "RevertStatement",
															"src": "67163:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "67259:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "67251:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3055,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "67251:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "67251:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3059,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "67263:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3060,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "67267:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3061,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3034,
															"src": "67272:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3062,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "67280:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3054,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "67224:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67224:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3064,
												"nodeType": "ExpressionStatement",
												"src": "67224:61:0"
											}
										]
									},
									"documentation": {
										"id": 3026,
										"nodeType": "StructuredDocumentation",
										"src": "66585:420:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "67019:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "67038:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "67030:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "67059:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "67042:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3029,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "67042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3030,
													"nodeType": "ArrayTypeName",
													"src": "67042:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "67081:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "67064:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3032,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "67064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3033,
													"nodeType": "ArrayTypeName",
													"src": "67064:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "67102:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "67089:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3035,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "67089:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67029:78:0"
									},
									"returnParameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67117:0:0"
									},
									"scope": 3350,
									"src": "67010:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3115,
										"nodeType": "Block",
										"src": "67651:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3076,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "67665:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67681:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "67673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3077,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "67673:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67673:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "67665:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3090,
												"nodeType": "IfStatement",
												"src": "67661:88:0",
												"trueBody": {
													"id": 3089,
													"nodeType": "Block",
													"src": "67685:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "67735:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "67727:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3083,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "67727:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "67727:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3082,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "67706:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "67706:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3088,
															"nodeType": "RevertStatement",
															"src": "67699:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													3095,
													3098
												],
												"declarations": [
													{
														"constant": false,
														"id": 3095,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "67776:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 3115,
														"src": "67759:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3093,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "67759:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3094,
															"nodeType": "ArrayTypeName",
															"src": "67759:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3098,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "67798:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3115,
														"src": "67781:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3096,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "67781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3097,
															"nodeType": "ArrayTypeName",
															"src": "67781:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3103,
												"initialValue": {
													"arguments": [
														{
															"id": 3100,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "67827:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3101,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "67831:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3099,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3349,
														"src": "67808:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 3102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67808:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "67758:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3105,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "67874:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "67888:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "67880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3106,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "67880:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "67880:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3110,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3095,
															"src": "67892:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3111,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3098,
															"src": "67897:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67905:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 3104,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "67847:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67847:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3114,
												"nodeType": "ExpressionStatement",
												"src": "67847:61:0"
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "67298:283:0",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 3116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "67595:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "67609:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "67601:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "67623:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "67615:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "67635:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "67627:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67600:41:0"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67651:0:0"
									},
									"scope": 3350,
									"src": "67586:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3154,
										"nodeType": "Block",
										"src": "68361:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3128,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3119,
														"src": "68375:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68391:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3129,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68383:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68383:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "68375:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3142,
												"nodeType": "IfStatement",
												"src": "68371:88:0",
												"trueBody": {
													"id": 3141,
													"nodeType": "Block",
													"src": "68395:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "68445:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "68437:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3135,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "68437:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "68437:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3134,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "68416:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68416:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3140,
															"nodeType": "RevertStatement",
															"src": "68409:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3144,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3119,
															"src": "68495:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "68509:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "68501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3145,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "68501:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "68501:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3149,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "68513:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3150,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3125,
															"src": "68518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "68526:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 3143,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "68468:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "68468:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3153,
												"nodeType": "ExpressionStatement",
												"src": "68468:61:0"
											}
										]
									},
									"documentation": {
										"id": 3117,
										"nodeType": "StructuredDocumentation",
										"src": "67921:345:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 3155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "68280:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "68299:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "68291:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "68322:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "68305:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "68305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3121,
													"nodeType": "ArrayTypeName",
													"src": "68305:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "68344:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "68327:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3123,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "68327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3124,
													"nodeType": "ArrayTypeName",
													"src": "68327:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68290:61:0"
									},
									"returnParameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68361:0:0"
									},
									"scope": 3350,
									"src": "68271:265:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3194,
										"nodeType": "Block",
										"src": "68848:222:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3165,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3160,
														"src": "68862:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3166,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68874:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68874:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "68862:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3179,
												"nodeType": "IfStatement",
												"src": "68858:94:0",
												"trueBody": {
													"id": 3178,
													"nodeType": "Block",
													"src": "68886:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "68938:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "68930:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3172,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "68930:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "68930:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3171,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "68907:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68907:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3177,
															"nodeType": "RevertStatement",
															"src": "68900:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3180,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "68961:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 3183,
															"indexExpression": {
																"id": 3181,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3158,
																"src": "68980:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "68961:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3184,
														"indexExpression": {
															"id": 3182,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3160,
															"src": "68987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "68961:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3185,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3162,
														"src": "68999:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "68961:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3187,
												"nodeType": "ExpressionStatement",
												"src": "68961:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3189,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3158,
															"src": "69037:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3190,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3160,
															"src": "69044:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3191,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3162,
															"src": "69054:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3188,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "69022:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69022:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3193,
												"nodeType": "EmitStatement",
												"src": "69017:46:0"
											}
										]
									},
									"documentation": {
										"id": 3156,
										"nodeType": "StructuredDocumentation",
										"src": "68542:208:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 3195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "68764:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "68791:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "68783:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "68806:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "68798:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3162,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "68821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "68816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "68816:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68782:48:0"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68848:0:0"
									},
									"scope": 3350,
									"src": "68755:315:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3262,
										"nodeType": "Block",
										"src": "69440:782:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 3211,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3202,
																"src": "69454:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "69457:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "69454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "69462:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "69454:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69471:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "69454:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3261,
												"nodeType": "IfStatement",
												"src": "69450:766:0",
												"trueBody": {
													"id": 3260,
													"nodeType": "Block",
													"src": "69474:742:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 3240,
																		"nodeType": "Block",
																		"src": "69590:206:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 3233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3229,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3227,
																						"src": "69612:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 3230,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2182,
																								"src": "69624:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2182_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 3231,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "69641:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2163,
																							"src": "69624:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 3232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "69659:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "69624:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "69612:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3239,
																				"nodeType": "IfStatement",
																				"src": "69608:174:0",
																				"trueBody": {
																					"id": 3238,
																					"nodeType": "Block",
																					"src": "69669:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 3235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3202,
																										"src": "69760:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 3234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 211,
																									"src": "69737:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 3236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "69737:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3237,
																							"nodeType": "RevertStatement",
																							"src": "69730:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3241,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3228,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3227,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "69580:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 3241,
																				"src": "69573:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 3226,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "69573:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "69572:17:0"
																	},
																	"src": "69564:232:0"
																},
																{
																	"block": {
																		"id": 3257,
																		"nodeType": "Block",
																		"src": "69825:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3245,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3243,
																							"src": "69847:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 3246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "69854:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "69847:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "69864:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "69847:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 3255,
																					"nodeType": "Block",
																					"src": "70002:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "70088:86:0",
																								"nodeType": "YulBlock",
																								"src": "70088:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "70125:2:0",
																															"nodeType": "YulLiteral",
																															"src": "70125:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "70129:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "70129:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "70121:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "70121:3:0"
																													},
																													"nativeSrc": "70121:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "70121:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "70144:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "70144:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "70138:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "70138:5:0"
																													},
																													"nativeSrc": "70138:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "70138:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "70114:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "70114:6:0"
																											},
																											"nativeSrc": "70114:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "70114:38:0"
																										},
																										"nativeSrc": "70114:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "70114:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 3243,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "70129:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 3243,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "70144:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 3254,
																							"nodeType": "InlineAssembly",
																							"src": "70079:95:0"
																						}
																					]
																				},
																				"id": 3256,
																				"nodeType": "IfStatement",
																				"src": "69843:349:0",
																				"trueBody": {
																					"id": 3253,
																					"nodeType": "Block",
																					"src": "69867:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 3250,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3202,
																										"src": "69974:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 3249,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 211,
																									"src": "69951:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 3251,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "69951:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3252,
																							"nodeType": "RevertStatement",
																							"src": "69944:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3258,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3244,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3243,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "69817:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 3258,
																				"src": "69804:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 3242,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "69804:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "69803:21:0"
																	},
																	"src": "69797:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 3220,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3198,
																		"src": "69531:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3221,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3200,
																		"src": "69541:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3222,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3204,
																		"src": "69547:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3223,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3206,
																		"src": "69551:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3224,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3208,
																		"src": "69558:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3217,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3202,
																				"src": "69509:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3216,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "69492:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2182_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 3218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "69492:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$2182",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 3219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "69513:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2163,
																	"src": "69492:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 3225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "69492:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 3259,
															"nodeType": "TryStatement",
															"src": "69488:718:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3196,
										"nodeType": "StructuredDocumentation",
										"src": "69076:167:0",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 3263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "69257:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "69305:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "69297:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "69331:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "69323:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "69353:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "69345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3204,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "69373:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "69365:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "69393:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "69385:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "69421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3263,
												"src": "69408:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "69408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69287:144:0"
									},
									"returnParameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69440:0:0"
									},
									"scope": 3350,
									"src": "69248:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3332,
										"nodeType": "Block",
										"src": "70627:824:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 3281,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3270,
																"src": "70641:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "70644:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "70641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "70649:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "70641:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "70658:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "70641:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3331,
												"nodeType": "IfStatement",
												"src": "70637:808:0",
												"trueBody": {
													"id": 3330,
													"nodeType": "Block",
													"src": "70661:784:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 3310,
																		"nodeType": "Block",
																		"src": "70814:211:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 3303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3299,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3297,
																						"src": "70836:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 3300,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2182,
																								"src": "70848:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2182_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 3301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "70865:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2181,
																							"src": "70848:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 3302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "70888:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "70848:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "70836:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3309,
																				"nodeType": "IfStatement",
																				"src": "70832:179:0",
																				"trueBody": {
																					"id": 3308,
																					"nodeType": "Block",
																					"src": "70898:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 3305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3270,
																										"src": "70989:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 3304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 211,
																									"src": "70966:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 3306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "70966:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3307,
																							"nodeType": "RevertStatement",
																							"src": "70959:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3311,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3298,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3297,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "70791:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 3311,
																				"src": "70784:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 3296,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "70784:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "70766:47:0"
																	},
																	"src": "70758:267:0"
																},
																{
																	"block": {
																		"id": 3327,
																		"nodeType": "Block",
																		"src": "71054:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3315,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3313,
																							"src": "71076:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 3316,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "71083:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "71076:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3317,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "71093:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "71076:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 3325,
																					"nodeType": "Block",
																					"src": "71231:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "71317:86:0",
																								"nodeType": "YulBlock",
																								"src": "71317:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "71354:2:0",
																															"nodeType": "YulLiteral",
																															"src": "71354:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "71358:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "71358:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "71350:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "71350:3:0"
																													},
																													"nativeSrc": "71350:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "71350:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "71373:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "71373:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "71367:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "71367:5:0"
																													},
																													"nativeSrc": "71367:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "71367:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "71343:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "71343:6:0"
																											},
																											"nativeSrc": "71343:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "71343:38:0"
																										},
																										"nativeSrc": "71343:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "71343:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 3313,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "71358:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 3313,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "71373:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 3324,
																							"nodeType": "InlineAssembly",
																							"src": "71308:95:0"
																						}
																					]
																				},
																				"id": 3326,
																				"nodeType": "IfStatement",
																				"src": "71072:349:0",
																				"trueBody": {
																					"id": 3323,
																					"nodeType": "Block",
																					"src": "71096:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 3320,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3270,
																										"src": "71203:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 3319,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 211,
																									"src": "71180:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 3321,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "71180:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3322,
																							"nodeType": "RevertStatement",
																							"src": "71173:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3328,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3314,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3313,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "71046:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 3328,
																				"src": "71033:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 3312,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "71033:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "71032:21:0"
																	},
																	"src": "71026:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 3290,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3266,
																		"src": "70723:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3291,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3268,
																		"src": "70733:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3292,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3273,
																		"src": "70739:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 3293,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3276,
																		"src": "70744:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 3294,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3278,
																		"src": "70752:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3287,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3270,
																				"src": "70696:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3286,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "70679:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2182_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 3288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "70679:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$2182",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 3289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "70700:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2181,
																	"src": "70679:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 3295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70679:78:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 3329,
															"nodeType": "TryStatement",
															"src": "70675:760:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3264,
										"nodeType": "StructuredDocumentation",
										"src": "70228:177:0",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 3333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "70419:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "70472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "70464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "70498:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "70490:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "70520:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "70512:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "70549:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "70532:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3271,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "70532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3272,
													"nodeType": "ArrayTypeName",
													"src": "70532:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "70579:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "70562:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3274,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "70562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3275,
													"nodeType": "ArrayTypeName",
													"src": "70562:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "70608:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "70595:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "70595:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70454:164:0"
									},
									"returnParameters": {
										"id": 3280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70627:0:0"
									},
									"scope": 3350,
									"src": "70410:1041:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3348,
										"nodeType": "Block",
										"src": "71725:691:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "71787:623:0",
													"nodeType": "YulBlock",
													"src": "71787:623:0",
													"statements": [
														{
															"nativeSrc": "71845:21:0",
															"nodeType": "YulAssignment",
															"src": "71845:21:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "71861:4:0",
																		"nodeType": "YulLiteral",
																		"src": "71861:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "71855:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "71855:5:0"
																},
																"nativeSrc": "71855:11:0",
																"nodeType": "YulFunctionCall",
																"src": "71855:11:0"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "71845:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "71845:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "71923:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "71923:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "71931:1:0",
																		"nodeType": "YulLiteral",
																		"src": "71931:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "71916:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "71916:6:0"
																},
																"nativeSrc": "71916:17:0",
																"nodeType": "YulFunctionCall",
																"src": "71916:17:0"
															},
															"nativeSrc": "71916:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "71916:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "72054:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "72054:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "72062:4:0",
																				"nodeType": "YulLiteral",
																				"src": "72062:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "72050:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "72050:3:0"
																		},
																		"nativeSrc": "72050:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "72050:17:0"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "72069:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "72069:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "72043:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "72043:6:0"
																},
																"nativeSrc": "72043:35:0",
																"nodeType": "YulFunctionCall",
																"src": "72043:35:0"
															},
															"nativeSrc": "72043:35:0",
															"nodeType": "YulExpressionStatement",
															"src": "72043:35:0"
														},
														{
															"nativeSrc": "72169:27:0",
															"nodeType": "YulAssignment",
															"src": "72169:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "72183:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "72183:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "72191:4:0",
																		"nodeType": "YulLiteral",
																		"src": "72191:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "72179:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "72179:3:0"
																},
																"nativeSrc": "72179:17:0",
																"nodeType": "YulFunctionCall",
																"src": "72179:17:0"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "72169:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "72169:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "72216:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "72216:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "72224:1:0",
																		"nodeType": "YulLiteral",
																		"src": "72224:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "72209:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "72209:6:0"
																},
																"nativeSrc": "72209:17:0",
																"nodeType": "YulFunctionCall",
																"src": "72209:17:0"
															},
															"nativeSrc": "72209:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "72209:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "72250:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "72250:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "72258:4:0",
																				"nodeType": "YulLiteral",
																				"src": "72258:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "72246:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "72246:3:0"
																		},
																		"nativeSrc": "72246:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "72246:17:0"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "72265:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "72265:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "72239:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "72239:6:0"
																},
																"nativeSrc": "72239:35:0",
																"nodeType": "YulFunctionCall",
																"src": "72239:35:0"
															},
															"nativeSrc": "72239:35:0",
															"nodeType": "YulExpressionStatement",
															"src": "72239:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "72376:4:0",
																		"nodeType": "YulLiteral",
																		"src": "72376:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "72386:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "72386:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "72394:4:0",
																				"nodeType": "YulLiteral",
																				"src": "72394:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "72382:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "72382:3:0"
																		},
																		"nativeSrc": "72382:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "72382:17:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "72369:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "72369:6:0"
																},
																"nativeSrc": "72369:31:0",
																"nodeType": "YulFunctionCall",
																"src": "72369:31:0"
															},
															"nativeSrc": "72369:31:0",
															"nodeType": "YulExpressionStatement",
															"src": "72369:31:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3342,
														"isOffset": false,
														"isSlot": false,
														"src": "71845:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3342,
														"isOffset": false,
														"isSlot": false,
														"src": "71923:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3342,
														"isOffset": false,
														"isSlot": false,
														"src": "72054:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3342,
														"isOffset": false,
														"isSlot": false,
														"src": "72183:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3345,
														"isOffset": false,
														"isSlot": false,
														"src": "72169:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3345,
														"isOffset": false,
														"isSlot": false,
														"src": "72216:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3345,
														"isOffset": false,
														"isSlot": false,
														"src": "72250:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3345,
														"isOffset": false,
														"isSlot": false,
														"src": "72386:6:0",
														"valueSize": 1
													},
													{
														"declaration": 3336,
														"isOffset": false,
														"isSlot": false,
														"src": "72069:8:0",
														"valueSize": 1
													},
													{
														"declaration": 3338,
														"isOffset": false,
														"isSlot": false,
														"src": "72265:8:0",
														"valueSize": 1
													}
												],
												"id": 3347,
												"nodeType": "InlineAssembly",
												"src": "71778:632:0"
											}
										]
									},
									"documentation": {
										"id": 3334,
										"nodeType": "StructuredDocumentation",
										"src": "71457:105:0",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 3349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "71576:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "71612:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "71604:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3338,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "71638:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "71630:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71594:58:0"
									},
									"returnParameters": {
										"id": 3346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3342,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "71692:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "71675:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3340,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "71675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3341,
													"nodeType": "ArrayTypeName",
													"src": "71675:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3345,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "71717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3349,
												"src": "71700:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3343,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "71700:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3344,
													"nodeType": "ArrayTypeName",
													"src": "71700:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71674:50:0"
									},
									"scope": 3350,
									"src": "71567:849:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3440,
							"src": "56214:16204:0",
							"usedErrors": [
								201,
								206,
								211,
								218,
								223,
								228,
								235
							],
							"usedEvents": [
								2199,
								2214,
								2223,
								2230
							]
						},
						{
							"id": 3351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "72448:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "6d6f636b555249",
											"id": 3353,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "72513:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_6424f5f7a5cfc78083d41f73fbda80d7b77575c812bc0595b3694716ce562fd4",
												"typeString": "literal_string \"mockURI\""
											},
											"value": "mockURI"
										}
									],
									"baseName": {
										"id": 3352,
										"name": "ERC1155",
										"nameLocations": [
											"72505:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3350,
										"src": "72505:7:0"
									},
									"id": 3354,
									"nodeType": "InheritanceSpecifier",
									"src": "72505:18:0"
								}
							],
							"canonicalName": "mockERC1155Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3394,
							"linearizedBaseContracts": [
								3394,
								3350,
								236,
								2315,
								2302,
								2143,
								2122,
								1605
							],
							"name": "mockERC1155Token",
							"nameLocation": "72485:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3375,
										"nodeType": "Block",
										"src": "72544:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "72560:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72564:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "72560:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 3360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72572:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "3130",
															"id": 3361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72575:8:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000"
															},
															"value": "10"
														},
														{
															"hexValue": "3078",
															"id": 3362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72585:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																"typeString": "literal_string \"0x\""
															},
															"value": "0x"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																"typeString": "literal_string \"0x\""
															}
														],
														"id": 3357,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "72554:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72554:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3364,
												"nodeType": "ExpressionStatement",
												"src": "72554:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "313031",
																	"id": 3368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "72614:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_101_by_1",
																		"typeString": "int_const 101"
																	},
																	"value": "101"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_101_by_1",
																		"typeString": "int_const 101"
																	}
																],
																"id": 3367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "72606:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "72606:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "72606:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 3370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72620:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "302e31",
															"id": 3371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72623:9:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000_by_1",
																"typeString": "int_const 100000000000000000"
															},
															"value": "0.1"
														},
														{
															"hexValue": "3078",
															"id": 3372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72634:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																"typeString": "literal_string \"0x\""
															},
															"value": "0x"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000_by_1",
																"typeString": "int_const 100000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																"typeString": "literal_string \"0x\""
															}
														],
														"id": 3365,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "72600:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72600:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3374,
												"nodeType": "ExpressionStatement",
												"src": "72600:39:0"
											}
										]
									},
									"id": 3376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72541:2:0"
									},
									"returnParameters": {
										"id": 3356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72544:0:0"
									},
									"scope": 3394,
									"src": "72530:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3392,
										"nodeType": "Block",
										"src": "72712:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3386,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3378,
															"src": "72728:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3387,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3380,
															"src": "72733:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3388,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3382,
															"src": "72738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3078",
															"id": 3389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72747:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																"typeString": "literal_string \"0x\""
															},
															"value": "0x"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																"typeString": "literal_string \"0x\""
															}
														],
														"id": 3385,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "72722:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72722:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3391,
												"nodeType": "ExpressionStatement",
												"src": "72722:30:0"
											}
										]
									},
									"functionSelector": "156e29f6",
									"id": 3393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "72661:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "72674:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3393,
												"src": "72666:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "72684:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3393,
												"src": "72679:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3379,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3382,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "72694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3393,
												"src": "72689:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3381,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72689:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72665:37:0"
									},
									"returnParameters": {
										"id": 3384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72712:0:0"
									},
									"scope": 3394,
									"src": "72652:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "72476:285:0",
							"usedErrors": [
								201,
								206,
								211,
								218,
								223,
								228,
								235
							],
							"usedEvents": [
								2199,
								2214,
								2223,
								2230
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "43444243",
											"id": 3396,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "72796:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_29dcda14c081de05bacf3bb510e96376232101cf660af759fa08aacbc3a4d3de",
												"typeString": "literal_string \"CDBC\""
											},
											"value": "CDBC"
										},
										{
											"hexValue": "43444243",
											"id": 3397,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "72804:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_29dcda14c081de05bacf3bb510e96376232101cf660af759fa08aacbc3a4d3de",
												"typeString": "literal_string \"CDBC\""
											},
											"value": "CDBC"
										}
									],
									"baseName": {
										"id": 3395,
										"name": "ERC20",
										"nameLocations": [
											"72790:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2111,
										"src": "72790:5:0"
									},
									"id": 3398,
									"nodeType": "InheritanceSpecifier",
									"src": "72790:21:0"
								}
							],
							"canonicalName": "mockERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3439,
							"linearizedBaseContracts": [
								3439,
								2111,
								141,
								100,
								77,
								1605
							],
							"name": "mockERC20Token",
							"nameLocation": "72772:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b8a00d6d8ca1be30bfec34d8f97e55f0f0fd9eeb7fb46e030516363d4cfe1ad6",
									"id": 3402,
									"name": "Log",
									"nameLocation": "72824:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "72836:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "72828:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72827:14:0"
									},
									"src": "72818:24:0"
								},
								{
									"body": {
										"id": 3424,
										"nodeType": "Block",
										"src": "72862:112:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "72881:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72885:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "72881:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3405,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3402,
														"src": "72877:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72877:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3409,
												"nodeType": "EmitStatement",
												"src": "72872:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3411,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "72908:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72912:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "72908:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130",
															"id": 3413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72920:8:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000"
															}
														],
														"id": 3410,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "72902:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72902:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3415,
												"nodeType": "ExpressionStatement",
												"src": "72902:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "313031",
																	"id": 3419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "72953:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_101_by_1",
																		"typeString": "int_const 101"
																	},
																	"value": "101"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_101_by_1",
																		"typeString": "int_const 101"
																	}
																],
																"id": 3418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "72945:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "72945:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "72945:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 3421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72959:7:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														],
														"id": 3416,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "72939:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72939:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3423,
												"nodeType": "ExpressionStatement",
												"src": "72939:28:0"
											}
										]
									},
									"id": 3425,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72859:2:0"
									},
									"returnParameters": {
										"id": 3404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72862:0:0"
									},
									"scope": 3439,
									"src": "72848:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3437,
										"nodeType": "Block",
										"src": "73030:36:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3433,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3427,
															"src": "73046:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3434,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3429,
															"src": "73051:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3432,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "73040:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73040:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3436,
												"nodeType": "ExpressionStatement",
												"src": "73040:19:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "72989:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "73002:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3438,
												"src": "72994:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "73012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3438,
												"src": "73007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "73007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72993:27:0"
									},
									"returnParameters": {
										"id": 3431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73030:0:0"
									},
									"scope": 3439,
									"src": "72980:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3440,
							"src": "72763:305:0",
							"usedErrors": [
								111,
								116,
								121,
								130,
								135,
								140
							],
							"usedEvents": [
								11,
								20,
								3402
							]
						}
					],
					"src": "146:72923:0"
				},
				"id": 0
			}
		}
	}
}